ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.0
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2020, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 122 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 4


  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB1:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 139 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 148 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 149 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 5


  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB2:
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 12


 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 585 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 13


 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 593 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 625 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 14


 106              		.loc 1 636 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 639 0
 112 0014 1460     		str	r4, [r2]
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 641 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 642:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 642 0
 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB3:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 662 0
 136              		.cfi_startproc
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 15


 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 664 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 666 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 670 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 672 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 686 0
 169              		@ sp needed
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 16


 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB4:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 699 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 703 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 713 0
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 17


 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 722 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 725 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE4:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB5:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 18


 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 760 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 763 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 765 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 767 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 766 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 765 0
 257 001e 2360     		str	r3, [r4]
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 19


 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 770 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 771:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 771 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE5:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysLvdDisable,"ax",%progbits
 273              		.align	2
 274              		.global	CySysLvdDisable
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysLvdDisable, %function
 278              	CySysLvdDisable:
 279              	.LFB8:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 27


1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 28


1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 29


1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 30


1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 31


1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 32


1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 33


1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 34


1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 35


1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 36


1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 37


1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 38


1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 39


1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 40


1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 41


2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 42


2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 43


2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 44


2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 45


2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 46


2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 47


2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 48


2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 49


2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 50


2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 51


2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 52


2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 53


2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 2693 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 285              		.loc 1 2694 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0221     		movs	r1, #2
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 291              		.loc 1 2695 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1368     		ldr	r3, [r2]
 294 000e 0139     		subs	r1, r1, #1
 295 0010 8B43     		bics	r3, r1
 296 0012 1360     		str	r3, [r2]
2696:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 2696 0
 298              		@ sp needed
 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 08000B40 		.word	1074462728
 304 001c 18000B40 		.word	1074462744
 305              		.cfi_endproc
 306              	.LFE8:
 307              		.size	CySysLvdDisable, .-CySysLvdDisable
 308              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 309              		.align	2
 310              		.global	CySysLvdGetInterruptSource
 311              		.code	16
 312              		.thumb_func
 313              		.type	CySysLvdGetInterruptSource, %function
 314              	CySysLvdGetInterruptSource:
 315              	.LFB9:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 54


2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
 316              		.loc 1 2711 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 321              		.loc 1 2712 0
 322 0000 024B     		ldr	r3, .L25
 323 0002 1B68     		ldr	r3, [r3]
 324 0004 0220     		movs	r0, #2
 325 0006 1840     		ands	r0, r3
2713:Generated_Source\PSoC4/CyLib.c ****     }
 326              		.loc 1 2713 0
 327              		@ sp needed
 328 0008 7047     		bx	lr
 329              	.L26:
 330 000a C046     		.align	2
 331              	.L25:
 332 000c 04000B40 		.word	1074462724
 333              		.cfi_endproc
 334              	.LFE9:
 335              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 336              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 337              		.align	2
 338              		.global	CySysLvdClearInterrupt
 339              		.code	16
 340              		.thumb_func
 341              		.type	CySysLvdClearInterrupt, %function
 342              	CySysLvdClearInterrupt:
 343              	.LFB10:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 344              		.loc 1 2727 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 55


 349              		.loc 1 2728 0
 350 0000 0222     		movs	r2, #2
 351 0002 014B     		ldr	r3, .L28
 352 0004 1A60     		str	r2, [r3]
2729:Generated_Source\PSoC4/CyLib.c ****     }
 353              		.loc 1 2729 0
 354              		@ sp needed
 355 0006 7047     		bx	lr
 356              	.L29:
 357              		.align	2
 358              	.L28:
 359 0008 04000B40 		.word	1074462724
 360              		.cfi_endproc
 361              	.LFE10:
 362              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 363              		.section	.text.CySysGetResetReason,"ax",%progbits
 364              		.align	2
 365              		.global	CySysGetResetReason
 366              		.code	16
 367              		.thumb_func
 368              		.type	CySysGetResetReason, %function
 369              	CySysGetResetReason:
 370              	.LFB11:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 371              		.loc 1 2753 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL16:
 377 0000 0200     		movs	r2, r0
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 56


 378              		.loc 1 2756 0
 379 0002 1920     		movs	r0, #25
 380              	.LVL17:
 381 0004 0240     		ands	r2, r0
 382              	.LVL18:
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 383              		.loc 1 2757 0
 384 0006 0249     		ldr	r1, .L31
 385 0008 0B68     		ldr	r3, [r1]
 386 000a 1840     		ands	r0, r3
 387              	.LVL19:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 388              		.loc 1 2759 0
 389 000c 0A60     		str	r2, [r1]
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 390              		.loc 1 2762 0
 391              		@ sp needed
 392 000e 7047     		bx	lr
 393              	.L32:
 394              		.align	2
 395              	.L31:
 396 0010 00030B40 		.word	1074463488
 397              		.cfi_endproc
 398              	.LFE11:
 399              		.size	CySysGetResetReason, .-CySysGetResetReason
 400              		.section	.text.CyDisableInts,"ax",%progbits
 401              		.align	2
 402              		.global	CyDisableInts
 403              		.code	16
 404              		.thumb_func
 405              		.type	CyDisableInts, %function
 406              	CyDisableInts:
 407              	.LFB12:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 408              		.loc 1 2776 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 57


2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 413              		.loc 1 2780 0
 414 0000 024B     		ldr	r3, .L34
 415 0002 1868     		ldr	r0, [r3]
 416              	.LVL20:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 417              		.loc 1 2783 0
 418 0004 0122     		movs	r2, #1
 419 0006 5242     		rsbs	r2, r2, #0
 420 0008 1A60     		str	r2, [r3]
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 421              		.loc 1 2786 0
 422              		@ sp needed
 423 000a 7047     		bx	lr
 424              	.L35:
 425              		.align	2
 426              	.L34:
 427 000c 80E100E0 		.word	-536813184
 428              		.cfi_endproc
 429              	.LFE12:
 430              		.size	CyDisableInts, .-CyDisableInts
 431              		.section	.text.CyEnableInts,"ax",%progbits
 432              		.align	2
 433              		.global	CyEnableInts
 434              		.code	16
 435              		.thumb_func
 436              		.type	CyEnableInts, %function
 437              	CyEnableInts:
 438              	.LFB13:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 439              		.loc 1 2799 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              	.LVL21:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 445              		.loc 1 2800 0
 446 0000 014B     		ldr	r3, .L37
 447 0002 1860     		str	r0, [r3]
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 58


2801:Generated_Source\PSoC4/CyLib.c **** }
 448              		.loc 1 2801 0
 449              		@ sp needed
 450 0004 7047     		bx	lr
 451              	.L38:
 452 0006 C046     		.align	2
 453              	.L37:
 454 0008 00E100E0 		.word	-536813312
 455              		.cfi_endproc
 456              	.LFE13:
 457              		.size	CyEnableInts, .-CyEnableInts
 458              		.section	.text.CyIntEnable,"ax",%progbits
 459              		.align	2
 460              		.global	CyIntEnable
 461              		.code	16
 462              		.thumb_func
 463              		.type	CyIntEnable, %function
 464              	CyIntEnable:
 465              	.LFB20:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 59


2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 60


2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 61


2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 466              		.loc 1 2982 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL22:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 472              		.loc 1 2983 0
 473 0000 1F23     		movs	r3, #31
 474 0002 1840     		ands	r0, r3
 475              	.LVL23:
 476 0004 1E3B     		subs	r3, r3, #30
 477 0006 8340     		lsls	r3, r3, r0
 478 0008 014A     		ldr	r2, .L40
 479 000a 1360     		str	r3, [r2]
2984:Generated_Source\PSoC4/CyLib.c **** }
 480              		.loc 1 2984 0
 481              		@ sp needed
 482 000c 7047     		bx	lr
 483              	.L41:
 484 000e C046     		.align	2
 485              	.L40:
 486 0010 00E100E0 		.word	-536813312
 487              		.cfi_endproc
 488              	.LFE20:
 489              		.size	CyIntEnable, .-CyIntEnable
 490              		.section	.text.CyIntGetState,"ax",%progbits
 491              		.align	2
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 62


 492              		.global	CyIntGetState
 493              		.code	16
 494              		.thumb_func
 495              		.type	CyIntGetState, %function
 496              	CyIntGetState:
 497              	.LFB21:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 498              		.loc 1 3000 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL24:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 504              		.loc 1 3002 0
 505 0000 044B     		ldr	r3, .L43
 506 0002 1B68     		ldr	r3, [r3]
 507 0004 1F22     		movs	r2, #31
 508 0006 1040     		ands	r0, r2
 509              	.LVL25:
 510 0008 C340     		lsrs	r3, r3, r0
 511 000a 1800     		movs	r0, r3
 512 000c 0123     		movs	r3, #1
 513 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 3003 0
 515              		@ sp needed
 516 0010 7047     		bx	lr
 517              	.L44:
 518 0012 C046     		.align	2
 519              	.L43:
 520 0014 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE21:
 523              		.size	CyIntGetState, .-CyIntGetState
 524              		.section	.text.CyIntDisable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntDisable
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntDisable, %function
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 63


 530              	CyIntDisable:
 531              	.LFB22:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 3016 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL26:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 3017 0
 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL27:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** }
 546              		.loc 1 3018 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 80E100E0 		.word	-536813184
 553              		.cfi_endproc
 554              	.LFE22:
 555              		.size	CyIntDisable, .-CyIntDisable
 556              		.section	.text.CyIntSetPending,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntSetPending
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntSetPending, %function
 562              	CyIntSetPending:
 563              	.LFB23:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 64


3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 564              		.loc 1 3030 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL28:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 570              		.loc 1 3031 0
 571 0000 1F23     		movs	r3, #31
 572 0002 1840     		ands	r0, r3
 573              	.LVL29:
 574 0004 1E3B     		subs	r3, r3, #30
 575 0006 8340     		lsls	r3, r3, r0
 576 0008 014A     		ldr	r2, .L49
 577 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** }
 578              		.loc 1 3032 0
 579              		@ sp needed
 580 000c 7047     		bx	lr
 581              	.L50:
 582 000e C046     		.align	2
 583              	.L49:
 584 0010 00E200E0 		.word	-536813056
 585              		.cfi_endproc
 586              	.LFE23:
 587              		.size	CyIntSetPending, .-CyIntSetPending
 588              		.section	.text.CyIntClearPending,"ax",%progbits
 589              		.align	2
 590              		.global	CyIntClearPending
 591              		.code	16
 592              		.thumb_func
 593              		.type	CyIntClearPending, %function
 594              	CyIntClearPending:
 595              	.LFB24:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 596              		.loc 1 3045 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL30:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 65


3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 602              		.loc 1 3046 0
 603 0000 1F23     		movs	r3, #31
 604 0002 1840     		ands	r0, r3
 605              	.LVL31:
 606 0004 1E3B     		subs	r3, r3, #30
 607 0006 8340     		lsls	r3, r3, r0
 608 0008 014A     		ldr	r2, .L52
 609 000a 1360     		str	r3, [r2]
3047:Generated_Source\PSoC4/CyLib.c **** }
 610              		.loc 1 3047 0
 611              		@ sp needed
 612 000c 7047     		bx	lr
 613              	.L53:
 614 000e C046     		.align	2
 615              	.L52:
 616 0010 80E200E0 		.word	-536812928
 617              		.cfi_endproc
 618              	.LFE24:
 619              		.size	CyIntClearPending, .-CyIntClearPending
 620              		.section	.text.CyHalt,"ax",%progbits
 621              		.align	2
 622              		.global	CyHalt
 623              		.code	16
 624              		.thumb_func
 625              		.type	CyHalt, %function
 626              	CyHalt:
 627              	.LFB25:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 628              		.loc 1 3060 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL32:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 634              		.loc 1 3069 0
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 66


 635              		.syntax divided
 636              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 637 0000 01BE     		    bkpt    1
 638              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 639              		.loc 1 3073 0
 640              		.thumb
 641              		.syntax unified
 642              		@ sp needed
 643 0002 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE25:
 646              		.size	CyHalt, .-CyHalt
 647              		.section	.text.CyIntSetSysVector,"ax",%progbits
 648              		.align	2
 649              		.global	CyIntSetSysVector
 650              		.code	16
 651              		.thumb_func
 652              		.type	CyIntSetSysVector, %function
 653              	CyIntSetSysVector:
 654              	.LFB14:
2824:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 655              		.loc 1 2824 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              	.LVL33:
 660 0000 70B5     		push	{r4, r5, r6, lr}
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 4, -16
 663              		.cfi_offset 5, -12
 664              		.cfi_offset 6, -8
 665              		.cfi_offset 14, -4
 666 0002 0400     		movs	r4, r0
 667 0004 0D00     		movs	r5, r1
 668              	.LVL34:
2828:Generated_Source\PSoC4/CyLib.c **** 
 669              		.loc 1 2828 0
 670 0006 0F28     		cmp	r0, #15
 671 0008 02D9     		bls	.L56
2828:Generated_Source\PSoC4/CyLib.c **** 
 672              		.loc 1 2828 0 is_stmt 0 discriminator 1
 673 000a 0020     		movs	r0, #0
 674              	.LVL35:
 675 000c FFF7FEFF 		bl	CyHalt
 676              	.LVL36:
 677              	.L56:
2831:Generated_Source\PSoC4/CyLib.c **** 
 678              		.loc 1 2831 0 is_stmt 1
 679 0010 A400     		lsls	r4, r4, #2
 680 0012 8023     		movs	r3, #128
 681 0014 9B05     		lsls	r3, r3, #22
 682 0016 9C46     		mov	ip, r3
 683 0018 6444     		add	r4, r4, ip
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 67


 684 001a 2068     		ldr	r0, [r4]
 685              	.LVL37:
2834:Generated_Source\PSoC4/CyLib.c **** 
 686              		.loc 1 2834 0
 687 001c 2560     		str	r5, [r4]
2837:Generated_Source\PSoC4/CyLib.c **** 
 688              		.loc 1 2837 0
 689              		@ sp needed
 690              	.LVL38:
 691 001e 70BD     		pop	{r4, r5, r6, pc}
 692              		.cfi_endproc
 693              	.LFE14:
 694              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 695              		.section	.text.CyIntGetSysVector,"ax",%progbits
 696              		.align	2
 697              		.global	CyIntGetSysVector
 698              		.code	16
 699              		.thumb_func
 700              		.type	CyIntGetSysVector, %function
 701              	CyIntGetSysVector:
 702              	.LFB15:
2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 703              		.loc 1 2858 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL39:
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
 712 0002 0400     		movs	r4, r0
 713              	.LVL40:
2861:Generated_Source\PSoC4/CyLib.c **** 
 714              		.loc 1 2861 0
 715 0004 0F28     		cmp	r0, #15
 716 0006 02D9     		bls	.L58
2861:Generated_Source\PSoC4/CyLib.c **** 
 717              		.loc 1 2861 0 is_stmt 0 discriminator 1
 718 0008 0020     		movs	r0, #0
 719              	.LVL41:
 720 000a FFF7FEFF 		bl	CyHalt
 721              	.LVL42:
 722              	.L58:
2863:Generated_Source\PSoC4/CyLib.c **** }
 723              		.loc 1 2863 0 is_stmt 1
 724 000e A400     		lsls	r4, r4, #2
 725 0010 8023     		movs	r3, #128
 726 0012 9B05     		lsls	r3, r3, #22
 727 0014 9C46     		mov	ip, r3
 728 0016 6444     		add	r4, r4, ip
 729 0018 2068     		ldr	r0, [r4]
2864:Generated_Source\PSoC4/CyLib.c **** 
 730              		.loc 1 2864 0
 731              		@ sp needed
 732 001a 10BD     		pop	{r4, pc}
 733              		.cfi_endproc
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 68


 734              	.LFE15:
 735              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 736              		.section	.text.CyIntSetVector,"ax",%progbits
 737              		.align	2
 738              		.global	CyIntSetVector
 739              		.code	16
 740              		.thumb_func
 741              		.type	CyIntSetVector, %function
 742              	CyIntSetVector:
 743              	.LFB16:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 744              		.loc 1 2880 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL43:
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 755 0002 0400     		movs	r4, r0
 756 0004 0D00     		movs	r5, r1
 757              	.LVL44:
2884:Generated_Source\PSoC4/CyLib.c **** 
 758              		.loc 1 2884 0
 759 0006 1F28     		cmp	r0, #31
 760 0008 02D9     		bls	.L60
2884:Generated_Source\PSoC4/CyLib.c **** 
 761              		.loc 1 2884 0 is_stmt 0 discriminator 1
 762 000a 0020     		movs	r0, #0
 763              	.LVL45:
 764 000c FFF7FEFF 		bl	CyHalt
 765              	.LVL46:
 766              	.L60:
2887:Generated_Source\PSoC4/CyLib.c **** 
 767              		.loc 1 2887 0 is_stmt 1
 768 0010 1034     		adds	r4, r4, #16
 769 0012 A400     		lsls	r4, r4, #2
 770 0014 8023     		movs	r3, #128
 771 0016 9B05     		lsls	r3, r3, #22
 772 0018 9C46     		mov	ip, r3
 773 001a 6444     		add	r4, r4, ip
 774 001c 2068     		ldr	r0, [r4]
 775              	.LVL47:
2890:Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2890 0
 777 001e 2560     		str	r5, [r4]
2893:Generated_Source\PSoC4/CyLib.c **** 
 778              		.loc 1 2893 0
 779              		@ sp needed
 780              	.LVL48:
 781 0020 70BD     		pop	{r4, r5, r6, pc}
 782              		.cfi_endproc
 783              	.LFE16:
 784              		.size	CyIntSetVector, .-CyIntSetVector
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 69


 785 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 786              		.align	2
 787              		.global	CyIntGetVector
 788              		.code	16
 789              		.thumb_func
 790              		.type	CyIntGetVector, %function
 791              	CyIntGetVector:
 792              	.LFB17:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 793              		.loc 1 2908 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL49:
 798 0000 10B5     		push	{r4, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 4, -8
 801              		.cfi_offset 14, -4
 802 0002 0400     		movs	r4, r0
 803              	.LVL50:
2911:Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 2911 0
 805 0004 1F28     		cmp	r0, #31
 806 0006 02D9     		bls	.L62
2911:Generated_Source\PSoC4/CyLib.c **** 
 807              		.loc 1 2911 0 is_stmt 0 discriminator 1
 808 0008 0020     		movs	r0, #0
 809              	.LVL51:
 810 000a FFF7FEFF 		bl	CyHalt
 811              	.LVL52:
 812              	.L62:
2913:Generated_Source\PSoC4/CyLib.c **** }
 813              		.loc 1 2913 0 is_stmt 1
 814 000e 1034     		adds	r4, r4, #16
 815 0010 A400     		lsls	r4, r4, #2
 816 0012 8023     		movs	r3, #128
 817 0014 9B05     		lsls	r3, r3, #22
 818 0016 9C46     		mov	ip, r3
 819 0018 6444     		add	r4, r4, ip
 820 001a 2068     		ldr	r0, [r4]
2914:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2914 0
 822              		@ sp needed
 823 001c 10BD     		pop	{r4, pc}
 824              		.cfi_endproc
 825              	.LFE17:
 826              		.size	CyIntGetVector, .-CyIntGetVector
 827 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 828              		.align	2
 829              		.global	CyIntSetPriority
 830              		.code	16
 831              		.thumb_func
 832              		.type	CyIntSetPriority, %function
 833              	CyIntSetPriority:
 834              	.LFB18:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 835              		.loc 1 2927 0
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 70


 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL53:
 840 0000 70B5     		push	{r4, r5, r6, lr}
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 846 0002 0400     		movs	r4, r0
 847 0004 0E00     		movs	r6, r1
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 848              		.loc 1 2932 0
 849 0006 0329     		cmp	r1, #3
 850 0008 02D9     		bls	.L64
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 851              		.loc 1 2932 0 is_stmt 0 discriminator 1
 852 000a 0020     		movs	r0, #0
 853              	.LVL54:
 854 000c FFF7FEFF 		bl	CyHalt
 855              	.LVL55:
 856              	.L64:
2933:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2933 0 is_stmt 1
 858 0010 1F2C     		cmp	r4, #31
 859 0012 02D9     		bls	.L65
2933:Generated_Source\PSoC4/CyLib.c **** 
 860              		.loc 1 2933 0 is_stmt 0 discriminator 1
 861 0014 0020     		movs	r0, #0
 862 0016 FFF7FEFF 		bl	CyHalt
 863              	.LVL56:
 864              	.L65:
2935:Generated_Source\PSoC4/CyLib.c **** 
 865              		.loc 1 2935 0 is_stmt 1
 866 001a 0325     		movs	r5, #3
 867 001c 2540     		ands	r5, r4
 868 001e ED00     		lsls	r5, r5, #3
 869 0020 0635     		adds	r5, r5, #6
 870              	.LVL57:
2937:Generated_Source\PSoC4/CyLib.c **** 
 871              		.loc 1 2937 0
 872 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 873              	.LVL58:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 874              		.loc 1 2939 0
 875 0026 A408     		lsrs	r4, r4, #2
 876 0028 A400     		lsls	r4, r4, #2
 877 002a 074B     		ldr	r3, .L66
 878 002c 9C46     		mov	ip, r3
 879 002e 6444     		add	r4, r4, ip
 880 0030 2168     		ldr	r1, [r4]
 881              	.LVL59:
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 882              		.loc 1 2940 0
 883 0032 0323     		movs	r3, #3
 884 0034 AB40     		lsls	r3, r3, r5
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 71


 885 0036 9943     		bics	r1, r3
 886              	.LVL60:
 887 0038 0B00     		movs	r3, r1
 888              	.LVL61:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 889              		.loc 1 2941 0
 890 003a 3100     		movs	r1, r6
 891              	.LVL62:
 892 003c A940     		lsls	r1, r1, r5
 893 003e 1943     		orrs	r1, r3
 894              	.LVL63:
2942:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2942 0
 896 0040 2160     		str	r1, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 897              		.loc 1 2944 0
 898 0042 FFF7FEFF 		bl	CyExitCriticalSection
 899              	.LVL64:
2945:Generated_Source\PSoC4/CyLib.c **** 
 900              		.loc 1 2945 0
 901              		@ sp needed
 902              	.LVL65:
 903 0046 70BD     		pop	{r4, r5, r6, pc}
 904              	.L67:
 905              		.align	2
 906              	.L66:
 907 0048 00E400E0 		.word	-536812544
 908              		.cfi_endproc
 909              	.LFE18:
 910              		.size	CyIntSetPriority, .-CyIntSetPriority
 911              		.section	.text.CyIntGetPriority,"ax",%progbits
 912              		.align	2
 913              		.global	CyIntGetPriority
 914              		.code	16
 915              		.thumb_func
 916              		.type	CyIntGetPriority, %function
 917              	CyIntGetPriority:
 918              	.LFB19:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 919              		.loc 1 2961 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              	.LVL66:
 924 0000 10B5     		push	{r4, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 928 0002 0400     		movs	r4, r0
2964:Generated_Source\PSoC4/CyLib.c **** 
 929              		.loc 1 2964 0
 930 0004 1F28     		cmp	r0, #31
 931 0006 02D9     		bls	.L69
2964:Generated_Source\PSoC4/CyLib.c **** 
 932              		.loc 1 2964 0 is_stmt 0 discriminator 1
 933 0008 0020     		movs	r0, #0
 934              	.LVL67:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 72


 935 000a FFF7FEFF 		bl	CyHalt
 936              	.LVL68:
 937              	.L69:
2966:Generated_Source\PSoC4/CyLib.c **** 
 938              		.loc 1 2966 0 is_stmt 1
 939 000e A308     		lsrs	r3, r4, #2
 940 0010 9B00     		lsls	r3, r3, #2
 941 0012 054A     		ldr	r2, .L70
 942 0014 9446     		mov	ip, r2
 943 0016 6344     		add	r3, r3, ip
 944 0018 1868     		ldr	r0, [r3]
 945 001a 0323     		movs	r3, #3
 946 001c 1C40     		ands	r4, r3
 947 001e E400     		lsls	r4, r4, #3
 948 0020 0634     		adds	r4, r4, #6
 949 0022 E040     		lsrs	r0, r0, r4
 950              	.LVL69:
2968:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2968 0
 952 0024 1840     		ands	r0, r3
 953              	.LVL70:
2969:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2969 0
 955              		@ sp needed
 956 0026 10BD     		pop	{r4, pc}
 957              	.L71:
 958              		.align	2
 959              	.L70:
 960 0028 00E400E0 		.word	-536812544
 961              		.cfi_endproc
 962              	.LFE19:
 963              		.size	CyIntGetPriority, .-CyIntGetPriority
 964              		.section	.text.CySoftwareReset,"ax",%progbits
 965              		.align	2
 966              		.global	CySoftwareReset
 967              		.code	16
 968              		.thumb_func
 969              		.type	CySoftwareReset, %function
 970              	CySoftwareReset:
 971              	.LFB26:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 972              		.loc 1 3084 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 73


3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 977              		.loc 1 3089 0
 978 0000 034A     		ldr	r2, .L73
 979 0002 1368     		ldr	r3, [r2]
 980 0004 1B04     		lsls	r3, r3, #16
 981 0006 1B0C     		lsrs	r3, r3, #16
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 982              		.loc 1 3090 0
 983 0008 0249     		ldr	r1, .L73+4
 984 000a 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 985              		.loc 1 3089 0
 986 000c 1360     		str	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 987              		.loc 1 3091 0
 988              		@ sp needed
 989 000e 7047     		bx	lr
 990              	.L74:
 991              		.align	2
 992              	.L73:
 993 0010 0CED00E0 		.word	-536810228
 994 0014 0400FA05 		.word	100270084
 995              		.cfi_endproc
 996              	.LFE26:
 997              		.size	CySoftwareReset, .-CySoftwareReset
 998              		.section	.text.CyDelay,"ax",%progbits
 999              		.align	2
 1000              		.global	CyDelay
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	CyDelay, %function
 1004              	CyDelay:
 1005              	.LFB27:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1006              		.loc 1 3104 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL71:
 1011 0000 10B5     		push	{r4, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 4, -8
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 74


 1014              		.cfi_offset 14, -4
 1015 0002 0400     		movs	r4, r0
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1016              		.loc 1 3105 0
 1017 0004 06E0     		b	.L76
 1018              	.LVL72:
 1019              	.L77:
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1020              		.loc 1 3110 0
 1021 0006 084B     		ldr	r3, .L78
 1022 0008 5868     		ldr	r0, [r3, #4]
 1023 000a FFF7FEFF 		bl	CyDelayCycles
 1024              	.LVL73:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1025              		.loc 1 3111 0
 1026 000e 074B     		ldr	r3, .L78+4
 1027 0010 9C46     		mov	ip, r3
 1028 0012 6444     		add	r4, r4, ip
 1029              	.LVL74:
 1030              	.L76:
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 3105 0
 1032 0014 8023     		movs	r3, #128
 1033 0016 1B02     		lsls	r3, r3, #8
 1034 0018 9C42     		cmp	r4, r3
 1035 001a F4D8     		bhi	.L77
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1036              		.loc 1 3114 0
 1037 001c 024B     		ldr	r3, .L78
 1038 001e 9868     		ldr	r0, [r3, #8]
 1039 0020 6043     		muls	r0, r4
 1040 0022 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL75:
3115:Generated_Source\PSoC4/CyLib.c **** }
 1042              		.loc 1 3115 0
 1043              		@ sp needed
 1044              	.LVL76:
 1045 0026 10BD     		pop	{r4, pc}
 1046              	.L79:
 1047              		.align	2
 1048              	.L78:
 1049 0028 00000000 		.word	.LANCHOR0
 1050 002c 0080FFFF 		.word	-32768
 1051              		.cfi_endproc
 1052              	.LFE27:
 1053              		.size	CyDelay, .-CyDelay
 1054              		.section	.text.CyDelayUs,"ax",%progbits
 1055              		.align	2
 1056              		.global	CyDelayUs
 1057              		.code	16
 1058              		.thumb_func
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 75


 1059              		.type	CyDelayUs, %function
 1060              	CyDelayUs:
 1061              	.LFB28:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1062              		.loc 1 3127 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL77:
 1067 0000 10B5     		push	{r4, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 4, -8
 1070              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1071              		.loc 1 3128 0
 1072 0002 034B     		ldr	r3, .L81
 1073 0004 1B7B     		ldrb	r3, [r3, #12]
 1074 0006 5843     		muls	r0, r3
 1075              	.LVL78:
 1076 0008 FFF7FEFF 		bl	CyDelayCycles
 1077              	.LVL79:
3129:Generated_Source\PSoC4/CyLib.c **** }
 1078              		.loc 1 3129 0
 1079              		@ sp needed
 1080 000c 10BD     		pop	{r4, pc}
 1081              	.L82:
 1082 000e C046     		.align	2
 1083              	.L81:
 1084 0010 00000000 		.word	.LANCHOR0
 1085              		.cfi_endproc
 1086              	.LFE28:
 1087              		.size	CyDelayUs, .-CyDelayUs
 1088              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1089              		.align	2
 1090              		.global	CySysClkWriteImoFreq
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	CySysClkWriteImoFreq, %function
 1094              	CySysClkWriteImoFreq:
 1095              	.LFB6:
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1096              		.loc 1 818 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              	.LVL80:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 76


 1101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1102              		.cfi_def_cfa_offset 20
 1103              		.cfi_offset 4, -20
 1104              		.cfi_offset 5, -16
 1105              		.cfi_offset 6, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 5746     		mov	r7, r10
 1109 0004 4E46     		mov	r6, r9
 1110 0006 C0B4     		push	{r6, r7}
 1111              		.cfi_def_cfa_offset 28
 1112              		.cfi_offset 9, -28
 1113              		.cfi_offset 10, -24
 1114 0008 83B0     		sub	sp, sp, #12
 1115              		.cfi_def_cfa_offset 40
 1116 000a 0400     		movs	r4, r0
 840:Generated_Source\PSoC4/CyLib.c **** 
 1117              		.loc 1 840 0
 1118 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1119              	.LVL81:
 1120 0010 0190     		str	r0, [sp, #4]
 1121              	.LVL82:
 890:Generated_Source\PSoC4/CyLib.c ****         {
 1122              		.loc 1 890 0
 1123 0012 E71E     		subs	r7, r4, #3
 1124 0014 2D2F     		cmp	r7, #45
 1125 0016 74D8     		bhi	.L84
 892:Generated_Source\PSoC4/CyLib.c ****             {
 1126              		.loc 1 892 0
 1127 0018 3F4B     		ldr	r3, .L94
 1128 001a 1B78     		ldrb	r3, [r3]
 1129 001c DBB2     		uxtb	r3, r3
 1130 001e 9C42     		cmp	r4, r3
 1131 0020 08D8     		bhi	.L85
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1132              		.loc 1 894 0
 1133 0022 3E4B     		ldr	r3, .L94+4
 1134 0024 1B78     		ldrb	r3, [r3]
 1135 0026 DBB2     		uxtb	r3, r3
 1136 0028 9A46     		mov	r10, r3
 1137              	.LVL83:
 895:Generated_Source\PSoC4/CyLib.c ****             }
 1138              		.loc 1 895 0
 1139 002a 3D4B     		ldr	r3, .L94+8
 1140 002c 1B78     		ldrb	r3, [r3]
 1141 002e DBB2     		uxtb	r3, r3
 1142 0030 9946     		mov	r9, r3
 1143              	.LVL84:
 1144 0032 31E0     		b	.L86
 1145              	.LVL85:
 1146              	.L85:
 897:Generated_Source\PSoC4/CyLib.c ****             {
 1147              		.loc 1 897 0
 1148 0034 3B4B     		ldr	r3, .L94+12
 1149 0036 1B78     		ldrb	r3, [r3]
 1150 0038 DBB2     		uxtb	r3, r3
 1151 003a 9C42     		cmp	r4, r3
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 77


 1152 003c 08D8     		bhi	.L87
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1153              		.loc 1 899 0
 1154 003e 3A4B     		ldr	r3, .L94+16
 1155 0040 1B78     		ldrb	r3, [r3]
 1156 0042 DBB2     		uxtb	r3, r3
 1157 0044 9A46     		mov	r10, r3
 1158              	.LVL86:
 900:Generated_Source\PSoC4/CyLib.c ****             }
 1159              		.loc 1 900 0
 1160 0046 394B     		ldr	r3, .L94+20
 1161 0048 1B78     		ldrb	r3, [r3]
 1162 004a DBB2     		uxtb	r3, r3
 1163 004c 9946     		mov	r9, r3
 1164              	.LVL87:
 1165 004e 23E0     		b	.L86
 1166              	.LVL88:
 1167              	.L87:
 902:Generated_Source\PSoC4/CyLib.c ****             {
 1168              		.loc 1 902 0
 1169 0050 374B     		ldr	r3, .L94+24
 1170 0052 1B78     		ldrb	r3, [r3]
 1171 0054 DBB2     		uxtb	r3, r3
 1172 0056 9C42     		cmp	r4, r3
 1173 0058 08D8     		bhi	.L88
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1174              		.loc 1 904 0
 1175 005a 364B     		ldr	r3, .L94+28
 1176 005c 1B78     		ldrb	r3, [r3]
 1177 005e DBB2     		uxtb	r3, r3
 1178 0060 9A46     		mov	r10, r3
 1179              	.LVL89:
 905:Generated_Source\PSoC4/CyLib.c ****             }
 1180              		.loc 1 905 0
 1181 0062 354B     		ldr	r3, .L94+32
 1182 0064 1B78     		ldrb	r3, [r3]
 1183 0066 DBB2     		uxtb	r3, r3
 1184 0068 9946     		mov	r9, r3
 1185              	.LVL90:
 1186 006a 15E0     		b	.L86
 1187              	.LVL91:
 1188              	.L88:
 907:Generated_Source\PSoC4/CyLib.c ****             {
 1189              		.loc 1 907 0
 1190 006c 334B     		ldr	r3, .L94+36
 1191 006e 1B78     		ldrb	r3, [r3]
 1192 0070 DBB2     		uxtb	r3, r3
 1193 0072 9C42     		cmp	r4, r3
 1194 0074 08D8     		bhi	.L89
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1195              		.loc 1 909 0
 1196 0076 324B     		ldr	r3, .L94+40
 1197 0078 1B78     		ldrb	r3, [r3]
 1198 007a DBB2     		uxtb	r3, r3
 1199 007c 9A46     		mov	r10, r3
 1200              	.LVL92:
 910:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 78


 1201              		.loc 1 910 0
 1202 007e 314B     		ldr	r3, .L94+44
 1203 0080 1B78     		ldrb	r3, [r3]
 1204 0082 DBB2     		uxtb	r3, r3
 1205 0084 9946     		mov	r9, r3
 1206              	.LVL93:
 1207 0086 07E0     		b	.L86
 1208              	.LVL94:
 1209              	.L89:
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1210              		.loc 1 914 0
 1211 0088 2F4B     		ldr	r3, .L94+48
 1212 008a 1B78     		ldrb	r3, [r3]
 1213 008c DBB2     		uxtb	r3, r3
 1214 008e 9A46     		mov	r10, r3
 1215              	.LVL95:
 915:Generated_Source\PSoC4/CyLib.c ****             }
 1216              		.loc 1 915 0
 1217 0090 2E4B     		ldr	r3, .L94+52
 1218 0092 1B78     		ldrb	r3, [r3]
 1219 0094 DBB2     		uxtb	r3, r3
 1220 0096 9946     		mov	r9, r3
 1221              	.LVL96:
 1222              	.L86:
 919:Generated_Source\PSoC4/CyLib.c **** 
 1223              		.loc 1 919 0
 1224 0098 2D4B     		ldr	r3, .L94+56
 1225 009a DE5D     		ldrb	r6, [r3, r7]
 1226              	.LVL97:
 931:Generated_Source\PSoC4/CyLib.c ****             {
 1227              		.loc 1 931 0
 1228 009c 2F2E     		cmp	r6, #47
 1229 009e 09D9     		bls	.L90
 931:Generated_Source\PSoC4/CyLib.c ****             {
 1230              		.loc 1 931 0 is_stmt 0 discriminator 1
 1231 00a0 2A2C     		cmp	r4, #42
 1232 00a2 07D9     		bls	.L90
 934:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1233              		.loc 1 934 0 is_stmt 1
 1234 00a4 1922     		movs	r2, #25
 1235 00a6 2B4B     		ldr	r3, .L94+60
 1236 00a8 1A60     		str	r2, [r3]
 1237              	.LVL98:
 937:Generated_Source\PSoC4/CyLib.c **** 
 1238              		.loc 1 937 0
 1239 00aa 0520     		movs	r0, #5
 1240 00ac FFF7FEFF 		bl	CyDelayCycles
 1241              	.LVL99:
 939:Generated_Source\PSoC4/CyLib.c ****             }
 1242              		.loc 1 939 0
 1243 00b0 1925     		movs	r5, #25
 1244 00b2 03E0     		b	.L91
 1245              	.LVL100:
 1246              	.L90:
 943:Generated_Source\PSoC4/CyLib.c ****             }
 1247              		.loc 1 943 0
 1248 00b4 274B     		ldr	r3, .L94+60
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 79


 1249 00b6 1D68     		ldr	r5, [r3]
 1250 00b8 3F23     		movs	r3, #63
 1251 00ba 1D40     		ands	r5, r3
 1252              	.LVL101:
 1253              	.L91:
 955:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 955 0
 1255 00bc B542     		cmp	r5, r6
 1256 00be 06D9     		bls	.L92
 958:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1257              		.loc 1 958 0
 1258 00c0 234B     		ldr	r3, .L94+56
 1259 00c2 DA5D     		ldrb	r2, [r3, r7]
 1260 00c4 234B     		ldr	r3, .L94+60
 1261 00c6 1A60     		str	r2, [r3]
 959:Generated_Source\PSoC4/CyLib.c ****             }
 1262              		.loc 1 959 0
 1263 00c8 0520     		movs	r0, #5
 1264 00ca FFF7FEFF 		bl	CyDelayCycles
 1265              	.LVL102:
 1266              	.L92:
 963:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1267              		.loc 1 963 0
 1268 00ce 1F4B     		ldr	r3, .L94+52
 1269 00d0 9C46     		mov	ip, r3
 1270 00d2 6444     		add	r4, r4, ip
 1271              	.LVL103:
 1272 00d4 2378     		ldrb	r3, [r4]
 1273 00d6 DBB2     		uxtb	r3, r3
 1274 00d8 1F4A     		ldr	r2, .L94+64
 1275 00da 1360     		str	r3, [r2]
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1276              		.loc 1 964 0
 1277 00dc 1F4B     		ldr	r3, .L94+68
 1278 00de 5246     		mov	r2, r10
 1279 00e0 1A60     		str	r2, [r3]
 965:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1280              		.loc 1 965 0
 1281 00e2 1F4B     		ldr	r3, .L94+72
 1282 00e4 4A46     		mov	r2, r9
 1283 00e6 1A60     		str	r2, [r3]
 966:Generated_Source\PSoC4/CyLib.c **** 
 1284              		.loc 1 966 0
 1285 00e8 0520     		movs	r0, #5
 1286 00ea FFF7FEFF 		bl	CyDelayUs
 1287              	.LVL104:
 968:Generated_Source\PSoC4/CyLib.c ****             {
 1288              		.loc 1 968 0
 1289 00ee B542     		cmp	r5, r6
 1290 00f0 0AD2     		bcs	.L93
 971:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1291              		.loc 1 971 0
 1292 00f2 174B     		ldr	r3, .L94+56
 1293 00f4 DA5D     		ldrb	r2, [r3, r7]
 1294 00f6 174B     		ldr	r3, .L94+60
 1295 00f8 1A60     		str	r2, [r3]
 972:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 80


 1296              		.loc 1 972 0
 1297 00fa 0520     		movs	r0, #5
 1298 00fc FFF7FEFF 		bl	CyDelayCycles
 1299              	.LVL105:
 1300 0100 02E0     		b	.L93
 1301              	.LVL106:
 1302              	.L84:
 978:Generated_Source\PSoC4/CyLib.c ****         }
 1303              		.loc 1 978 0 discriminator 1
 1304 0102 0020     		movs	r0, #0
 1305 0104 FFF7FEFF 		bl	CyHalt
 1306              	.LVL107:
 1307              	.L93:
 997:Generated_Source\PSoC4/CyLib.c ****     }
 1308              		.loc 1 997 0
 1309 0108 0198     		ldr	r0, [sp, #4]
 1310 010a FFF7FEFF 		bl	CyExitCriticalSection
 1311              	.LVL108:
 998:Generated_Source\PSoC4/CyLib.c **** 
 1312              		.loc 1 998 0
 1313 010e 03B0     		add	sp, sp, #12
 1314              		@ sp needed
 1315              	.LVL109:
 1316 0110 0CBC     		pop	{r2, r3}
 1317 0112 9146     		mov	r9, r2
 1318 0114 9A46     		mov	r10, r3
 1319 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1320              	.L95:
 1321              		.align	2
 1322              	.L94:
 1323 0118 C0F1FF0F 		.word	268431808
 1324 011c C1F1FF0F 		.word	268431809
 1325 0120 C2F1FF0F 		.word	268431810
 1326 0124 C3F1FF0F 		.word	268431811
 1327 0128 C4F1FF0F 		.word	268431812
 1328 012c C5F1FF0F 		.word	268431813
 1329 0130 C6F1FF0F 		.word	268431814
 1330 0134 C7F1FF0F 		.word	268431815
 1331 0138 C8F1FF0F 		.word	268431816
 1332 013c C9F1FF0F 		.word	268431817
 1333 0140 CAF1FF0F 		.word	268431818
 1334 0144 CBF1FF0F 		.word	268431819
 1335 0148 CCF1FF0F 		.word	268431820
 1336 014c CDF1FF0F 		.word	268431821
 1337 0150 00000000 		.word	.LANCHOR1
 1338 0154 2CFF0B40 		.word	1074528044
 1339 0158 28FF0B40 		.word	1074528040
 1340 015c 1CFF0B40 		.word	1074528028
 1341 0160 20FF0B40 		.word	1074528032
 1342              		.cfi_endproc
 1343              	.LFE6:
 1344              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1345              		.section	.text.CySysLvdEnable,"ax",%progbits
 1346              		.align	2
 1347              		.global	CySysLvdEnable
 1348              		.code	16
 1349              		.thumb_func
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 81


 1350              		.type	CySysLvdEnable, %function
 1351              	CySysLvdEnable:
 1352              	.LFB7:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1353              		.loc 1 2663 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357              	.LVL110:
 1358 0000 70B5     		push	{r4, r5, r6, lr}
 1359              		.cfi_def_cfa_offset 16
 1360              		.cfi_offset 4, -16
 1361              		.cfi_offset 5, -12
 1362              		.cfi_offset 6, -8
 1363              		.cfi_offset 14, -4
 1364 0002 0300     		movs	r3, r0
2665:Generated_Source\PSoC4/CyLib.c **** 
 1365              		.loc 1 2665 0
 1366 0004 0D4C     		ldr	r4, .L97
 1367 0006 2268     		ldr	r2, [r4]
 1368 0008 0225     		movs	r5, #2
 1369 000a AA43     		bics	r2, r5
 1370 000c 2260     		str	r2, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1371              		.loc 1 2668 0
 1372 000e 0C4A     		ldr	r2, .L97+4
 1373 0010 1168     		ldr	r1, [r2]
 1374 0012 1E20     		movs	r0, #30
 1375              	.LVL111:
 1376 0014 8143     		bics	r1, r0
2669:Generated_Source\PSoC4/CyLib.c **** 
 1377              		.loc 1 2669 0
 1378 0016 5B00     		lsls	r3, r3, #1
 1379              	.LVL112:
 1380 0018 1840     		ands	r0, r3
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1381              		.loc 1 2668 0
 1382 001a 0843     		orrs	r0, r1
 1383 001c 1060     		str	r0, [r2]
2672:Generated_Source\PSoC4/CyLib.c **** 
 1384              		.loc 1 2672 0
 1385 001e 1168     		ldr	r1, [r2]
 1386 0020 0123     		movs	r3, #1
 1387 0022 0B43     		orrs	r3, r1
 1388 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1389              		.loc 1 2675 0
 1390 0026 FA20     		movs	r0, #250
 1391 0028 8000     		lsls	r0, r0, #2
 1392 002a FFF7FEFF 		bl	CyDelayUs
 1393              	.LVL113:
2678:Generated_Source\PSoC4/CyLib.c **** 
 1394              		.loc 1 2678 0
 1395 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1396              	.LVL114:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 1397              		.loc 1 2681 0
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 82


 1398 0032 2368     		ldr	r3, [r4]
 1399 0034 1D43     		orrs	r5, r3
 1400 0036 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 1401              		.loc 1 2682 0
 1402              		@ sp needed
 1403 0038 70BD     		pop	{r4, r5, r6, pc}
 1404              	.L98:
 1405 003a C046     		.align	2
 1406              	.L97:
 1407 003c 08000B40 		.word	1074462728
 1408 0040 18000B40 		.word	1074462744
 1409              		.cfi_endproc
 1410              	.LFE7:
 1411              		.size	CySysLvdEnable, .-CySysLvdEnable
 1412              		.global	__aeabi_uidiv
 1413              		.section	.text.CyDelayFreq,"ax",%progbits
 1414              		.align	2
 1415              		.global	CyDelayFreq
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	CyDelayFreq, %function
 1419              	CyDelayFreq:
 1420              	.LFB29:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1421              		.loc 1 3141 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              	.LVL115:
 1426 0000 70B5     		push	{r4, r5, r6, lr}
 1427              		.cfi_def_cfa_offset 16
 1428              		.cfi_offset 4, -16
 1429              		.cfi_offset 5, -12
 1430              		.cfi_offset 6, -8
 1431              		.cfi_offset 14, -4
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1432              		.loc 1 3142 0
 1433 0002 0028     		cmp	r0, #0
 1434 0004 02D0     		beq	.L100
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1435              		.loc 1 3144 0
 1436 0006 0C4B     		ldr	r3, .L102
 1437 0008 1861     		str	r0, [r3, #16]
 1438 000a 02E0     		b	.L101
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 83


 1439              	.L100:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1440              		.loc 1 3148 0
 1441 000c 0B4A     		ldr	r2, .L102+4
 1442 000e 0A4B     		ldr	r3, .L102
 1443 0010 1A61     		str	r2, [r3, #16]
 1444              	.L101:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1445              		.loc 1 3151 0
 1446 0012 094C     		ldr	r4, .L102
 1447 0014 2569     		ldr	r5, [r4, #16]
 1448 0016 0A4B     		ldr	r3, .L102+8
 1449 0018 E818     		adds	r0, r5, r3
 1450              	.LVL116:
 1451 001a 0A49     		ldr	r1, .L102+12
 1452 001c FFF7FEFF 		bl	__aeabi_uidiv
 1453              	.LVL117:
 1454 0020 2073     		strb	r0, [r4, #12]
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1455              		.loc 1 3152 0
 1456 0022 094B     		ldr	r3, .L102+16
 1457 0024 E818     		adds	r0, r5, r3
 1458 0026 FA21     		movs	r1, #250
 1459 0028 8900     		lsls	r1, r1, #2
 1460 002a FFF7FEFF 		bl	__aeabi_uidiv
 1461              	.LVL118:
 1462 002e A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1463              		.loc 1 3153 0
 1464 0030 C003     		lsls	r0, r0, #15
 1465 0032 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1466              		.loc 1 3154 0
 1467              		@ sp needed
 1468 0034 70BD     		pop	{r4, r5, r6, pc}
 1469              	.L103:
 1470 0036 C046     		.align	2
 1471              	.L102:
 1472 0038 00000000 		.word	.LANCHOR0
 1473 003c 00366E01 		.word	24000000
 1474 0040 3F420F00 		.word	999999
 1475 0044 40420F00 		.word	1000000
 1476 0048 E7030000 		.word	999
 1477              		.cfi_endproc
 1478              	.LFE29:
 1479              		.size	CyDelayFreq, .-CyDelayFreq
 1480              		.section	.text.CySysTickStop,"ax",%progbits
 1481              		.align	2
 1482              		.global	CySysTickStop
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	CySysTickStop, %function
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 84


 1486              	CySysTickStop:
 1487              	.LFB33:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 85


3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
 1488              		.loc 1 3249 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1493              		.loc 1 3250 0
 1494 0000 024A     		ldr	r2, .L105
 1495 0002 1368     		ldr	r3, [r2]
 1496 0004 0121     		movs	r1, #1
 1497 0006 8B43     		bics	r3, r1
 1498 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** }
 1499              		.loc 1 3251 0
 1500              		@ sp needed
 1501 000a 7047     		bx	lr
 1502              	.L106:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 86


 1503              		.align	2
 1504              	.L105:
 1505 000c 10E000E0 		.word	-536813552
 1506              		.cfi_endproc
 1507              	.LFE33:
 1508              		.size	CySysTickStop, .-CySysTickStop
 1509              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1510              		.align	2
 1511              		.global	CySysTickEnableInterrupt
 1512              		.code	16
 1513              		.thumb_func
 1514              		.type	CySysTickEnableInterrupt, %function
 1515              	CySysTickEnableInterrupt:
 1516              	.LFB34:
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
 1517              		.loc 1 3265 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1522              		.loc 1 3266 0
 1523 0000 024A     		ldr	r2, .L108
 1524 0002 1168     		ldr	r1, [r2]
 1525 0004 0223     		movs	r3, #2
 1526 0006 0B43     		orrs	r3, r1
 1527 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** }
 1528              		.loc 1 3267 0
 1529              		@ sp needed
 1530 000a 7047     		bx	lr
 1531              	.L109:
 1532              		.align	2
 1533              	.L108:
 1534 000c 10E000E0 		.word	-536813552
 1535              		.cfi_endproc
 1536              	.LFE34:
 1537              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1538              		.section	.text.CySysTickEnable,"ax",%progbits
 1539              		.align	2
 1540              		.global	CySysTickEnable
 1541              		.code	16
 1542              		.thumb_func
 1543              		.type	CySysTickEnable, %function
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 87


 1544              	CySysTickEnable:
 1545              	.LFB32:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1546              		.loc 1 3232 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 1550 0000 10B5     		push	{r4, lr}
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 4, -8
 1553              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1554              		.loc 1 3233 0
 1555 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1556              	.LVL119:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1557              		.loc 1 3234 0
 1558 0006 034A     		ldr	r2, .L111
 1559 0008 1168     		ldr	r1, [r2]
 1560 000a 0123     		movs	r3, #1
 1561 000c 0B43     		orrs	r3, r1
 1562 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1563              		.loc 1 3235 0
 1564              		@ sp needed
 1565 0010 10BD     		pop	{r4, pc}
 1566              	.L112:
 1567 0012 C046     		.align	2
 1568              	.L111:
 1569 0014 10E000E0 		.word	-536813552
 1570              		.cfi_endproc
 1571              	.LFE32:
 1572              		.size	CySysTickEnable, .-CySysTickEnable
 1573              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1574              		.align	2
 1575              		.global	CySysTickDisableInterrupt
 1576              		.code	16
 1577              		.thumb_func
 1578              		.type	CySysTickDisableInterrupt, %function
 1579              	CySysTickDisableInterrupt:
 1580              	.LFB35:
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
 1581              		.loc 1 3281 0
 1582              		.cfi_startproc
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 88


 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1586              		.loc 1 3282 0
 1587 0000 024A     		ldr	r2, .L114
 1588 0002 1368     		ldr	r3, [r2]
 1589 0004 0221     		movs	r1, #2
 1590 0006 8B43     		bics	r3, r1
 1591 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** }
 1592              		.loc 1 3283 0
 1593              		@ sp needed
 1594 000a 7047     		bx	lr
 1595              	.L115:
 1596              		.align	2
 1597              	.L114:
 1598 000c 10E000E0 		.word	-536813552
 1599              		.cfi_endproc
 1600              	.LFE35:
 1601              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1602              		.section	.text.CySysTickSetReload,"ax",%progbits
 1603              		.align	2
 1604              		.global	CySysTickSetReload
 1605              		.code	16
 1606              		.thumb_func
 1607              		.type	CySysTickSetReload, %function
 1608              	CySysTickSetReload:
 1609              	.LFB36:
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
 1610              		.loc 1 3298 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615              	.LVL120:
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1616              		.loc 1 3299 0
 1617 0000 0002     		lsls	r0, r0, #8
 1618              	.LVL121:
 1619 0002 000A     		lsrs	r0, r0, #8
 1620 0004 014B     		ldr	r3, .L117
 1621 0006 1860     		str	r0, [r3]
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 89


3300:Generated_Source\PSoC4/CyLib.c **** }
 1622              		.loc 1 3300 0
 1623              		@ sp needed
 1624 0008 7047     		bx	lr
 1625              	.L118:
 1626 000a C046     		.align	2
 1627              	.L117:
 1628 000c 14E000E0 		.word	-536813548
 1629              		.cfi_endproc
 1630              	.LFE36:
 1631              		.size	CySysTickSetReload, .-CySysTickSetReload
 1632              		.section	.text.CySysTickGetReload,"ax",%progbits
 1633              		.align	2
 1634              		.global	CySysTickGetReload
 1635              		.code	16
 1636              		.thumb_func
 1637              		.type	CySysTickGetReload, %function
 1638              	CySysTickGetReload:
 1639              	.LFB37:
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
 1640              		.loc 1 3314 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1645              		.loc 1 3315 0
 1646 0000 024B     		ldr	r3, .L120
 1647 0002 1868     		ldr	r0, [r3]
 1648 0004 0002     		lsls	r0, r0, #8
 1649 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** }
 1650              		.loc 1 3316 0
 1651              		@ sp needed
 1652 0008 7047     		bx	lr
 1653              	.L121:
 1654 000a C046     		.align	2
 1655              	.L120:
 1656 000c 14E000E0 		.word	-536813548
 1657              		.cfi_endproc
 1658              	.LFE37:
 1659              		.size	CySysTickGetReload, .-CySysTickGetReload
 1660              		.section	.text.CySysTickGetValue,"ax",%progbits
 1661              		.align	2
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 90


 1662              		.global	CySysTickGetValue
 1663              		.code	16
 1664              		.thumb_func
 1665              		.type	CySysTickGetValue, %function
 1666              	CySysTickGetValue:
 1667              	.LFB38:
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
 1668              		.loc 1 3330 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1673              		.loc 1 3331 0
 1674 0000 024B     		ldr	r3, .L123
 1675 0002 1868     		ldr	r0, [r3]
 1676 0004 0002     		lsls	r0, r0, #8
 1677 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** }
 1678              		.loc 1 3332 0
 1679              		@ sp needed
 1680 0008 7047     		bx	lr
 1681              	.L124:
 1682 000a C046     		.align	2
 1683              	.L123:
 1684 000c 18E000E0 		.word	-536813544
 1685              		.cfi_endproc
 1686              	.LFE38:
 1687              		.size	CySysTickGetValue, .-CySysTickGetValue
 1688              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1689              		.align	2
 1690              		.global	CySysTickGetCountFlag
 1691              		.code	16
 1692              		.thumb_func
 1693              		.type	CySysTickGetCountFlag, %function
 1694              	CySysTickGetCountFlag:
 1695              	.LFB39:
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 91


3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3389:Generated_Source\PSoC4/CyLib.c ****     }
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 92


3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
 1696              		.loc 1 3410 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1701              		.loc 1 3411 0
 1702 0000 024B     		ldr	r3, .L126
 1703 0002 1868     		ldr	r0, [r3]
 1704 0004 000C     		lsrs	r0, r0, #16
 1705 0006 0123     		movs	r3, #1
 1706 0008 1840     		ands	r0, r3
3412:Generated_Source\PSoC4/CyLib.c **** }
 1707              		.loc 1 3412 0
 1708              		@ sp needed
 1709 000a 7047     		bx	lr
 1710              	.L127:
 1711              		.align	2
 1712              	.L126:
 1713 000c 10E000E0 		.word	-536813552
 1714              		.cfi_endproc
 1715              	.LFE39:
 1716              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1717              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1718              		.align	2
 1719              		.code	16
 1720              		.thumb_func
 1721              		.type	CySysTickServiceCallbacks, %function
 1722              	CySysTickServiceCallbacks:
 1723              	.LFB43:
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3425:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 93


3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 94


3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 1724              		.loc 1 3495 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728 0000 10B5     		push	{r4, lr}
 1729              		.cfi_def_cfa_offset 8
 1730              		.cfi_offset 4, -8
 1731              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1732              		.loc 1 3499 0
 1733 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1734              	.LVL122:
 1735 0006 0128     		cmp	r0, #1
 1736 0008 0BD1     		bne	.L128
 1737 000a 07E0     		b	.L133
 1738              	.LVL123:
 1739              	.L132:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1740              		.loc 1 3503 0
 1741 000c A300     		lsls	r3, r4, #2
 1742 000e 054A     		ldr	r2, .L134
 1743 0010 9B58     		ldr	r3, [r3, r2]
 1744 0012 002B     		cmp	r3, #0
 1745 0014 00D0     		beq	.L131
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1746              		.loc 1 3505 0
 1747 0016 9847     		blx	r3
 1748              	.LVL124:
 1749              	.L131:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1750              		.loc 1 3501 0 discriminator 2
 1751 0018 0134     		adds	r4, r4, #1
 1752              	.LVL125:
 1753 001a 00E0     		b	.L129
 1754              	.LVL126:
 1755              	.L133:
 1756 001c 0024     		movs	r4, #0
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 95


 1757              	.L129:
 1758              	.LVL127:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1759              		.loc 1 3501 0 is_stmt 0 discriminator 1
 1760 001e 042C     		cmp	r4, #4
 1761 0020 F4D9     		bls	.L132
 1762              	.LVL128:
 1763              	.L128:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 1764              		.loc 1 3509 0 is_stmt 1
 1765              		@ sp needed
 1766 0022 10BD     		pop	{r4, pc}
 1767              	.L135:
 1768              		.align	2
 1769              	.L134:
 1770 0024 00000000 		.word	.LANCHOR2
 1771              		.cfi_endproc
 1772              	.LFE43:
 1773              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1774              		.section	.text.CySysTickClear,"ax",%progbits
 1775              		.align	2
 1776              		.global	CySysTickClear
 1777              		.code	16
 1778              		.thumb_func
 1779              		.type	CySysTickClear, %function
 1780              	CySysTickClear:
 1781              	.LFB40:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1782              		.loc 1 3423 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 1787              		.loc 1 3424 0
 1788 0000 0022     		movs	r2, #0
 1789 0002 014B     		ldr	r3, .L137
 1790 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 1791              		.loc 1 3425 0
 1792              		@ sp needed
 1793 0006 7047     		bx	lr
 1794              	.L138:
 1795              		.align	2
 1796              	.L137:
 1797 0008 18E000E0 		.word	-536813544
 1798              		.cfi_endproc
 1799              	.LFE40:
 1800              		.size	CySysTickClear, .-CySysTickClear
 1801              		.section	.text.CySysTickInit,"ax",%progbits
 1802              		.align	2
 1803              		.global	CySysTickInit
 1804              		.code	16
 1805              		.thumb_func
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 96


 1806              		.type	CySysTickInit, %function
 1807              	CySysTickInit:
 1808              	.LFB31:
3202:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1809              		.loc 1 3202 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813 0000 10B5     		push	{r4, lr}
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 4, -8
 1816              		.cfi_offset 14, -4
 1817              	.LVL129:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1818              		.loc 1 3205 0
 1819 0002 0023     		movs	r3, #0
 1820 0004 04E0     		b	.L140
 1821              	.LVL130:
 1822              	.L141:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1823              		.loc 1 3207 0 discriminator 3
 1824 0006 9900     		lsls	r1, r3, #2
 1825 0008 0020     		movs	r0, #0
 1826 000a 0A4A     		ldr	r2, .L142
 1827 000c 8850     		str	r0, [r1, r2]
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1828              		.loc 1 3205 0 discriminator 3
 1829 000e 0133     		adds	r3, r3, #1
 1830              	.LVL131:
 1831              	.L140:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1832              		.loc 1 3205 0 is_stmt 0 discriminator 1
 1833 0010 042B     		cmp	r3, #4
 1834 0012 F8D9     		bls	.L141
3210:Generated_Source\PSoC4/CyLib.c **** 
 1835              		.loc 1 3210 0 is_stmt 1
 1836 0014 0849     		ldr	r1, .L142+4
 1837 0016 0F20     		movs	r0, #15
 1838 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1839              	.LVL132:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1840              		.loc 1 3216 0
 1841 001c 074B     		ldr	r3, .L142+8
 1842 001e 1869     		ldr	r0, [r3, #16]
 1843 0020 FA21     		movs	r1, #250
 1844 0022 8900     		lsls	r1, r1, #2
 1845 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1846              	.LVL133:
 1847 0028 FFF7FEFF 		bl	CySysTickSetReload
 1848              	.LVL134:
3217:Generated_Source\PSoC4/CyLib.c **** }
 1849              		.loc 1 3217 0
 1850 002c FFF7FEFF 		bl	CySysTickClear
 1851              	.LVL135:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1852              		.loc 1 3218 0
 1853              		@ sp needed
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 97


 1854 0030 10BD     		pop	{r4, pc}
 1855              	.L143:
 1856 0032 C046     		.align	2
 1857              	.L142:
 1858 0034 00000000 		.word	.LANCHOR2
 1859 0038 00000000 		.word	CySysTickServiceCallbacks
 1860 003c 00000000 		.word	.LANCHOR0
 1861              		.cfi_endproc
 1862              	.LFE31:
 1863              		.size	CySysTickInit, .-CySysTickInit
 1864              		.section	.text.CySysTickStart,"ax",%progbits
 1865              		.align	2
 1866              		.global	CySysTickStart
 1867              		.code	16
 1868              		.thumb_func
 1869              		.type	CySysTickStart, %function
 1870              	CySysTickStart:
 1871              	.LFB30:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1872              		.loc 1 3173 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 1876 0000 10B5     		push	{r4, lr}
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 4, -8
 1879              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 1880              		.loc 1 3174 0
 1881 0002 064B     		ldr	r3, .L146
 1882 0004 5B69     		ldr	r3, [r3, #20]
 1883 0006 002B     		cmp	r3, #0
 1884 0008 04D1     		bne	.L145
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1885              		.loc 1 3176 0
 1886 000a FFF7FEFF 		bl	CySysTickInit
 1887              	.LVL136:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 1888              		.loc 1 3177 0
 1889 000e 0122     		movs	r2, #1
 1890 0010 024B     		ldr	r3, .L146
 1891 0012 5A61     		str	r2, [r3, #20]
 1892              	.L145:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1893              		.loc 1 3180 0
 1894 0014 FFF7FEFF 		bl	CySysTickEnable
 1895              	.LVL137:
3181:Generated_Source\PSoC4/CyLib.c **** 
 1896              		.loc 1 3181 0
 1897              		@ sp needed
 1898 0018 10BD     		pop	{r4, pc}
 1899              	.L147:
 1900 001a C046     		.align	2
 1901              	.L146:
 1902 001c 00000000 		.word	.LANCHOR2
 1903              		.cfi_endproc
 1904              	.LFE30:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 98


 1905              		.size	CySysTickStart, .-CySysTickStart
 1906              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1907              		.align	2
 1908              		.global	CySysTickSetCallback
 1909              		.code	16
 1910              		.thumb_func
 1911              		.type	CySysTickSetCallback, %function
 1912              	CySysTickSetCallback:
 1913              	.LFB41:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1914              		.loc 1 3458 0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918              		@ link register save eliminated.
 1919              	.LVL138:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1920              		.loc 1 3461 0
 1921 0000 024A     		ldr	r2, .L149
 1922 0002 8300     		lsls	r3, r0, #2
 1923 0004 9858     		ldr	r0, [r3, r2]
 1924              	.LVL139:
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1925              		.loc 1 3462 0
 1926 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 1927              		.loc 1 3464 0
 1928              		@ sp needed
 1929 0008 7047     		bx	lr
 1930              	.L150:
 1931 000a C046     		.align	2
 1932              	.L149:
 1933 000c 00000000 		.word	.LANCHOR2
 1934              		.cfi_endproc
 1935              	.LFE41:
 1936              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1937              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1938              		.align	2
 1939              		.global	CySysTickGetCallback
 1940              		.code	16
 1941              		.thumb_func
 1942              		.type	CySysTickGetCallback, %function
 1943              	CySysTickGetCallback:
 1944              	.LFB42:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1945              		.loc 1 3482 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 0
 1948              		@ frame_needed = 0, uses_anonymous_args = 0
 1949              		@ link register save eliminated.
 1950              	.LVL140:
3483:Generated_Source\PSoC4/CyLib.c **** }
 1951              		.loc 1 3483 0
 1952 0000 8000     		lsls	r0, r0, #2
 1953              	.LVL141:
 1954 0002 014B     		ldr	r3, .L152
 1955 0004 C058     		ldr	r0, [r0, r3]
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 99


3484:Generated_Source\PSoC4/CyLib.c **** 
 1956              		.loc 1 3484 0
 1957              		@ sp needed
 1958 0006 7047     		bx	lr
 1959              	.L153:
 1960              		.align	2
 1961              	.L152:
 1962 0008 00000000 		.word	.LANCHOR2
 1963              		.cfi_endproc
 1964              	.LFE42:
 1965              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1966              		.section	.text.CyGetUniqueId,"ax",%progbits
 1967              		.align	2
 1968              		.global	CyGetUniqueId
 1969              		.code	16
 1970              		.thumb_func
 1971              		.type	CyGetUniqueId, %function
 1972              	CyGetUniqueId:
 1973              	.LFB44:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 1974              		.loc 1 3527 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 1979              	.LVL142:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1980              		.loc 1 3529 0
 1981 0000 134B     		ldr	r3, .L155
 1982 0002 1B78     		ldrb	r3, [r3]
 1983 0004 DAB2     		uxtb	r2, r3
 1984 0006 0260     		str	r2, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1985              		.loc 1 3530 0
 1986 0008 124B     		ldr	r3, .L155+4
 1987 000a 1B78     		ldrb	r3, [r3]
 1988 000c 1B02     		lsls	r3, r3, #8
 1989 000e 1343     		orrs	r3, r2
 1990 0010 0360     		str	r3, [r0]
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 100


3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1991              		.loc 1 3531 0
 1992 0012 114A     		ldr	r2, .L155+8
 1993 0014 1278     		ldrb	r2, [r2]
 1994 0016 1204     		lsls	r2, r2, #16
 1995 0018 1343     		orrs	r3, r2
 1996 001a 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1997              		.loc 1 3532 0
 1998 001c 0F4A     		ldr	r2, .L155+12
 1999 001e 1278     		ldrb	r2, [r2]
 2000 0020 1206     		lsls	r2, r2, #24
 2001 0022 1343     		orrs	r3, r2
 2002 0024 0360     		str	r3, [r0]
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2003              		.loc 1 3534 0
 2004 0026 0E4B     		ldr	r3, .L155+16
 2005 0028 1B78     		ldrb	r3, [r3]
 2006 002a DAB2     		uxtb	r2, r3
 2007 002c 4260     		str	r2, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2008              		.loc 1 3535 0
 2009 002e 0D4B     		ldr	r3, .L155+20
 2010 0030 1B78     		ldrb	r3, [r3]
 2011 0032 1B02     		lsls	r3, r3, #8
 2012 0034 1343     		orrs	r3, r2
 2013 0036 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2014              		.loc 1 3536 0
 2015 0038 0B4A     		ldr	r2, .L155+24
 2016 003a 1278     		ldrb	r2, [r2]
 2017 003c 1204     		lsls	r2, r2, #16
 2018 003e 1343     		orrs	r3, r2
 2019 0040 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2020              		.loc 1 3537 0
 2021 0042 0A4A     		ldr	r2, .L155+28
 2022 0044 1278     		ldrb	r2, [r2]
 2023 0046 1206     		lsls	r2, r2, #24
 2024 0048 1343     		orrs	r3, r2
 2025 004a 4360     		str	r3, [r0, #4]
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2026              		.loc 1 3549 0
 2027              		@ sp needed
 2028 004c 7047     		bx	lr
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 101


 2029              	.L156:
 2030 004e C046     		.align	2
 2031              	.L155:
 2032 0050 78F1FF0F 		.word	268431736
 2033 0054 79F1FF0F 		.word	268431737
 2034 0058 7AF1FF0F 		.word	268431738
 2035 005c 7BF1FF0F 		.word	268431739
 2036 0060 7CF1FF0F 		.word	268431740
 2037 0064 7DF1FF0F 		.word	268431741
 2038 0068 7EF1FF0F 		.word	268431742
 2039 006c 7FF1FF0F 		.word	268431743
 2040              		.cfi_endproc
 2041              	.LFE44:
 2042              		.size	CyGetUniqueId, .-CyGetUniqueId
 2043              		.global	CySysClkPumpConfig
 2044              		.global	cyImoFreqMhz2Reg
 2045              		.global	CySysTickInitVar
 2046              		.global	cydelay32kMs
 2047              		.global	cydelayFreqMhz
 2048              		.global	cydelayFreqKhz
 2049              		.global	cydelayFreqHz
 2050              		.section	.rodata
 2051              		.align	2
 2052              		.set	.LANCHOR1,. + 0
 2053              		.type	cyImoFreqMhz2Reg, %object
 2054              		.size	cyImoFreqMhz2Reg, 46
 2055              	cyImoFreqMhz2Reg:
 2056 0000 03       		.byte	3
 2057 0001 04       		.byte	4
 2058 0002 05       		.byte	5
 2059 0003 06       		.byte	6
 2060 0004 07       		.byte	7
 2061 0005 08       		.byte	8
 2062 0006 09       		.byte	9
 2063 0007 0A       		.byte	10
 2064 0008 0B       		.byte	11
 2065 0009 0C       		.byte	12
 2066 000a 0E       		.byte	14
 2067 000b 0F       		.byte	15
 2068 000c 10       		.byte	16
 2069 000d 11       		.byte	17
 2070 000e 12       		.byte	18
 2071 000f 13       		.byte	19
 2072 0010 14       		.byte	20
 2073 0011 15       		.byte	21
 2074 0012 16       		.byte	22
 2075 0013 17       		.byte	23
 2076 0014 18       		.byte	24
 2077 0015 19       		.byte	25
 2078 0016 1B       		.byte	27
 2079 0017 1C       		.byte	28
 2080 0018 1D       		.byte	29
 2081 0019 1E       		.byte	30
 2082 001a 1F       		.byte	31
 2083 001b 20       		.byte	32
 2084 001c 21       		.byte	33
 2085 001d 22       		.byte	34
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 102


 2086 001e 23       		.byte	35
 2087 001f 25       		.byte	37
 2088 0020 26       		.byte	38
 2089 0021 27       		.byte	39
 2090 0022 28       		.byte	40
 2091 0023 29       		.byte	41
 2092 0024 2A       		.byte	42
 2093 0025 2B       		.byte	43
 2094 0026 2E       		.byte	46
 2095 0027 2F       		.byte	47
 2096 0028 30       		.byte	48
 2097 0029 31       		.byte	49
 2098 002a 32       		.byte	50
 2099 002b 33       		.byte	51
 2100 002c 34       		.byte	52
 2101 002d 35       		.byte	53
 2102              		.data
 2103              		.align	2
 2104              		.set	.LANCHOR0,. + 0
 2105              		.type	CySysClkPumpConfig, %object
 2106              		.size	CySysClkPumpConfig, 4
 2107              	CySysClkPumpConfig:
 2108 0000 01000000 		.word	1
 2109              		.type	cydelay32kMs, %object
 2110              		.size	cydelay32kMs, 4
 2111              	cydelay32kMs:
 2112 0004 0000E02E 		.word	786432000
 2113              		.type	cydelayFreqKhz, %object
 2114              		.size	cydelayFreqKhz, 4
 2115              	cydelayFreqKhz:
 2116 0008 C05D0000 		.word	24000
 2117              		.type	cydelayFreqMhz, %object
 2118              		.size	cydelayFreqMhz, 1
 2119              	cydelayFreqMhz:
 2120 000c 18       		.byte	24
 2121 000d 000000   		.space	3
 2122              		.type	cydelayFreqHz, %object
 2123              		.size	cydelayFreqHz, 4
 2124              	cydelayFreqHz:
 2125 0010 00366E01 		.word	24000000
 2126              		.bss
 2127              		.align	2
 2128              		.set	.LANCHOR2,. + 0
 2129              		.type	CySysTickCallbacks, %object
 2130              		.size	CySysTickCallbacks, 20
 2131              	CySysTickCallbacks:
 2132 0000 00000000 		.space	20
 2132      00000000 
 2132      00000000 
 2132      00000000 
 2132      00000000 
 2133              		.type	CySysTickInitVar, %object
 2134              		.size	CySysTickInitVar, 4
 2135              	CySysTickInitVar:
 2136 0014 00000000 		.space	4
 2137              		.text
 2138              	.Letext0:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 103


 2139              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2140              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2141              		.section	.debug_info,"",%progbits
 2142              	.Ldebug_info0:
 2143 0000 E90A0000 		.4byte	0xae9
 2144 0004 0400     		.2byte	0x4
 2145 0006 00000000 		.4byte	.Ldebug_abbrev0
 2146 000a 04       		.byte	0x4
 2147 000b 01       		.uleb128 0x1
 2148 000c 84000000 		.4byte	.LASF104
 2149 0010 0C       		.byte	0xc
 2150 0011 3E060000 		.4byte	.LASF105
 2151 0015 12010000 		.4byte	.LASF106
 2152 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2153 001d 00000000 		.4byte	0
 2154 0021 00000000 		.4byte	.Ldebug_line0
 2155 0025 02       		.uleb128 0x2
 2156 0026 01       		.byte	0x1
 2157 0027 06       		.byte	0x6
 2158 0028 B6010000 		.4byte	.LASF0
 2159 002c 02       		.uleb128 0x2
 2160 002d 01       		.byte	0x1
 2161 002e 08       		.byte	0x8
 2162 002f 0A050000 		.4byte	.LASF1
 2163 0033 02       		.uleb128 0x2
 2164 0034 02       		.byte	0x2
 2165 0035 05       		.byte	0x5
 2166 0036 18050000 		.4byte	.LASF2
 2167 003a 02       		.uleb128 0x2
 2168 003b 02       		.byte	0x2
 2169 003c 07       		.byte	0x7
 2170 003d 6E030000 		.4byte	.LASF3
 2171 0041 02       		.uleb128 0x2
 2172 0042 04       		.byte	0x4
 2173 0043 05       		.byte	0x5
 2174 0044 F5010000 		.4byte	.LASF4
 2175 0048 02       		.uleb128 0x2
 2176 0049 04       		.byte	0x4
 2177 004a 07       		.byte	0x7
 2178 004b F6020000 		.4byte	.LASF5
 2179 004f 02       		.uleb128 0x2
 2180 0050 08       		.byte	0x8
 2181 0051 05       		.byte	0x5
 2182 0052 A8010000 		.4byte	.LASF6
 2183 0056 02       		.uleb128 0x2
 2184 0057 08       		.byte	0x8
 2185 0058 07       		.byte	0x7
 2186 0059 3C010000 		.4byte	.LASF7
 2187 005d 03       		.uleb128 0x3
 2188 005e 04       		.byte	0x4
 2189 005f 05       		.byte	0x5
 2190 0060 696E7400 		.ascii	"int\000"
 2191 0064 02       		.uleb128 0x2
 2192 0065 04       		.byte	0x4
 2193 0066 07       		.byte	0x7
 2194 0067 DA020000 		.4byte	.LASF8
 2195 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 104


 2196 006c 20020000 		.4byte	.LASF9
 2197 0070 02       		.byte	0x2
 2198 0071 FB01     		.2byte	0x1fb
 2199 0073 2C000000 		.4byte	0x2c
 2200 0077 04       		.uleb128 0x4
 2201 0078 17000000 		.4byte	.LASF10
 2202 007c 02       		.byte	0x2
 2203 007d FC01     		.2byte	0x1fc
 2204 007f 3A000000 		.4byte	0x3a
 2205 0083 04       		.uleb128 0x4
 2206 0084 60020000 		.4byte	.LASF11
 2207 0088 02       		.byte	0x2
 2208 0089 FD01     		.2byte	0x1fd
 2209 008b 48000000 		.4byte	0x48
 2210 008f 02       		.uleb128 0x2
 2211 0090 04       		.byte	0x4
 2212 0091 04       		.byte	0x4
 2213 0092 8D040000 		.4byte	.LASF12
 2214 0096 02       		.uleb128 0x2
 2215 0097 08       		.byte	0x8
 2216 0098 04       		.byte	0x4
 2217 0099 3C020000 		.4byte	.LASF13
 2218 009d 02       		.uleb128 0x2
 2219 009e 01       		.byte	0x1
 2220 009f 08       		.byte	0x8
 2221 00a0 5B050000 		.4byte	.LASF14
 2222 00a4 04       		.uleb128 0x4
 2223 00a5 F4040000 		.4byte	.LASF15
 2224 00a9 02       		.byte	0x2
 2225 00aa A502     		.2byte	0x2a5
 2226 00ac B0000000 		.4byte	0xb0
 2227 00b0 05       		.uleb128 0x5
 2228 00b1 6B000000 		.4byte	0x6b
 2229 00b5 04       		.uleb128 0x4
 2230 00b6 DC030000 		.4byte	.LASF16
 2231 00ba 02       		.byte	0x2
 2232 00bb A702     		.2byte	0x2a7
 2233 00bd C1000000 		.4byte	0xc1
 2234 00c1 05       		.uleb128 0x5
 2235 00c2 83000000 		.4byte	0x83
 2236 00c6 04       		.uleb128 0x4
 2237 00c7 60050000 		.4byte	.LASF17
 2238 00cb 02       		.byte	0x2
 2239 00cc B702     		.2byte	0x2b7
 2240 00ce D2000000 		.4byte	0xd2
 2241 00d2 06       		.uleb128 0x6
 2242 00d3 04       		.byte	0x4
 2243 00d4 D8000000 		.4byte	0xd8
 2244 00d8 07       		.uleb128 0x7
 2245 00d9 02       		.uleb128 0x2
 2246 00da 08       		.byte	0x8
 2247 00db 04       		.byte	0x4
 2248 00dc 19040000 		.4byte	.LASF18
 2249 00e0 02       		.uleb128 0x2
 2250 00e1 04       		.byte	0x4
 2251 00e2 07       		.byte	0x7
 2252 00e3 FE030000 		.4byte	.LASF19
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 105


 2253 00e7 04       		.uleb128 0x4
 2254 00e8 B8040000 		.4byte	.LASF20
 2255 00ec 03       		.byte	0x3
 2256 00ed 0801     		.2byte	0x108
 2257 00ef D2000000 		.4byte	0xd2
 2258 00f3 08       		.uleb128 0x8
 2259 00f4 1C060000 		.4byte	.LASF21
 2260 00f8 01       		.byte	0x1
 2261 00f9 69       		.byte	0x69
 2262 00fa 00000000 		.4byte	.LFB0
 2263 00fe 14000000 		.4byte	.LFE0-.LFB0
 2264 0102 01       		.uleb128 0x1
 2265 0103 9C       		.byte	0x9c
 2266 0104 08       		.uleb128 0x8
 2267 0105 23030000 		.4byte	.LASF22
 2268 0109 01       		.byte	0x1
 2269 010a 8A       		.byte	0x8a
 2270 010b 00000000 		.4byte	.LFB1
 2271 010f 10000000 		.4byte	.LFE1-.LFB1
 2272 0113 01       		.uleb128 0x1
 2273 0114 9C       		.byte	0x9c
 2274 0115 09       		.uleb128 0x9
 2275 0116 27000000 		.4byte	.LASF25
 2276 011a 01       		.byte	0x1
 2277 011b 4802     		.2byte	0x248
 2278 011d 00000000 		.4byte	.LFB2
 2279 0121 20000000 		.4byte	.LFE2-.LFB2
 2280 0125 01       		.uleb128 0x1
 2281 0126 9C       		.byte	0x9c
 2282 0127 6E010000 		.4byte	0x16e
 2283 012b 0A       		.uleb128 0xa
 2284 012c 40050000 		.4byte	.LASF27
 2285 0130 01       		.byte	0x1
 2286 0131 4802     		.2byte	0x248
 2287 0133 83000000 		.4byte	0x83
 2288 0137 00000000 		.4byte	.LLST0
 2289 013b 0B       		.uleb128 0xb
 2290 013c D3010000 		.4byte	.LASF23
 2291 0140 01       		.byte	0x1
 2292 0141 4A02     		.2byte	0x24a
 2293 0143 6B000000 		.4byte	0x6b
 2294 0147 2C000000 		.4byte	.LLST1
 2295 014b 0B       		.uleb128 0xb
 2296 014c 6A060000 		.4byte	.LASF24
 2297 0150 01       		.byte	0x1
 2298 0151 4B02     		.2byte	0x24b
 2299 0153 83000000 		.4byte	0x83
 2300 0157 3F000000 		.4byte	.LLST2
 2301 015b 0C       		.uleb128 0xc
 2302 015c 08000000 		.4byte	.LVL1
 2303 0160 CB0A0000 		.4byte	0xacb
 2304 0164 0C       		.uleb128 0xc
 2305 0165 1A000000 		.4byte	.LVL5
 2306 0169 D60A0000 		.4byte	0xad6
 2307 016d 00       		.byte	0
 2308 016e 09       		.uleb128 0x9
 2309 016f C7030000 		.4byte	.LASF26
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 106


 2310 0173 01       		.byte	0x1
 2311 0174 9502     		.2byte	0x295
 2312 0176 00000000 		.4byte	.LFB3
 2313 017a 38000000 		.4byte	.LFE3-.LFB3
 2314 017e 01       		.uleb128 0x1
 2315 017f 9C       		.byte	0x9c
 2316 0180 93010000 		.4byte	0x193
 2317 0184 0D       		.uleb128 0xd
 2318 0185 35020000 		.4byte	.LASF28
 2319 0189 01       		.byte	0x1
 2320 018a 9502     		.2byte	0x295
 2321 018c 83000000 		.4byte	0x83
 2322 0190 01       		.uleb128 0x1
 2323 0191 50       		.byte	0x50
 2324 0192 00       		.byte	0
 2325 0193 0E       		.uleb128 0xe
 2326 0194 6C020000 		.4byte	.LASF34
 2327 0198 01       		.byte	0x1
 2328 0199 BA02     		.2byte	0x2ba
 2329 019b 83000000 		.4byte	0x83
 2330 019f 00000000 		.4byte	.LFB4
 2331 01a3 1C000000 		.4byte	.LFE4-.LFB4
 2332 01a7 01       		.uleb128 0x1
 2333 01a8 9C       		.byte	0x9c
 2334 01a9 E0010000 		.4byte	0x1e0
 2335 01ad 0B       		.uleb128 0xb
 2336 01ae D3010000 		.4byte	.LASF23
 2337 01b2 01       		.byte	0x1
 2338 01b3 BC02     		.2byte	0x2bc
 2339 01b5 6B000000 		.4byte	0x6b
 2340 01b9 5D000000 		.4byte	.LLST3
 2341 01bd 0B       		.uleb128 0xb
 2342 01be 35040000 		.4byte	.LASF29
 2343 01c2 01       		.byte	0x1
 2344 01c3 BD02     		.2byte	0x2bd
 2345 01c5 83000000 		.4byte	0x83
 2346 01c9 70000000 		.4byte	.LLST4
 2347 01cd 0C       		.uleb128 0xc
 2348 01ce 06000000 		.4byte	.LVL8
 2349 01d2 CB0A0000 		.4byte	0xacb
 2350 01d6 0C       		.uleb128 0xc
 2351 01d7 12000000 		.4byte	.LVL10
 2352 01db D60A0000 		.4byte	0xad6
 2353 01df 00       		.byte	0
 2354 01e0 09       		.uleb128 0x9
 2355 01e1 7D050000 		.4byte	.LASF30
 2356 01e5 01       		.byte	0x1
 2357 01e6 F702     		.2byte	0x2f7
 2358 01e8 00000000 		.4byte	.LFB5
 2359 01ec 30000000 		.4byte	.LFE5-.LFB5
 2360 01f0 01       		.uleb128 0x1
 2361 01f1 9C       		.byte	0x9c
 2362 01f2 29020000 		.4byte	0x229
 2363 01f6 0A       		.uleb128 0xa
 2364 01f7 14060000 		.4byte	.LASF31
 2365 01fb 01       		.byte	0x1
 2366 01fc F702     		.2byte	0x2f7
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 107


 2367 01fe 83000000 		.4byte	0x83
 2368 0202 8E000000 		.4byte	.LLST5
 2369 0206 0B       		.uleb128 0xb
 2370 0207 D3010000 		.4byte	.LASF23
 2371 020b 01       		.byte	0x1
 2372 020c F902     		.2byte	0x2f9
 2373 020e 6B000000 		.4byte	0x6b
 2374 0212 BA000000 		.4byte	.LLST6
 2375 0216 0C       		.uleb128 0xc
 2376 0217 08000000 		.4byte	.LVL13
 2377 021b CB0A0000 		.4byte	0xacb
 2378 021f 0C       		.uleb128 0xc
 2379 0220 24000000 		.4byte	.LVL15
 2380 0224 D60A0000 		.4byte	0xad6
 2381 0228 00       		.byte	0
 2382 0229 0F       		.uleb128 0xf
 2383 022a E7050000 		.4byte	.LASF32
 2384 022e 01       		.byte	0x1
 2385 022f 840A     		.2byte	0xa84
 2386 0231 00000000 		.4byte	.LFB8
 2387 0235 20000000 		.4byte	.LFE8-.LFB8
 2388 0239 01       		.uleb128 0x1
 2389 023a 9C       		.byte	0x9c
 2390 023b 10       		.uleb128 0x10
 2391 023c 08030000 		.4byte	.LASF80
 2392 0240 01       		.byte	0x1
 2393 0241 960A     		.2byte	0xa96
 2394 0243 83000000 		.4byte	0x83
 2395 0247 00000000 		.4byte	.LFB9
 2396 024b 10000000 		.4byte	.LFE9-.LFB9
 2397 024f 01       		.uleb128 0x1
 2398 0250 9C       		.byte	0x9c
 2399 0251 0F       		.uleb128 0xf
 2400 0252 49020000 		.4byte	.LASF33
 2401 0256 01       		.byte	0x1
 2402 0257 A60A     		.2byte	0xaa6
 2403 0259 00000000 		.4byte	.LFB10
 2404 025d 0C000000 		.4byte	.LFE10-.LFB10
 2405 0261 01       		.uleb128 0x1
 2406 0262 9C       		.byte	0x9c
 2407 0263 0E       		.uleb128 0xe
 2408 0264 5A030000 		.4byte	.LASF35
 2409 0268 01       		.byte	0x1
 2410 0269 C00A     		.2byte	0xac0
 2411 026b 83000000 		.4byte	0x83
 2412 026f 00000000 		.4byte	.LFB11
 2413 0273 14000000 		.4byte	.LFE11-.LFB11
 2414 0277 01       		.uleb128 0x1
 2415 0278 9C       		.byte	0x9c
 2416 0279 9C020000 		.4byte	0x29c
 2417 027d 0A       		.uleb128 0xa
 2418 027e 54050000 		.4byte	.LASF36
 2419 0282 01       		.byte	0x1
 2420 0283 C00A     		.2byte	0xac0
 2421 0285 83000000 		.4byte	0x83
 2422 0289 CD000000 		.4byte	.LLST7
 2423 028d 11       		.uleb128 0x11
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 108


 2424 028e F1030000 		.4byte	.LASF37
 2425 0292 01       		.byte	0x1
 2426 0293 C20A     		.2byte	0xac2
 2427 0295 83000000 		.4byte	0x83
 2428 0299 01       		.uleb128 0x1
 2429 029a 50       		.byte	0x50
 2430 029b 00       		.byte	0
 2431 029c 0E       		.uleb128 0xe
 2432 029d 61000000 		.4byte	.LASF38
 2433 02a1 01       		.byte	0x1
 2434 02a2 D70A     		.2byte	0xad7
 2435 02a4 83000000 		.4byte	0x83
 2436 02a8 00000000 		.4byte	.LFB12
 2437 02ac 10000000 		.4byte	.LFE12-.LFB12
 2438 02b0 01       		.uleb128 0x1
 2439 02b1 9C       		.byte	0x9c
 2440 02b2 C5020000 		.4byte	0x2c5
 2441 02b6 11       		.uleb128 0x11
 2442 02b7 1E000000 		.4byte	.LASF39
 2443 02bb 01       		.byte	0x1
 2444 02bc D90A     		.2byte	0xad9
 2445 02be 83000000 		.4byte	0x83
 2446 02c2 01       		.uleb128 0x1
 2447 02c3 50       		.byte	0x50
 2448 02c4 00       		.byte	0
 2449 02c5 09       		.uleb128 0x9
 2450 02c6 64010000 		.4byte	.LASF40
 2451 02ca 01       		.byte	0x1
 2452 02cb EE0A     		.2byte	0xaee
 2453 02cd 00000000 		.4byte	.LFB13
 2454 02d1 0C000000 		.4byte	.LFE13-.LFB13
 2455 02d5 01       		.uleb128 0x1
 2456 02d6 9C       		.byte	0x9c
 2457 02d7 EA020000 		.4byte	0x2ea
 2458 02db 0D       		.uleb128 0xd
 2459 02dc 67020000 		.4byte	.LASF41
 2460 02e0 01       		.byte	0x1
 2461 02e1 EE0A     		.2byte	0xaee
 2462 02e3 83000000 		.4byte	0x83
 2463 02e7 01       		.uleb128 0x1
 2464 02e8 50       		.byte	0x50
 2465 02e9 00       		.byte	0
 2466 02ea 09       		.uleb128 0x9
 2467 02eb 22050000 		.4byte	.LASF42
 2468 02ef 01       		.byte	0x1
 2469 02f0 A50B     		.2byte	0xba5
 2470 02f2 00000000 		.4byte	.LFB20
 2471 02f6 14000000 		.4byte	.LFE20-.LFB20
 2472 02fa 01       		.uleb128 0x1
 2473 02fb 9C       		.byte	0x9c
 2474 02fc 11030000 		.4byte	0x311
 2475 0300 0A       		.uleb128 0xa
 2476 0301 90030000 		.4byte	.LASF43
 2477 0305 01       		.byte	0x1
 2478 0306 A50B     		.2byte	0xba5
 2479 0308 6B000000 		.4byte	0x6b
 2480 030c EB000000 		.4byte	.LLST8
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 109


 2481 0310 00       		.byte	0
 2482 0311 0E       		.uleb128 0xe
 2483 0312 9A010000 		.4byte	.LASF44
 2484 0316 01       		.byte	0x1
 2485 0317 B70B     		.2byte	0xbb7
 2486 0319 6B000000 		.4byte	0x6b
 2487 031d 00000000 		.4byte	.LFB21
 2488 0321 18000000 		.4byte	.LFE21-.LFB21
 2489 0325 01       		.uleb128 0x1
 2490 0326 9C       		.byte	0x9c
 2491 0327 3C030000 		.4byte	0x33c
 2492 032b 0A       		.uleb128 0xa
 2493 032c 90030000 		.4byte	.LASF43
 2494 0330 01       		.byte	0x1
 2495 0331 B70B     		.2byte	0xbb7
 2496 0333 6B000000 		.4byte	0x6b
 2497 0337 0C010000 		.4byte	.LLST9
 2498 033b 00       		.byte	0
 2499 033c 09       		.uleb128 0x9
 2500 033d FE010000 		.4byte	.LASF45
 2501 0341 01       		.byte	0x1
 2502 0342 C70B     		.2byte	0xbc7
 2503 0344 00000000 		.4byte	.LFB22
 2504 0348 14000000 		.4byte	.LFE22-.LFB22
 2505 034c 01       		.uleb128 0x1
 2506 034d 9C       		.byte	0x9c
 2507 034e 63030000 		.4byte	0x363
 2508 0352 0A       		.uleb128 0xa
 2509 0353 90030000 		.4byte	.LASF43
 2510 0357 01       		.byte	0x1
 2511 0358 C70B     		.2byte	0xbc7
 2512 035a 6B000000 		.4byte	0x6b
 2513 035e 2D010000 		.4byte	.LLST10
 2514 0362 00       		.byte	0
 2515 0363 09       		.uleb128 0x9
 2516 0364 4A030000 		.4byte	.LASF46
 2517 0368 01       		.byte	0x1
 2518 0369 D50B     		.2byte	0xbd5
 2519 036b 00000000 		.4byte	.LFB23
 2520 036f 14000000 		.4byte	.LFE23-.LFB23
 2521 0373 01       		.uleb128 0x1
 2522 0374 9C       		.byte	0x9c
 2523 0375 8A030000 		.4byte	0x38a
 2524 0379 0A       		.uleb128 0xa
 2525 037a 90030000 		.4byte	.LASF43
 2526 037e 01       		.byte	0x1
 2527 037f D50B     		.2byte	0xbd5
 2528 0381 6B000000 		.4byte	0x6b
 2529 0385 4E010000 		.4byte	.LLST11
 2530 0389 00       		.byte	0
 2531 038a 09       		.uleb128 0x9
 2532 038b 07040000 		.4byte	.LASF47
 2533 038f 01       		.byte	0x1
 2534 0390 E40B     		.2byte	0xbe4
 2535 0392 00000000 		.4byte	.LFB24
 2536 0396 14000000 		.4byte	.LFE24-.LFB24
 2537 039a 01       		.uleb128 0x1
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 110


 2538 039b 9C       		.byte	0x9c
 2539 039c B1030000 		.4byte	0x3b1
 2540 03a0 0A       		.uleb128 0xa
 2541 03a1 90030000 		.4byte	.LASF43
 2542 03a5 01       		.byte	0x1
 2543 03a6 E40B     		.2byte	0xbe4
 2544 03a8 6B000000 		.4byte	0x6b
 2545 03ac 6F010000 		.4byte	.LLST12
 2546 03b0 00       		.byte	0
 2547 03b1 09       		.uleb128 0x9
 2548 03b2 03050000 		.4byte	.LASF48
 2549 03b6 01       		.byte	0x1
 2550 03b7 F30B     		.2byte	0xbf3
 2551 03b9 00000000 		.4byte	.LFB25
 2552 03bd 04000000 		.4byte	.LFE25-.LFB25
 2553 03c1 01       		.uleb128 0x1
 2554 03c2 9C       		.byte	0x9c
 2555 03c3 D6030000 		.4byte	0x3d6
 2556 03c7 0D       		.uleb128 0xd
 2557 03c8 54050000 		.4byte	.LASF36
 2558 03cc 01       		.byte	0x1
 2559 03cd F30B     		.2byte	0xbf3
 2560 03cf 6B000000 		.4byte	0x6b
 2561 03d3 01       		.uleb128 0x1
 2562 03d4 50       		.byte	0x50
 2563 03d5 00       		.byte	0
 2564 03d6 0E       		.uleb128 0xe
 2565 03d7 B5030000 		.4byte	.LASF49
 2566 03db 01       		.byte	0x1
 2567 03dc 070B     		.2byte	0xb07
 2568 03de C6000000 		.4byte	0xc6
 2569 03e2 00000000 		.4byte	.LFB14
 2570 03e6 20000000 		.4byte	.LFE14-.LFB14
 2571 03ea 01       		.uleb128 0x1
 2572 03eb 9C       		.byte	0x9c
 2573 03ec 3E040000 		.4byte	0x43e
 2574 03f0 0A       		.uleb128 0xa
 2575 03f1 90030000 		.4byte	.LASF43
 2576 03f5 01       		.byte	0x1
 2577 03f6 070B     		.2byte	0xb07
 2578 03f8 6B000000 		.4byte	0x6b
 2579 03fc 90010000 		.4byte	.LLST13
 2580 0400 0A       		.uleb128 0xa
 2581 0401 25040000 		.4byte	.LASF50
 2582 0405 01       		.byte	0x1
 2583 0406 070B     		.2byte	0xb07
 2584 0408 C6000000 		.4byte	0xc6
 2585 040c B1010000 		.4byte	.LLST14
 2586 0410 11       		.uleb128 0x11
 2587 0411 53000000 		.4byte	.LASF51
 2588 0415 01       		.byte	0x1
 2589 0416 090B     		.2byte	0xb09
 2590 0418 C6000000 		.4byte	0xc6
 2591 041c 01       		.uleb128 0x1
 2592 041d 50       		.byte	0x50
 2593 041e 12       		.uleb128 0x12
 2594 041f 00000000 		.4byte	.LASF52
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 111


 2595 0423 01       		.byte	0x1
 2596 0424 0A0B     		.2byte	0xb0a
 2597 0426 3E040000 		.4byte	0x43e
 2598 042a 00000020 		.4byte	0x20000000
 2599 042e 13       		.uleb128 0x13
 2600 042f 10000000 		.4byte	.LVL36
 2601 0433 B1030000 		.4byte	0x3b1
 2602 0437 14       		.uleb128 0x14
 2603 0438 01       		.uleb128 0x1
 2604 0439 50       		.byte	0x50
 2605 043a 01       		.uleb128 0x1
 2606 043b 30       		.byte	0x30
 2607 043c 00       		.byte	0
 2608 043d 00       		.byte	0
 2609 043e 06       		.uleb128 0x6
 2610 043f 04       		.byte	0x4
 2611 0440 C6000000 		.4byte	0xc6
 2612 0444 0E       		.uleb128 0xe
 2613 0445 2E050000 		.4byte	.LASF53
 2614 0449 01       		.byte	0x1
 2615 044a 290B     		.2byte	0xb29
 2616 044c C6000000 		.4byte	0xc6
 2617 0450 00000000 		.4byte	.LFB15
 2618 0454 1C000000 		.4byte	.LFE15-.LFB15
 2619 0458 01       		.uleb128 0x1
 2620 0459 9C       		.byte	0x9c
 2621 045a 8E040000 		.4byte	0x48e
 2622 045e 0A       		.uleb128 0xa
 2623 045f 90030000 		.4byte	.LASF43
 2624 0463 01       		.byte	0x1
 2625 0464 290B     		.2byte	0xb29
 2626 0466 6B000000 		.4byte	0x6b
 2627 046a DD010000 		.4byte	.LLST15
 2628 046e 12       		.uleb128 0x12
 2629 046f 00000000 		.4byte	.LASF52
 2630 0473 01       		.byte	0x1
 2631 0474 2B0B     		.2byte	0xb2b
 2632 0476 3E040000 		.4byte	0x43e
 2633 047a 00000020 		.4byte	0x20000000
 2634 047e 13       		.uleb128 0x13
 2635 047f 0E000000 		.4byte	.LVL42
 2636 0483 B1030000 		.4byte	0x3b1
 2637 0487 14       		.uleb128 0x14
 2638 0488 01       		.uleb128 0x1
 2639 0489 50       		.byte	0x50
 2640 048a 01       		.uleb128 0x1
 2641 048b 30       		.byte	0x30
 2642 048c 00       		.byte	0
 2643 048d 00       		.byte	0
 2644 048e 0E       		.uleb128 0xe
 2645 048f 81030000 		.4byte	.LASF54
 2646 0493 01       		.byte	0x1
 2647 0494 3F0B     		.2byte	0xb3f
 2648 0496 C6000000 		.4byte	0xc6
 2649 049a 00000000 		.4byte	.LFB16
 2650 049e 22000000 		.4byte	.LFE16-.LFB16
 2651 04a2 01       		.uleb128 0x1
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 112


 2652 04a3 9C       		.byte	0x9c
 2653 04a4 F6040000 		.4byte	0x4f6
 2654 04a8 0A       		.uleb128 0xa
 2655 04a9 90030000 		.4byte	.LASF43
 2656 04ad 01       		.byte	0x1
 2657 04ae 3F0B     		.2byte	0xb3f
 2658 04b0 6B000000 		.4byte	0x6b
 2659 04b4 FE010000 		.4byte	.LLST16
 2660 04b8 0A       		.uleb128 0xa
 2661 04b9 25040000 		.4byte	.LASF50
 2662 04bd 01       		.byte	0x1
 2663 04be 3F0B     		.2byte	0xb3f
 2664 04c0 C6000000 		.4byte	0xc6
 2665 04c4 1F020000 		.4byte	.LLST17
 2666 04c8 11       		.uleb128 0x11
 2667 04c9 53000000 		.4byte	.LASF51
 2668 04cd 01       		.byte	0x1
 2669 04ce 410B     		.2byte	0xb41
 2670 04d0 C6000000 		.4byte	0xc6
 2671 04d4 01       		.uleb128 0x1
 2672 04d5 50       		.byte	0x50
 2673 04d6 12       		.uleb128 0x12
 2674 04d7 00000000 		.4byte	.LASF52
 2675 04db 01       		.byte	0x1
 2676 04dc 420B     		.2byte	0xb42
 2677 04de 3E040000 		.4byte	0x43e
 2678 04e2 00000020 		.4byte	0x20000000
 2679 04e6 13       		.uleb128 0x13
 2680 04e7 10000000 		.4byte	.LVL46
 2681 04eb B1030000 		.4byte	0x3b1
 2682 04ef 14       		.uleb128 0x14
 2683 04f0 01       		.uleb128 0x1
 2684 04f1 50       		.byte	0x50
 2685 04f2 01       		.uleb128 0x1
 2686 04f3 30       		.byte	0x30
 2687 04f4 00       		.byte	0
 2688 04f5 00       		.byte	0
 2689 04f6 0E       		.uleb128 0xe
 2690 04f7 CA040000 		.4byte	.LASF55
 2691 04fb 01       		.byte	0x1
 2692 04fc 5B0B     		.2byte	0xb5b
 2693 04fe C6000000 		.4byte	0xc6
 2694 0502 00000000 		.4byte	.LFB17
 2695 0506 1E000000 		.4byte	.LFE17-.LFB17
 2696 050a 01       		.uleb128 0x1
 2697 050b 9C       		.byte	0x9c
 2698 050c 40050000 		.4byte	0x540
 2699 0510 0A       		.uleb128 0xa
 2700 0511 90030000 		.4byte	.LASF43
 2701 0515 01       		.byte	0x1
 2702 0516 5B0B     		.2byte	0xb5b
 2703 0518 6B000000 		.4byte	0x6b
 2704 051c 4B020000 		.4byte	.LLST18
 2705 0520 12       		.uleb128 0x12
 2706 0521 00000000 		.4byte	.LASF52
 2707 0525 01       		.byte	0x1
 2708 0526 5D0B     		.2byte	0xb5d
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 113


 2709 0528 3E040000 		.4byte	0x43e
 2710 052c 00000020 		.4byte	0x20000000
 2711 0530 13       		.uleb128 0x13
 2712 0531 0E000000 		.4byte	.LVL52
 2713 0535 B1030000 		.4byte	0x3b1
 2714 0539 14       		.uleb128 0x14
 2715 053a 01       		.uleb128 0x1
 2716 053b 50       		.byte	0x50
 2717 053c 01       		.uleb128 0x1
 2718 053d 30       		.byte	0x30
 2719 053e 00       		.byte	0
 2720 053f 00       		.byte	0
 2721 0540 09       		.uleb128 0x9
 2722 0541 7C040000 		.4byte	.LASF56
 2723 0545 01       		.byte	0x1
 2724 0546 6E0B     		.2byte	0xb6e
 2725 0548 00000000 		.4byte	.LFB18
 2726 054c 4C000000 		.4byte	.LFE18-.LFB18
 2727 0550 01       		.uleb128 0x1
 2728 0551 9C       		.byte	0x9c
 2729 0552 DF050000 		.4byte	0x5df
 2730 0556 0A       		.uleb128 0xa
 2731 0557 90030000 		.4byte	.LASF43
 2732 055b 01       		.byte	0x1
 2733 055c 6E0B     		.2byte	0xb6e
 2734 055e 6B000000 		.4byte	0x6b
 2735 0562 6C020000 		.4byte	.LLST19
 2736 0566 0A       		.uleb128 0xa
 2737 0567 97030000 		.4byte	.LASF57
 2738 056b 01       		.byte	0x1
 2739 056c 6E0B     		.2byte	0xb6e
 2740 056e 6B000000 		.4byte	0x6b
 2741 0572 8D020000 		.4byte	.LLST20
 2742 0576 0B       		.uleb128 0xb
 2743 0577 D3010000 		.4byte	.LASF23
 2744 057b 01       		.byte	0x1
 2745 057c 700B     		.2byte	0xb70
 2746 057e 6B000000 		.4byte	0x6b
 2747 0582 AE020000 		.4byte	.LLST21
 2748 0586 0B       		.uleb128 0xb
 2749 0587 43020000 		.4byte	.LASF58
 2750 058b 01       		.byte	0x1
 2751 058c 710B     		.2byte	0xb71
 2752 058e 83000000 		.4byte	0x83
 2753 0592 C1020000 		.4byte	.LLST22
 2754 0596 0B       		.uleb128 0xb
 2755 0597 B0020000 		.4byte	.LASF59
 2756 059b 01       		.byte	0x1
 2757 059c 720B     		.2byte	0xb72
 2758 059e 83000000 		.4byte	0x83
 2759 05a2 D4020000 		.4byte	.LLST23
 2760 05a6 15       		.uleb128 0x15
 2761 05a7 10000000 		.4byte	.LVL55
 2762 05ab B1030000 		.4byte	0x3b1
 2763 05af B9050000 		.4byte	0x5b9
 2764 05b3 14       		.uleb128 0x14
 2765 05b4 01       		.uleb128 0x1
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 114


 2766 05b5 50       		.byte	0x50
 2767 05b6 01       		.uleb128 0x1
 2768 05b7 30       		.byte	0x30
 2769 05b8 00       		.byte	0
 2770 05b9 15       		.uleb128 0x15
 2771 05ba 1A000000 		.4byte	.LVL56
 2772 05be B1030000 		.4byte	0x3b1
 2773 05c2 CC050000 		.4byte	0x5cc
 2774 05c6 14       		.uleb128 0x14
 2775 05c7 01       		.uleb128 0x1
 2776 05c8 50       		.byte	0x50
 2777 05c9 01       		.uleb128 0x1
 2778 05ca 30       		.byte	0x30
 2779 05cb 00       		.byte	0
 2780 05cc 0C       		.uleb128 0xc
 2781 05cd 26000000 		.4byte	.LVL58
 2782 05d1 CB0A0000 		.4byte	0xacb
 2783 05d5 0C       		.uleb128 0xc
 2784 05d6 46000000 		.4byte	.LVL64
 2785 05da D60A0000 		.4byte	0xad6
 2786 05de 00       		.byte	0
 2787 05df 0E       		.uleb128 0xe
 2788 05e0 84020000 		.4byte	.LASF60
 2789 05e4 01       		.byte	0x1
 2790 05e5 900B     		.2byte	0xb90
 2791 05e7 6B000000 		.4byte	0x6b
 2792 05eb 00000000 		.4byte	.LFB19
 2793 05ef 2C000000 		.4byte	.LFE19-.LFB19
 2794 05f3 01       		.uleb128 0x1
 2795 05f4 9C       		.byte	0x9c
 2796 05f5 29060000 		.4byte	0x629
 2797 05f9 0A       		.uleb128 0xa
 2798 05fa 90030000 		.4byte	.LASF43
 2799 05fe 01       		.byte	0x1
 2800 05ff 900B     		.2byte	0xb90
 2801 0601 6B000000 		.4byte	0x6b
 2802 0605 08030000 		.4byte	.LLST24
 2803 0609 0B       		.uleb128 0xb
 2804 060a 97030000 		.4byte	.LASF57
 2805 060e 01       		.byte	0x1
 2806 060f 920B     		.2byte	0xb92
 2807 0611 6B000000 		.4byte	0x6b
 2808 0615 29030000 		.4byte	.LLST25
 2809 0619 13       		.uleb128 0x13
 2810 061a 0E000000 		.4byte	.LVL68
 2811 061e B1030000 		.4byte	0x3b1
 2812 0622 14       		.uleb128 0x14
 2813 0623 01       		.uleb128 0x1
 2814 0624 50       		.byte	0x50
 2815 0625 01       		.uleb128 0x1
 2816 0626 30       		.byte	0x30
 2817 0627 00       		.byte	0
 2818 0628 00       		.byte	0
 2819 0629 0F       		.uleb128 0xf
 2820 062a 71010000 		.4byte	.LASF61
 2821 062e 01       		.byte	0x1
 2822 062f 0B0C     		.2byte	0xc0b
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 115


 2823 0631 00000000 		.4byte	.LFB26
 2824 0635 18000000 		.4byte	.LFE26-.LFB26
 2825 0639 01       		.uleb128 0x1
 2826 063a 9C       		.byte	0x9c
 2827 063b 09       		.uleb128 0x9
 2828 063c C5050000 		.4byte	.LASF62
 2829 0640 01       		.byte	0x1
 2830 0641 1F0C     		.2byte	0xc1f
 2831 0643 00000000 		.4byte	.LFB27
 2832 0647 30000000 		.4byte	.LFE27-.LFB27
 2833 064b 01       		.uleb128 0x1
 2834 064c 9C       		.byte	0x9c
 2835 064d 74060000 		.4byte	0x674
 2836 0651 0A       		.uleb128 0xa
 2837 0652 D9040000 		.4byte	.LASF63
 2838 0656 01       		.byte	0x1
 2839 0657 1F0C     		.2byte	0xc1f
 2840 0659 83000000 		.4byte	0x83
 2841 065d 3C030000 		.4byte	.LLST26
 2842 0661 0C       		.uleb128 0xc
 2843 0662 0E000000 		.4byte	.LVL73
 2844 0666 E10A0000 		.4byte	0xae1
 2845 066a 0C       		.uleb128 0xc
 2846 066b 26000000 		.4byte	.LVL75
 2847 066f E10A0000 		.4byte	0xae1
 2848 0673 00       		.byte	0
 2849 0674 09       		.uleb128 0x9
 2850 0675 4A050000 		.4byte	.LASF64
 2851 0679 01       		.byte	0x1
 2852 067a 360C     		.2byte	0xc36
 2853 067c 00000000 		.4byte	.LFB28
 2854 0680 14000000 		.4byte	.LFE28-.LFB28
 2855 0684 01       		.uleb128 0x1
 2856 0685 9C       		.byte	0x9c
 2857 0686 A4060000 		.4byte	0x6a4
 2858 068a 0A       		.uleb128 0xa
 2859 068b 5D060000 		.4byte	.LASF65
 2860 068f 01       		.byte	0x1
 2861 0690 360C     		.2byte	0xc36
 2862 0692 77000000 		.4byte	0x77
 2863 0696 5A030000 		.4byte	.LLST27
 2864 069a 0C       		.uleb128 0xc
 2865 069b 0C000000 		.4byte	.LVL79
 2866 069f E10A0000 		.4byte	0xae1
 2867 06a3 00       		.byte	0
 2868 06a4 09       		.uleb128 0x9
 2869 06a5 A0030000 		.4byte	.LASF66
 2870 06a9 01       		.byte	0x1
 2871 06aa 3103     		.2byte	0x331
 2872 06ac 00000000 		.4byte	.LFB6
 2873 06b0 64010000 		.4byte	.LFE6-.LFB6
 2874 06b4 01       		.uleb128 0x1
 2875 06b5 9C       		.byte	0x9c
 2876 06b6 95070000 		.4byte	0x795
 2877 06ba 0A       		.uleb128 0xa
 2878 06bb C2010000 		.4byte	.LASF67
 2879 06bf 01       		.byte	0x1
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 116


 2880 06c0 3103     		.2byte	0x331
 2881 06c2 83000000 		.4byte	0x83
 2882 06c6 7B030000 		.4byte	.LLST28
 2883 06ca 0B       		.uleb128 0xb
 2884 06cb 0F000000 		.4byte	.LASF68
 2885 06cf 01       		.byte	0x1
 2886 06d0 3703     		.2byte	0x337
 2887 06d2 6B000000 		.4byte	0x6b
 2888 06d6 D0030000 		.4byte	.LLST29
 2889 06da 0B       		.uleb128 0xb
 2890 06db 2D040000 		.4byte	.LASF69
 2891 06df 01       		.byte	0x1
 2892 06e0 3803     		.2byte	0x338
 2893 06e2 6B000000 		.4byte	0x6b
 2894 06e6 0F040000 		.4byte	.LLST30
 2895 06ea 0B       		.uleb128 0xb
 2896 06eb 2D060000 		.4byte	.LASF70
 2897 06ef 01       		.byte	0x1
 2898 06f0 3903     		.2byte	0x339
 2899 06f2 6B000000 		.4byte	0x6b
 2900 06f6 4E040000 		.4byte	.LLST31
 2901 06fa 0B       		.uleb128 0xb
 2902 06fb 6F000000 		.4byte	.LASF71
 2903 06ff 01       		.byte	0x1
 2904 0700 3A03     		.2byte	0x33a
 2905 0702 6B000000 		.4byte	0x6b
 2906 0706 61040000 		.4byte	.LLST32
 2907 070a 0B       		.uleb128 0xb
 2908 070b D3010000 		.4byte	.LASF23
 2909 070f 01       		.byte	0x1
 2910 0710 4503     		.2byte	0x345
 2911 0712 6B000000 		.4byte	0x6b
 2912 0716 80040000 		.4byte	.LLST33
 2913 071a 0C       		.uleb128 0xc
 2914 071b 10000000 		.4byte	.LVL81
 2915 071f CB0A0000 		.4byte	0xacb
 2916 0723 15       		.uleb128 0x15
 2917 0724 B0000000 		.4byte	.LVL99
 2918 0728 E10A0000 		.4byte	0xae1
 2919 072c 36070000 		.4byte	0x736
 2920 0730 14       		.uleb128 0x14
 2921 0731 01       		.uleb128 0x1
 2922 0732 50       		.byte	0x50
 2923 0733 01       		.uleb128 0x1
 2924 0734 35       		.byte	0x35
 2925 0735 00       		.byte	0
 2926 0736 15       		.uleb128 0x15
 2927 0737 CE000000 		.4byte	.LVL102
 2928 073b E10A0000 		.4byte	0xae1
 2929 073f 49070000 		.4byte	0x749
 2930 0743 14       		.uleb128 0x14
 2931 0744 01       		.uleb128 0x1
 2932 0745 50       		.byte	0x50
 2933 0746 01       		.uleb128 0x1
 2934 0747 35       		.byte	0x35
 2935 0748 00       		.byte	0
 2936 0749 15       		.uleb128 0x15
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 117


 2937 074a EE000000 		.4byte	.LVL104
 2938 074e 74060000 		.4byte	0x674
 2939 0752 5C070000 		.4byte	0x75c
 2940 0756 14       		.uleb128 0x14
 2941 0757 01       		.uleb128 0x1
 2942 0758 50       		.byte	0x50
 2943 0759 01       		.uleb128 0x1
 2944 075a 35       		.byte	0x35
 2945 075b 00       		.byte	0
 2946 075c 15       		.uleb128 0x15
 2947 075d 00010000 		.4byte	.LVL105
 2948 0761 E10A0000 		.4byte	0xae1
 2949 0765 6F070000 		.4byte	0x76f
 2950 0769 14       		.uleb128 0x14
 2951 076a 01       		.uleb128 0x1
 2952 076b 50       		.byte	0x50
 2953 076c 01       		.uleb128 0x1
 2954 076d 35       		.byte	0x35
 2955 076e 00       		.byte	0
 2956 076f 15       		.uleb128 0x15
 2957 0770 08010000 		.4byte	.LVL107
 2958 0774 B1030000 		.4byte	0x3b1
 2959 0778 82070000 		.4byte	0x782
 2960 077c 14       		.uleb128 0x14
 2961 077d 01       		.uleb128 0x1
 2962 077e 50       		.byte	0x50
 2963 077f 01       		.uleb128 0x1
 2964 0780 30       		.byte	0x30
 2965 0781 00       		.byte	0
 2966 0782 13       		.uleb128 0x13
 2967 0783 0E010000 		.4byte	.LVL108
 2968 0787 D60A0000 		.4byte	0xad6
 2969 078b 14       		.uleb128 0x14
 2970 078c 01       		.uleb128 0x1
 2971 078d 50       		.byte	0x50
 2972 078e 04       		.uleb128 0x4
 2973 078f 91       		.byte	0x91
 2974 0790 5C       		.sleb128 -36
 2975 0791 94       		.byte	0x94
 2976 0792 01       		.byte	0x1
 2977 0793 00       		.byte	0
 2978 0794 00       		.byte	0
 2979 0795 09       		.uleb128 0x9
 2980 0796 A9040000 		.4byte	.LASF72
 2981 079a 01       		.byte	0x1
 2982 079b 660A     		.2byte	0xa66
 2983 079d 00000000 		.4byte	.LFB7
 2984 07a1 44000000 		.4byte	.LFE7-.LFB7
 2985 07a5 01       		.uleb128 0x1
 2986 07a6 9C       		.byte	0x9c
 2987 07a7 DA070000 		.4byte	0x7da
 2988 07ab 0A       		.uleb128 0xa
 2989 07ac F9040000 		.4byte	.LASF73
 2990 07b0 01       		.byte	0x1
 2991 07b1 660A     		.2byte	0xa66
 2992 07b3 83000000 		.4byte	0x83
 2993 07b7 AC040000 		.4byte	.LLST34
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 118


 2994 07bb 15       		.uleb128 0x15
 2995 07bc 2E000000 		.4byte	.LVL113
 2996 07c0 74060000 		.4byte	0x674
 2997 07c4 D0070000 		.4byte	0x7d0
 2998 07c8 14       		.uleb128 0x14
 2999 07c9 01       		.uleb128 0x1
 3000 07ca 50       		.byte	0x50
 3001 07cb 03       		.uleb128 0x3
 3002 07cc 0A       		.byte	0xa
 3003 07cd E803     		.2byte	0x3e8
 3004 07cf 00       		.byte	0
 3005 07d0 0C       		.uleb128 0xc
 3006 07d1 32000000 		.4byte	.LVL114
 3007 07d5 51020000 		.4byte	0x251
 3008 07d9 00       		.byte	0
 3009 07da 16       		.uleb128 0x16
 3010 07db C7010000 		.4byte	.LASF74
 3011 07df 01       		.byte	0x1
 3012 07e0 440C     		.2byte	0xc44
 3013 07e2 00000000 		.4byte	.LFB29
 3014 07e6 4C000000 		.4byte	.LFE29-.LFB29
 3015 07ea 01       		.uleb128 0x1
 3016 07eb 9C       		.byte	0x9c
 3017 07ec 01080000 		.4byte	0x801
 3018 07f0 0A       		.uleb128 0xa
 3019 07f1 C2010000 		.4byte	.LASF67
 3020 07f5 01       		.byte	0x1
 3021 07f6 440C     		.2byte	0xc44
 3022 07f8 83000000 		.4byte	0x83
 3023 07fc D8040000 		.4byte	.LLST35
 3024 0800 00       		.byte	0
 3025 0801 0F       		.uleb128 0xf
 3026 0802 06060000 		.4byte	.LASF75
 3027 0806 01       		.byte	0x1
 3028 0807 B00C     		.2byte	0xcb0
 3029 0809 00000000 		.4byte	.LFB33
 3030 080d 10000000 		.4byte	.LFE33-.LFB33
 3031 0811 01       		.uleb128 0x1
 3032 0812 9C       		.byte	0x9c
 3033 0813 0F       		.uleb128 0xf
 3034 0814 81010000 		.4byte	.LASF76
 3035 0818 01       		.byte	0x1
 3036 0819 C00C     		.2byte	0xcc0
 3037 081b 00000000 		.4byte	.LFB34
 3038 081f 10000000 		.4byte	.LFE34-.LFB34
 3039 0823 01       		.uleb128 0x1
 3040 0824 9C       		.byte	0x9c
 3041 0825 09       		.uleb128 0x9
 3042 0826 6D050000 		.4byte	.LASF77
 3043 082a 01       		.byte	0x1
 3044 082b 9F0C     		.2byte	0xc9f
 3045 082d 00000000 		.4byte	.LFB32
 3046 0831 18000000 		.4byte	.LFE32-.LFB32
 3047 0835 01       		.uleb128 0x1
 3048 0836 9C       		.byte	0x9c
 3049 0837 45080000 		.4byte	0x845
 3050 083b 0C       		.uleb128 0xc
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 119


 3051 083c 06000000 		.4byte	.LVL119
 3052 0840 13080000 		.4byte	0x813
 3053 0844 00       		.byte	0
 3054 0845 0F       		.uleb128 0xf
 3055 0846 CD050000 		.4byte	.LASF78
 3056 084a 01       		.byte	0x1
 3057 084b D00C     		.2byte	0xcd0
 3058 084d 00000000 		.4byte	.LFB35
 3059 0851 10000000 		.4byte	.LFE35-.LFB35
 3060 0855 01       		.uleb128 0x1
 3061 0856 9C       		.byte	0x9c
 3062 0857 09       		.uleb128 0x9
 3063 0858 71060000 		.4byte	.LASF79
 3064 085c 01       		.byte	0x1
 3065 085d E10C     		.2byte	0xce1
 3066 085f 00000000 		.4byte	.LFB36
 3067 0863 10000000 		.4byte	.LFE36-.LFB36
 3068 0867 01       		.uleb128 0x1
 3069 0868 9C       		.byte	0x9c
 3070 0869 7E080000 		.4byte	0x87e
 3071 086d 0A       		.uleb128 0xa
 3072 086e B0020000 		.4byte	.LASF59
 3073 0872 01       		.byte	0x1
 3074 0873 E10C     		.2byte	0xce1
 3075 0875 83000000 		.4byte	0x83
 3076 0879 F9040000 		.4byte	.LLST36
 3077 087d 00       		.byte	0
 3078 087e 10       		.uleb128 0x10
 3079 087f E2010000 		.4byte	.LASF81
 3080 0883 01       		.byte	0x1
 3081 0884 F10C     		.2byte	0xcf1
 3082 0886 83000000 		.4byte	0x83
 3083 088a 00000000 		.4byte	.LFB37
 3084 088e 10000000 		.4byte	.LFE37-.LFB37
 3085 0892 01       		.uleb128 0x1
 3086 0893 9C       		.byte	0x9c
 3087 0894 10       		.uleb128 0x10
 3088 0895 5C040000 		.4byte	.LASF82
 3089 0899 01       		.byte	0x1
 3090 089a 010D     		.2byte	0xd01
 3091 089c 83000000 		.4byte	0x83
 3092 08a0 00000000 		.4byte	.LFB38
 3093 08a4 10000000 		.4byte	.LFE38-.LFB38
 3094 08a8 01       		.uleb128 0x1
 3095 08a9 9C       		.byte	0x9c
 3096 08aa 10       		.uleb128 0x10
 3097 08ab C4020000 		.4byte	.LASF83
 3098 08af 01       		.byte	0x1
 3099 08b0 510D     		.2byte	0xd51
 3100 08b2 83000000 		.4byte	0x83
 3101 08b6 00000000 		.4byte	.LFB39
 3102 08ba 10000000 		.4byte	.LFE39-.LFB39
 3103 08be 01       		.uleb128 0x1
 3104 08bf 9C       		.byte	0x9c
 3105 08c0 17       		.uleb128 0x17
 3106 08c1 84060000 		.4byte	.LASF107
 3107 08c5 01       		.byte	0x1
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 120


 3108 08c6 A60D     		.2byte	0xda6
 3109 08c8 00000000 		.4byte	.LFB43
 3110 08cc 28000000 		.4byte	.LFE43-.LFB43
 3111 08d0 01       		.uleb128 0x1
 3112 08d1 9C       		.byte	0x9c
 3113 08d2 EE080000 		.4byte	0x8ee
 3114 08d6 18       		.uleb128 0x18
 3115 08d7 6900     		.ascii	"i\000"
 3116 08d9 01       		.byte	0x1
 3117 08da A80D     		.2byte	0xda8
 3118 08dc 83000000 		.4byte	0x83
 3119 08e0 1A050000 		.4byte	.LLST37
 3120 08e4 0C       		.uleb128 0xc
 3121 08e5 06000000 		.4byte	.LVL122
 3122 08e9 AA080000 		.4byte	0x8aa
 3123 08ed 00       		.byte	0
 3124 08ee 0F       		.uleb128 0xf
 3125 08ef E7020000 		.4byte	.LASF84
 3126 08f3 01       		.byte	0x1
 3127 08f4 5E0D     		.2byte	0xd5e
 3128 08f6 00000000 		.4byte	.LFB40
 3129 08fa 0C000000 		.4byte	.LFE40-.LFB40
 3130 08fe 01       		.uleb128 0x1
 3131 08ff 9C       		.byte	0x9c
 3132 0900 16       		.uleb128 0x16
 3133 0901 A2020000 		.4byte	.LASF85
 3134 0905 01       		.byte	0x1
 3135 0906 810C     		.2byte	0xc81
 3136 0908 00000000 		.4byte	.LFB31
 3137 090c 40000000 		.4byte	.LFE31-.LFB31
 3138 0910 01       		.uleb128 0x1
 3139 0911 9C       		.byte	0x9c
 3140 0912 53090000 		.4byte	0x953
 3141 0916 18       		.uleb128 0x18
 3142 0917 6900     		.ascii	"i\000"
 3143 0919 01       		.byte	0x1
 3144 091a 830C     		.2byte	0xc83
 3145 091c 83000000 		.4byte	0x83
 3146 0920 38050000 		.4byte	.LLST38
 3147 0924 15       		.uleb128 0x15
 3148 0925 1C000000 		.4byte	.LVL132
 3149 0929 D6030000 		.4byte	0x3d6
 3150 092d 40090000 		.4byte	0x940
 3151 0931 14       		.uleb128 0x14
 3152 0932 01       		.uleb128 0x1
 3153 0933 50       		.byte	0x50
 3154 0934 01       		.uleb128 0x1
 3155 0935 3F       		.byte	0x3f
 3156 0936 14       		.uleb128 0x14
 3157 0937 01       		.uleb128 0x1
 3158 0938 51       		.byte	0x51
 3159 0939 05       		.uleb128 0x5
 3160 093a 03       		.byte	0x3
 3161 093b 00000000 		.4byte	CySysTickServiceCallbacks
 3162 093f 00       		.byte	0
 3163 0940 0C       		.uleb128 0xc
 3164 0941 2C000000 		.4byte	.LVL134
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 121


 3165 0945 57080000 		.4byte	0x857
 3166 0949 0C       		.uleb128 0xc
 3167 094a 30000000 		.4byte	.LVL135
 3168 094e EE080000 		.4byte	0x8ee
 3169 0952 00       		.byte	0
 3170 0953 09       		.uleb128 0x9
 3171 0954 E2030000 		.4byte	.LASF86
 3172 0958 01       		.byte	0x1
 3173 0959 640C     		.2byte	0xc64
 3174 095b 00000000 		.4byte	.LFB30
 3175 095f 20000000 		.4byte	.LFE30-.LFB30
 3176 0963 01       		.uleb128 0x1
 3177 0964 9C       		.byte	0x9c
 3178 0965 7C090000 		.4byte	0x97c
 3179 0969 0C       		.uleb128 0xc
 3180 096a 0E000000 		.4byte	.LVL136
 3181 096e 00090000 		.4byte	0x900
 3182 0972 0C       		.uleb128 0xc
 3183 0973 18000000 		.4byte	.LVL137
 3184 0977 25080000 		.4byte	0x825
 3185 097b 00       		.byte	0
 3186 097c 0E       		.uleb128 0xe
 3187 097d 94050000 		.4byte	.LASF87
 3188 0981 01       		.byte	0x1
 3189 0982 810D     		.2byte	0xd81
 3190 0984 E7000000 		.4byte	0xe7
 3191 0988 00000000 		.4byte	.LFB41
 3192 098c 10000000 		.4byte	.LFE41-.LFB41
 3193 0990 01       		.uleb128 0x1
 3194 0991 9C       		.byte	0x9c
 3195 0992 C3090000 		.4byte	0x9c3
 3196 0996 0A       		.uleb128 0xa
 3197 0997 90030000 		.4byte	.LASF43
 3198 099b 01       		.byte	0x1
 3199 099c 810D     		.2byte	0xd81
 3200 099e 83000000 		.4byte	0x83
 3201 09a2 57050000 		.4byte	.LLST39
 3202 09a6 0D       		.uleb128 0xd
 3203 09a7 42040000 		.4byte	.LASF88
 3204 09ab 01       		.byte	0x1
 3205 09ac 810D     		.2byte	0xd81
 3206 09ae E7000000 		.4byte	0xe7
 3207 09b2 01       		.uleb128 0x1
 3208 09b3 51       		.byte	0x51
 3209 09b4 11       		.uleb128 0x11
 3210 09b5 5A000000 		.4byte	.LASF89
 3211 09b9 01       		.byte	0x1
 3212 09ba 830D     		.2byte	0xd83
 3213 09bc E7000000 		.4byte	0xe7
 3214 09c0 01       		.uleb128 0x1
 3215 09c1 50       		.byte	0x50
 3216 09c2 00       		.byte	0
 3217 09c3 0E       		.uleb128 0xe
 3218 09c4 0B020000 		.4byte	.LASF90
 3219 09c8 01       		.byte	0x1
 3220 09c9 990D     		.2byte	0xd99
 3221 09cb E7000000 		.4byte	0xe7
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 122


 3222 09cf 00000000 		.4byte	.LFB42
 3223 09d3 0C000000 		.4byte	.LFE42-.LFB42
 3224 09d7 01       		.uleb128 0x1
 3225 09d8 9C       		.byte	0x9c
 3226 09d9 EE090000 		.4byte	0x9ee
 3227 09dd 0A       		.uleb128 0xa
 3228 09de 90030000 		.4byte	.LASF43
 3229 09e2 01       		.byte	0x1
 3230 09e3 990D     		.2byte	0xd99
 3231 09e5 83000000 		.4byte	0x83
 3232 09e9 78050000 		.4byte	.LLST40
 3233 09ed 00       		.byte	0
 3234 09ee 09       		.uleb128 0x9
 3235 09ef B6020000 		.4byte	.LASF91
 3236 09f3 01       		.byte	0x1
 3237 09f4 C60D     		.2byte	0xdc6
 3238 09f6 00000000 		.4byte	.LFB44
 3239 09fa 70000000 		.4byte	.LFE44-.LFB44
 3240 09fe 01       		.uleb128 0x1
 3241 09ff 9C       		.byte	0x9c
 3242 0a00 130A0000 		.4byte	0xa13
 3243 0a04 0D       		.uleb128 0xd
 3244 0a05 BC050000 		.4byte	.LASF92
 3245 0a09 01       		.byte	0x1
 3246 0a0a C60D     		.2byte	0xdc6
 3247 0a0c 130A0000 		.4byte	0xa13
 3248 0a10 01       		.uleb128 0x1
 3249 0a11 50       		.byte	0x50
 3250 0a12 00       		.byte	0
 3251 0a13 06       		.uleb128 0x6
 3252 0a14 04       		.byte	0x4
 3253 0a15 83000000 		.4byte	0x83
 3254 0a19 19       		.uleb128 0x19
 3255 0a1a E7000000 		.4byte	0xe7
 3256 0a1e 290A0000 		.4byte	0xa29
 3257 0a22 1A       		.uleb128 0x1a
 3258 0a23 E0000000 		.4byte	0xe0
 3259 0a27 04       		.byte	0x4
 3260 0a28 00       		.byte	0
 3261 0a29 1B       		.uleb128 0x1b
 3262 0a2a A9050000 		.4byte	.LASF93
 3263 0a2e 01       		.byte	0x1
 3264 0a2f 22       		.byte	0x22
 3265 0a30 190A0000 		.4byte	0xa19
 3266 0a34 05       		.uleb128 0x5
 3267 0a35 03       		.byte	0x3
 3268 0a36 00000000 		.4byte	CySysTickCallbacks
 3269 0a3a 1C       		.uleb128 0x1c
 3270 0a3b 6E040000 		.4byte	.LASF94
 3271 0a3f 01       		.byte	0x1
 3272 0a40 1B       		.byte	0x1b
 3273 0a41 83000000 		.4byte	0x83
 3274 0a45 05       		.uleb128 0x5
 3275 0a46 03       		.byte	0x3
 3276 0a47 00000000 		.4byte	cydelayFreqHz
 3277 0a4b 1C       		.uleb128 0x1c
 3278 0a4c 26020000 		.4byte	.LASF95
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 123


 3279 0a50 01       		.byte	0x1
 3280 0a51 1C       		.byte	0x1c
 3281 0a52 83000000 		.4byte	0x83
 3282 0a56 05       		.uleb128 0x5
 3283 0a57 03       		.byte	0x3
 3284 0a58 00000000 		.4byte	cydelayFreqKhz
 3285 0a5c 1C       		.uleb128 0x1c
 3286 0a5d F7050000 		.4byte	.LASF96
 3287 0a61 01       		.byte	0x1
 3288 0a62 1D       		.byte	0x1d
 3289 0a63 6B000000 		.4byte	0x6b
 3290 0a67 05       		.uleb128 0x5
 3291 0a68 03       		.byte	0x3
 3292 0a69 00000000 		.4byte	cydelayFreqMhz
 3293 0a6d 1C       		.uleb128 0x1c
 3294 0a6e 95020000 		.4byte	.LASF97
 3295 0a72 01       		.byte	0x1
 3296 0a73 1E       		.byte	0x1e
 3297 0a74 83000000 		.4byte	0x83
 3298 0a78 05       		.uleb128 0x5
 3299 0a79 03       		.byte	0x3
 3300 0a7a 00000000 		.4byte	cydelay32kMs
 3301 0a7e 1C       		.uleb128 0x1c
 3302 0a7f 53010000 		.4byte	.LASF98
 3303 0a83 01       		.byte	0x1
 3304 0a84 36       		.byte	0x36
 3305 0a85 83000000 		.4byte	0x83
 3306 0a89 05       		.uleb128 0x5
 3307 0a8a 03       		.byte	0x3
 3308 0a8b 00000000 		.4byte	CySysTickInitVar
 3309 0a8f 19       		.uleb128 0x19
 3310 0a90 9F0A0000 		.4byte	0xa9f
 3311 0a94 9F0A0000 		.4byte	0xa9f
 3312 0a98 1A       		.uleb128 0x1a
 3313 0a99 E0000000 		.4byte	0xe0
 3314 0a9d 2D       		.byte	0x2d
 3315 0a9e 00       		.byte	0
 3316 0a9f 1D       		.uleb128 0x1d
 3317 0aa0 6B000000 		.4byte	0x6b
 3318 0aa4 1C       		.uleb128 0x1c
 3319 0aa5 4B040000 		.4byte	.LASF99
 3320 0aa9 01       		.byte	0x1
 3321 0aaa 3B       		.byte	0x3b
 3322 0aab B50A0000 		.4byte	0xab5
 3323 0aaf 05       		.uleb128 0x5
 3324 0ab0 03       		.byte	0x3
 3325 0ab1 00000000 		.4byte	cyImoFreqMhz2Reg
 3326 0ab5 1D       		.uleb128 0x1d
 3327 0ab6 8F0A0000 		.4byte	0xa8f
 3328 0aba 1C       		.uleb128 0x1c
 3329 0abb 40000000 		.4byte	.LASF100
 3330 0abf 01       		.byte	0x1
 3331 0ac0 58       		.byte	0x58
 3332 0ac1 83000000 		.4byte	0x83
 3333 0ac5 05       		.uleb128 0x5
 3334 0ac6 03       		.byte	0x3
 3335 0ac7 00000000 		.4byte	CySysClkPumpConfig
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 124


 3336 0acb 1E       		.uleb128 0x1e
 3337 0acc 33030000 		.4byte	.LASF101
 3338 0ad0 33030000 		.4byte	.LASF101
 3339 0ad4 03       		.byte	0x3
 3340 0ad5 F8       		.byte	0xf8
 3341 0ad6 1E       		.uleb128 0x1e
 3342 0ad7 93040000 		.4byte	.LASF102
 3343 0adb 93040000 		.4byte	.LASF102
 3344 0adf 03       		.byte	0x3
 3345 0ae0 F9       		.byte	0xf9
 3346 0ae1 1E       		.uleb128 0x1e
 3347 0ae2 E6040000 		.4byte	.LASF103
 3348 0ae6 E6040000 		.4byte	.LASF103
 3349 0aea 03       		.byte	0x3
 3350 0aeb EF       		.byte	0xef
 3351 0aec 00       		.byte	0
 3352              		.section	.debug_abbrev,"",%progbits
 3353              	.Ldebug_abbrev0:
 3354 0000 01       		.uleb128 0x1
 3355 0001 11       		.uleb128 0x11
 3356 0002 01       		.byte	0x1
 3357 0003 25       		.uleb128 0x25
 3358 0004 0E       		.uleb128 0xe
 3359 0005 13       		.uleb128 0x13
 3360 0006 0B       		.uleb128 0xb
 3361 0007 03       		.uleb128 0x3
 3362 0008 0E       		.uleb128 0xe
 3363 0009 1B       		.uleb128 0x1b
 3364 000a 0E       		.uleb128 0xe
 3365 000b 55       		.uleb128 0x55
 3366 000c 17       		.uleb128 0x17
 3367 000d 11       		.uleb128 0x11
 3368 000e 01       		.uleb128 0x1
 3369 000f 10       		.uleb128 0x10
 3370 0010 17       		.uleb128 0x17
 3371 0011 00       		.byte	0
 3372 0012 00       		.byte	0
 3373 0013 02       		.uleb128 0x2
 3374 0014 24       		.uleb128 0x24
 3375 0015 00       		.byte	0
 3376 0016 0B       		.uleb128 0xb
 3377 0017 0B       		.uleb128 0xb
 3378 0018 3E       		.uleb128 0x3e
 3379 0019 0B       		.uleb128 0xb
 3380 001a 03       		.uleb128 0x3
 3381 001b 0E       		.uleb128 0xe
 3382 001c 00       		.byte	0
 3383 001d 00       		.byte	0
 3384 001e 03       		.uleb128 0x3
 3385 001f 24       		.uleb128 0x24
 3386 0020 00       		.byte	0
 3387 0021 0B       		.uleb128 0xb
 3388 0022 0B       		.uleb128 0xb
 3389 0023 3E       		.uleb128 0x3e
 3390 0024 0B       		.uleb128 0xb
 3391 0025 03       		.uleb128 0x3
 3392 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 125


 3393 0027 00       		.byte	0
 3394 0028 00       		.byte	0
 3395 0029 04       		.uleb128 0x4
 3396 002a 16       		.uleb128 0x16
 3397 002b 00       		.byte	0
 3398 002c 03       		.uleb128 0x3
 3399 002d 0E       		.uleb128 0xe
 3400 002e 3A       		.uleb128 0x3a
 3401 002f 0B       		.uleb128 0xb
 3402 0030 3B       		.uleb128 0x3b
 3403 0031 05       		.uleb128 0x5
 3404 0032 49       		.uleb128 0x49
 3405 0033 13       		.uleb128 0x13
 3406 0034 00       		.byte	0
 3407 0035 00       		.byte	0
 3408 0036 05       		.uleb128 0x5
 3409 0037 35       		.uleb128 0x35
 3410 0038 00       		.byte	0
 3411 0039 49       		.uleb128 0x49
 3412 003a 13       		.uleb128 0x13
 3413 003b 00       		.byte	0
 3414 003c 00       		.byte	0
 3415 003d 06       		.uleb128 0x6
 3416 003e 0F       		.uleb128 0xf
 3417 003f 00       		.byte	0
 3418 0040 0B       		.uleb128 0xb
 3419 0041 0B       		.uleb128 0xb
 3420 0042 49       		.uleb128 0x49
 3421 0043 13       		.uleb128 0x13
 3422 0044 00       		.byte	0
 3423 0045 00       		.byte	0
 3424 0046 07       		.uleb128 0x7
 3425 0047 15       		.uleb128 0x15
 3426 0048 00       		.byte	0
 3427 0049 27       		.uleb128 0x27
 3428 004a 19       		.uleb128 0x19
 3429 004b 00       		.byte	0
 3430 004c 00       		.byte	0
 3431 004d 08       		.uleb128 0x8
 3432 004e 2E       		.uleb128 0x2e
 3433 004f 00       		.byte	0
 3434 0050 3F       		.uleb128 0x3f
 3435 0051 19       		.uleb128 0x19
 3436 0052 03       		.uleb128 0x3
 3437 0053 0E       		.uleb128 0xe
 3438 0054 3A       		.uleb128 0x3a
 3439 0055 0B       		.uleb128 0xb
 3440 0056 3B       		.uleb128 0x3b
 3441 0057 0B       		.uleb128 0xb
 3442 0058 27       		.uleb128 0x27
 3443 0059 19       		.uleb128 0x19
 3444 005a 11       		.uleb128 0x11
 3445 005b 01       		.uleb128 0x1
 3446 005c 12       		.uleb128 0x12
 3447 005d 06       		.uleb128 0x6
 3448 005e 40       		.uleb128 0x40
 3449 005f 18       		.uleb128 0x18
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 126


 3450 0060 9742     		.uleb128 0x2117
 3451 0062 19       		.uleb128 0x19
 3452 0063 00       		.byte	0
 3453 0064 00       		.byte	0
 3454 0065 09       		.uleb128 0x9
 3455 0066 2E       		.uleb128 0x2e
 3456 0067 01       		.byte	0x1
 3457 0068 3F       		.uleb128 0x3f
 3458 0069 19       		.uleb128 0x19
 3459 006a 03       		.uleb128 0x3
 3460 006b 0E       		.uleb128 0xe
 3461 006c 3A       		.uleb128 0x3a
 3462 006d 0B       		.uleb128 0xb
 3463 006e 3B       		.uleb128 0x3b
 3464 006f 05       		.uleb128 0x5
 3465 0070 27       		.uleb128 0x27
 3466 0071 19       		.uleb128 0x19
 3467 0072 11       		.uleb128 0x11
 3468 0073 01       		.uleb128 0x1
 3469 0074 12       		.uleb128 0x12
 3470 0075 06       		.uleb128 0x6
 3471 0076 40       		.uleb128 0x40
 3472 0077 18       		.uleb128 0x18
 3473 0078 9742     		.uleb128 0x2117
 3474 007a 19       		.uleb128 0x19
 3475 007b 01       		.uleb128 0x1
 3476 007c 13       		.uleb128 0x13
 3477 007d 00       		.byte	0
 3478 007e 00       		.byte	0
 3479 007f 0A       		.uleb128 0xa
 3480 0080 05       		.uleb128 0x5
 3481 0081 00       		.byte	0
 3482 0082 03       		.uleb128 0x3
 3483 0083 0E       		.uleb128 0xe
 3484 0084 3A       		.uleb128 0x3a
 3485 0085 0B       		.uleb128 0xb
 3486 0086 3B       		.uleb128 0x3b
 3487 0087 05       		.uleb128 0x5
 3488 0088 49       		.uleb128 0x49
 3489 0089 13       		.uleb128 0x13
 3490 008a 02       		.uleb128 0x2
 3491 008b 17       		.uleb128 0x17
 3492 008c 00       		.byte	0
 3493 008d 00       		.byte	0
 3494 008e 0B       		.uleb128 0xb
 3495 008f 34       		.uleb128 0x34
 3496 0090 00       		.byte	0
 3497 0091 03       		.uleb128 0x3
 3498 0092 0E       		.uleb128 0xe
 3499 0093 3A       		.uleb128 0x3a
 3500 0094 0B       		.uleb128 0xb
 3501 0095 3B       		.uleb128 0x3b
 3502 0096 05       		.uleb128 0x5
 3503 0097 49       		.uleb128 0x49
 3504 0098 13       		.uleb128 0x13
 3505 0099 02       		.uleb128 0x2
 3506 009a 17       		.uleb128 0x17
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 127


 3507 009b 00       		.byte	0
 3508 009c 00       		.byte	0
 3509 009d 0C       		.uleb128 0xc
 3510 009e 898201   		.uleb128 0x4109
 3511 00a1 00       		.byte	0
 3512 00a2 11       		.uleb128 0x11
 3513 00a3 01       		.uleb128 0x1
 3514 00a4 31       		.uleb128 0x31
 3515 00a5 13       		.uleb128 0x13
 3516 00a6 00       		.byte	0
 3517 00a7 00       		.byte	0
 3518 00a8 0D       		.uleb128 0xd
 3519 00a9 05       		.uleb128 0x5
 3520 00aa 00       		.byte	0
 3521 00ab 03       		.uleb128 0x3
 3522 00ac 0E       		.uleb128 0xe
 3523 00ad 3A       		.uleb128 0x3a
 3524 00ae 0B       		.uleb128 0xb
 3525 00af 3B       		.uleb128 0x3b
 3526 00b0 05       		.uleb128 0x5
 3527 00b1 49       		.uleb128 0x49
 3528 00b2 13       		.uleb128 0x13
 3529 00b3 02       		.uleb128 0x2
 3530 00b4 18       		.uleb128 0x18
 3531 00b5 00       		.byte	0
 3532 00b6 00       		.byte	0
 3533 00b7 0E       		.uleb128 0xe
 3534 00b8 2E       		.uleb128 0x2e
 3535 00b9 01       		.byte	0x1
 3536 00ba 3F       		.uleb128 0x3f
 3537 00bb 19       		.uleb128 0x19
 3538 00bc 03       		.uleb128 0x3
 3539 00bd 0E       		.uleb128 0xe
 3540 00be 3A       		.uleb128 0x3a
 3541 00bf 0B       		.uleb128 0xb
 3542 00c0 3B       		.uleb128 0x3b
 3543 00c1 05       		.uleb128 0x5
 3544 00c2 27       		.uleb128 0x27
 3545 00c3 19       		.uleb128 0x19
 3546 00c4 49       		.uleb128 0x49
 3547 00c5 13       		.uleb128 0x13
 3548 00c6 11       		.uleb128 0x11
 3549 00c7 01       		.uleb128 0x1
 3550 00c8 12       		.uleb128 0x12
 3551 00c9 06       		.uleb128 0x6
 3552 00ca 40       		.uleb128 0x40
 3553 00cb 18       		.uleb128 0x18
 3554 00cc 9742     		.uleb128 0x2117
 3555 00ce 19       		.uleb128 0x19
 3556 00cf 01       		.uleb128 0x1
 3557 00d0 13       		.uleb128 0x13
 3558 00d1 00       		.byte	0
 3559 00d2 00       		.byte	0
 3560 00d3 0F       		.uleb128 0xf
 3561 00d4 2E       		.uleb128 0x2e
 3562 00d5 00       		.byte	0
 3563 00d6 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 128


 3564 00d7 19       		.uleb128 0x19
 3565 00d8 03       		.uleb128 0x3
 3566 00d9 0E       		.uleb128 0xe
 3567 00da 3A       		.uleb128 0x3a
 3568 00db 0B       		.uleb128 0xb
 3569 00dc 3B       		.uleb128 0x3b
 3570 00dd 05       		.uleb128 0x5
 3571 00de 27       		.uleb128 0x27
 3572 00df 19       		.uleb128 0x19
 3573 00e0 11       		.uleb128 0x11
 3574 00e1 01       		.uleb128 0x1
 3575 00e2 12       		.uleb128 0x12
 3576 00e3 06       		.uleb128 0x6
 3577 00e4 40       		.uleb128 0x40
 3578 00e5 18       		.uleb128 0x18
 3579 00e6 9742     		.uleb128 0x2117
 3580 00e8 19       		.uleb128 0x19
 3581 00e9 00       		.byte	0
 3582 00ea 00       		.byte	0
 3583 00eb 10       		.uleb128 0x10
 3584 00ec 2E       		.uleb128 0x2e
 3585 00ed 00       		.byte	0
 3586 00ee 3F       		.uleb128 0x3f
 3587 00ef 19       		.uleb128 0x19
 3588 00f0 03       		.uleb128 0x3
 3589 00f1 0E       		.uleb128 0xe
 3590 00f2 3A       		.uleb128 0x3a
 3591 00f3 0B       		.uleb128 0xb
 3592 00f4 3B       		.uleb128 0x3b
 3593 00f5 05       		.uleb128 0x5
 3594 00f6 27       		.uleb128 0x27
 3595 00f7 19       		.uleb128 0x19
 3596 00f8 49       		.uleb128 0x49
 3597 00f9 13       		.uleb128 0x13
 3598 00fa 11       		.uleb128 0x11
 3599 00fb 01       		.uleb128 0x1
 3600 00fc 12       		.uleb128 0x12
 3601 00fd 06       		.uleb128 0x6
 3602 00fe 40       		.uleb128 0x40
 3603 00ff 18       		.uleb128 0x18
 3604 0100 9742     		.uleb128 0x2117
 3605 0102 19       		.uleb128 0x19
 3606 0103 00       		.byte	0
 3607 0104 00       		.byte	0
 3608 0105 11       		.uleb128 0x11
 3609 0106 34       		.uleb128 0x34
 3610 0107 00       		.byte	0
 3611 0108 03       		.uleb128 0x3
 3612 0109 0E       		.uleb128 0xe
 3613 010a 3A       		.uleb128 0x3a
 3614 010b 0B       		.uleb128 0xb
 3615 010c 3B       		.uleb128 0x3b
 3616 010d 05       		.uleb128 0x5
 3617 010e 49       		.uleb128 0x49
 3618 010f 13       		.uleb128 0x13
 3619 0110 02       		.uleb128 0x2
 3620 0111 18       		.uleb128 0x18
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 129


 3621 0112 00       		.byte	0
 3622 0113 00       		.byte	0
 3623 0114 12       		.uleb128 0x12
 3624 0115 34       		.uleb128 0x34
 3625 0116 00       		.byte	0
 3626 0117 03       		.uleb128 0x3
 3627 0118 0E       		.uleb128 0xe
 3628 0119 3A       		.uleb128 0x3a
 3629 011a 0B       		.uleb128 0xb
 3630 011b 3B       		.uleb128 0x3b
 3631 011c 05       		.uleb128 0x5
 3632 011d 49       		.uleb128 0x49
 3633 011e 13       		.uleb128 0x13
 3634 011f 1C       		.uleb128 0x1c
 3635 0120 06       		.uleb128 0x6
 3636 0121 00       		.byte	0
 3637 0122 00       		.byte	0
 3638 0123 13       		.uleb128 0x13
 3639 0124 898201   		.uleb128 0x4109
 3640 0127 01       		.byte	0x1
 3641 0128 11       		.uleb128 0x11
 3642 0129 01       		.uleb128 0x1
 3643 012a 31       		.uleb128 0x31
 3644 012b 13       		.uleb128 0x13
 3645 012c 00       		.byte	0
 3646 012d 00       		.byte	0
 3647 012e 14       		.uleb128 0x14
 3648 012f 8A8201   		.uleb128 0x410a
 3649 0132 00       		.byte	0
 3650 0133 02       		.uleb128 0x2
 3651 0134 18       		.uleb128 0x18
 3652 0135 9142     		.uleb128 0x2111
 3653 0137 18       		.uleb128 0x18
 3654 0138 00       		.byte	0
 3655 0139 00       		.byte	0
 3656 013a 15       		.uleb128 0x15
 3657 013b 898201   		.uleb128 0x4109
 3658 013e 01       		.byte	0x1
 3659 013f 11       		.uleb128 0x11
 3660 0140 01       		.uleb128 0x1
 3661 0141 31       		.uleb128 0x31
 3662 0142 13       		.uleb128 0x13
 3663 0143 01       		.uleb128 0x1
 3664 0144 13       		.uleb128 0x13
 3665 0145 00       		.byte	0
 3666 0146 00       		.byte	0
 3667 0147 16       		.uleb128 0x16
 3668 0148 2E       		.uleb128 0x2e
 3669 0149 01       		.byte	0x1
 3670 014a 3F       		.uleb128 0x3f
 3671 014b 19       		.uleb128 0x19
 3672 014c 03       		.uleb128 0x3
 3673 014d 0E       		.uleb128 0xe
 3674 014e 3A       		.uleb128 0x3a
 3675 014f 0B       		.uleb128 0xb
 3676 0150 3B       		.uleb128 0x3b
 3677 0151 05       		.uleb128 0x5
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 130


 3678 0152 27       		.uleb128 0x27
 3679 0153 19       		.uleb128 0x19
 3680 0154 11       		.uleb128 0x11
 3681 0155 01       		.uleb128 0x1
 3682 0156 12       		.uleb128 0x12
 3683 0157 06       		.uleb128 0x6
 3684 0158 40       		.uleb128 0x40
 3685 0159 18       		.uleb128 0x18
 3686 015a 9642     		.uleb128 0x2116
 3687 015c 19       		.uleb128 0x19
 3688 015d 01       		.uleb128 0x1
 3689 015e 13       		.uleb128 0x13
 3690 015f 00       		.byte	0
 3691 0160 00       		.byte	0
 3692 0161 17       		.uleb128 0x17
 3693 0162 2E       		.uleb128 0x2e
 3694 0163 01       		.byte	0x1
 3695 0164 03       		.uleb128 0x3
 3696 0165 0E       		.uleb128 0xe
 3697 0166 3A       		.uleb128 0x3a
 3698 0167 0B       		.uleb128 0xb
 3699 0168 3B       		.uleb128 0x3b
 3700 0169 05       		.uleb128 0x5
 3701 016a 27       		.uleb128 0x27
 3702 016b 19       		.uleb128 0x19
 3703 016c 11       		.uleb128 0x11
 3704 016d 01       		.uleb128 0x1
 3705 016e 12       		.uleb128 0x12
 3706 016f 06       		.uleb128 0x6
 3707 0170 40       		.uleb128 0x40
 3708 0171 18       		.uleb128 0x18
 3709 0172 9642     		.uleb128 0x2116
 3710 0174 19       		.uleb128 0x19
 3711 0175 01       		.uleb128 0x1
 3712 0176 13       		.uleb128 0x13
 3713 0177 00       		.byte	0
 3714 0178 00       		.byte	0
 3715 0179 18       		.uleb128 0x18
 3716 017a 34       		.uleb128 0x34
 3717 017b 00       		.byte	0
 3718 017c 03       		.uleb128 0x3
 3719 017d 08       		.uleb128 0x8
 3720 017e 3A       		.uleb128 0x3a
 3721 017f 0B       		.uleb128 0xb
 3722 0180 3B       		.uleb128 0x3b
 3723 0181 05       		.uleb128 0x5
 3724 0182 49       		.uleb128 0x49
 3725 0183 13       		.uleb128 0x13
 3726 0184 02       		.uleb128 0x2
 3727 0185 17       		.uleb128 0x17
 3728 0186 00       		.byte	0
 3729 0187 00       		.byte	0
 3730 0188 19       		.uleb128 0x19
 3731 0189 01       		.uleb128 0x1
 3732 018a 01       		.byte	0x1
 3733 018b 49       		.uleb128 0x49
 3734 018c 13       		.uleb128 0x13
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 131


 3735 018d 01       		.uleb128 0x1
 3736 018e 13       		.uleb128 0x13
 3737 018f 00       		.byte	0
 3738 0190 00       		.byte	0
 3739 0191 1A       		.uleb128 0x1a
 3740 0192 21       		.uleb128 0x21
 3741 0193 00       		.byte	0
 3742 0194 49       		.uleb128 0x49
 3743 0195 13       		.uleb128 0x13
 3744 0196 2F       		.uleb128 0x2f
 3745 0197 0B       		.uleb128 0xb
 3746 0198 00       		.byte	0
 3747 0199 00       		.byte	0
 3748 019a 1B       		.uleb128 0x1b
 3749 019b 34       		.uleb128 0x34
 3750 019c 00       		.byte	0
 3751 019d 03       		.uleb128 0x3
 3752 019e 0E       		.uleb128 0xe
 3753 019f 3A       		.uleb128 0x3a
 3754 01a0 0B       		.uleb128 0xb
 3755 01a1 3B       		.uleb128 0x3b
 3756 01a2 0B       		.uleb128 0xb
 3757 01a3 49       		.uleb128 0x49
 3758 01a4 13       		.uleb128 0x13
 3759 01a5 02       		.uleb128 0x2
 3760 01a6 18       		.uleb128 0x18
 3761 01a7 00       		.byte	0
 3762 01a8 00       		.byte	0
 3763 01a9 1C       		.uleb128 0x1c
 3764 01aa 34       		.uleb128 0x34
 3765 01ab 00       		.byte	0
 3766 01ac 03       		.uleb128 0x3
 3767 01ad 0E       		.uleb128 0xe
 3768 01ae 3A       		.uleb128 0x3a
 3769 01af 0B       		.uleb128 0xb
 3770 01b0 3B       		.uleb128 0x3b
 3771 01b1 0B       		.uleb128 0xb
 3772 01b2 49       		.uleb128 0x49
 3773 01b3 13       		.uleb128 0x13
 3774 01b4 3F       		.uleb128 0x3f
 3775 01b5 19       		.uleb128 0x19
 3776 01b6 02       		.uleb128 0x2
 3777 01b7 18       		.uleb128 0x18
 3778 01b8 00       		.byte	0
 3779 01b9 00       		.byte	0
 3780 01ba 1D       		.uleb128 0x1d
 3781 01bb 26       		.uleb128 0x26
 3782 01bc 00       		.byte	0
 3783 01bd 49       		.uleb128 0x49
 3784 01be 13       		.uleb128 0x13
 3785 01bf 00       		.byte	0
 3786 01c0 00       		.byte	0
 3787 01c1 1E       		.uleb128 0x1e
 3788 01c2 2E       		.uleb128 0x2e
 3789 01c3 00       		.byte	0
 3790 01c4 3F       		.uleb128 0x3f
 3791 01c5 19       		.uleb128 0x19
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 132


 3792 01c6 3C       		.uleb128 0x3c
 3793 01c7 19       		.uleb128 0x19
 3794 01c8 6E       		.uleb128 0x6e
 3795 01c9 0E       		.uleb128 0xe
 3796 01ca 03       		.uleb128 0x3
 3797 01cb 0E       		.uleb128 0xe
 3798 01cc 3A       		.uleb128 0x3a
 3799 01cd 0B       		.uleb128 0xb
 3800 01ce 3B       		.uleb128 0x3b
 3801 01cf 0B       		.uleb128 0xb
 3802 01d0 00       		.byte	0
 3803 01d1 00       		.byte	0
 3804 01d2 00       		.byte	0
 3805              		.section	.debug_loc,"",%progbits
 3806              	.Ldebug_loc0:
 3807              	.LLST0:
 3808 0000 00000000 		.4byte	.LVL0
 3809 0004 07000000 		.4byte	.LVL1-1
 3810 0008 0100     		.2byte	0x1
 3811 000a 50       		.byte	0x50
 3812 000b 07000000 		.4byte	.LVL1-1
 3813 000f 12000000 		.4byte	.LVL3
 3814 0013 0100     		.2byte	0x1
 3815 0015 54       		.byte	0x54
 3816 0016 12000000 		.4byte	.LVL3
 3817 001a 20000000 		.4byte	.LFE2
 3818 001e 0400     		.2byte	0x4
 3819 0020 F3       		.byte	0xf3
 3820 0021 01       		.uleb128 0x1
 3821 0022 50       		.byte	0x50
 3822 0023 9F       		.byte	0x9f
 3823 0024 00000000 		.4byte	0
 3824 0028 00000000 		.4byte	0
 3825              	.LLST1:
 3826 002c 08000000 		.4byte	.LVL1
 3827 0030 19000000 		.4byte	.LVL5-1
 3828 0034 0100     		.2byte	0x1
 3829 0036 50       		.byte	0x50
 3830 0037 00000000 		.4byte	0
 3831 003b 00000000 		.4byte	0
 3832              	.LLST2:
 3833 003f 10000000 		.4byte	.LVL2
 3834 0043 14000000 		.4byte	.LVL4
 3835 0047 0100     		.2byte	0x1
 3836 0049 53       		.byte	0x53
 3837 004a 14000000 		.4byte	.LVL4
 3838 004e 1A000000 		.4byte	.LVL6
 3839 0052 0100     		.2byte	0x1
 3840 0054 54       		.byte	0x54
 3841 0055 00000000 		.4byte	0
 3842 0059 00000000 		.4byte	0
 3843              	.LLST3:
 3844 005d 06000000 		.4byte	.LVL8
 3845 0061 11000000 		.4byte	.LVL10-1
 3846 0065 0100     		.2byte	0x1
 3847 0067 50       		.byte	0x50
 3848 0068 00000000 		.4byte	0
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 133


 3849 006c 00000000 		.4byte	0
 3850              	.LLST4:
 3851 0070 0E000000 		.4byte	.LVL9
 3852 0074 14000000 		.4byte	.LVL11
 3853 0078 0100     		.2byte	0x1
 3854 007a 54       		.byte	0x54
 3855 007b 14000000 		.4byte	.LVL11
 3856 007f 1C000000 		.4byte	.LFE4
 3857 0083 0100     		.2byte	0x1
 3858 0085 50       		.byte	0x50
 3859 0086 00000000 		.4byte	0
 3860 008a 00000000 		.4byte	0
 3861              	.LLST5:
 3862 008e 00000000 		.4byte	.LVL12
 3863 0092 07000000 		.4byte	.LVL13-1
 3864 0096 0100     		.2byte	0x1
 3865 0098 50       		.byte	0x50
 3866 0099 07000000 		.4byte	.LVL13-1
 3867 009d 14000000 		.4byte	.LVL14
 3868 00a1 0100     		.2byte	0x1
 3869 00a3 54       		.byte	0x54
 3870 00a4 14000000 		.4byte	.LVL14
 3871 00a8 30000000 		.4byte	.LFE5
 3872 00ac 0400     		.2byte	0x4
 3873 00ae F3       		.byte	0xf3
 3874 00af 01       		.uleb128 0x1
 3875 00b0 50       		.byte	0x50
 3876 00b1 9F       		.byte	0x9f
 3877 00b2 00000000 		.4byte	0
 3878 00b6 00000000 		.4byte	0
 3879              	.LLST6:
 3880 00ba 08000000 		.4byte	.LVL13
 3881 00be 23000000 		.4byte	.LVL15-1
 3882 00c2 0100     		.2byte	0x1
 3883 00c4 50       		.byte	0x50
 3884 00c5 00000000 		.4byte	0
 3885 00c9 00000000 		.4byte	0
 3886              	.LLST7:
 3887 00cd 00000000 		.4byte	.LVL16
 3888 00d1 04000000 		.4byte	.LVL17
 3889 00d5 0100     		.2byte	0x1
 3890 00d7 50       		.byte	0x50
 3891 00d8 04000000 		.4byte	.LVL17
 3892 00dc 14000000 		.4byte	.LFE11
 3893 00e0 0100     		.2byte	0x1
 3894 00e2 52       		.byte	0x52
 3895 00e3 00000000 		.4byte	0
 3896 00e7 00000000 		.4byte	0
 3897              	.LLST8:
 3898 00eb 00000000 		.4byte	.LVL22
 3899 00ef 04000000 		.4byte	.LVL23
 3900 00f3 0100     		.2byte	0x1
 3901 00f5 50       		.byte	0x50
 3902 00f6 04000000 		.4byte	.LVL23
 3903 00fa 14000000 		.4byte	.LFE20
 3904 00fe 0400     		.2byte	0x4
 3905 0100 F3       		.byte	0xf3
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 134


 3906 0101 01       		.uleb128 0x1
 3907 0102 50       		.byte	0x50
 3908 0103 9F       		.byte	0x9f
 3909 0104 00000000 		.4byte	0
 3910 0108 00000000 		.4byte	0
 3911              	.LLST9:
 3912 010c 00000000 		.4byte	.LVL24
 3913 0110 08000000 		.4byte	.LVL25
 3914 0114 0100     		.2byte	0x1
 3915 0116 50       		.byte	0x50
 3916 0117 08000000 		.4byte	.LVL25
 3917 011b 18000000 		.4byte	.LFE21
 3918 011f 0400     		.2byte	0x4
 3919 0121 F3       		.byte	0xf3
 3920 0122 01       		.uleb128 0x1
 3921 0123 50       		.byte	0x50
 3922 0124 9F       		.byte	0x9f
 3923 0125 00000000 		.4byte	0
 3924 0129 00000000 		.4byte	0
 3925              	.LLST10:
 3926 012d 00000000 		.4byte	.LVL26
 3927 0131 04000000 		.4byte	.LVL27
 3928 0135 0100     		.2byte	0x1
 3929 0137 50       		.byte	0x50
 3930 0138 04000000 		.4byte	.LVL27
 3931 013c 14000000 		.4byte	.LFE22
 3932 0140 0400     		.2byte	0x4
 3933 0142 F3       		.byte	0xf3
 3934 0143 01       		.uleb128 0x1
 3935 0144 50       		.byte	0x50
 3936 0145 9F       		.byte	0x9f
 3937 0146 00000000 		.4byte	0
 3938 014a 00000000 		.4byte	0
 3939              	.LLST11:
 3940 014e 00000000 		.4byte	.LVL28
 3941 0152 04000000 		.4byte	.LVL29
 3942 0156 0100     		.2byte	0x1
 3943 0158 50       		.byte	0x50
 3944 0159 04000000 		.4byte	.LVL29
 3945 015d 14000000 		.4byte	.LFE23
 3946 0161 0400     		.2byte	0x4
 3947 0163 F3       		.byte	0xf3
 3948 0164 01       		.uleb128 0x1
 3949 0165 50       		.byte	0x50
 3950 0166 9F       		.byte	0x9f
 3951 0167 00000000 		.4byte	0
 3952 016b 00000000 		.4byte	0
 3953              	.LLST12:
 3954 016f 00000000 		.4byte	.LVL30
 3955 0173 04000000 		.4byte	.LVL31
 3956 0177 0100     		.2byte	0x1
 3957 0179 50       		.byte	0x50
 3958 017a 04000000 		.4byte	.LVL31
 3959 017e 14000000 		.4byte	.LFE24
 3960 0182 0400     		.2byte	0x4
 3961 0184 F3       		.byte	0xf3
 3962 0185 01       		.uleb128 0x1
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 135


 3963 0186 50       		.byte	0x50
 3964 0187 9F       		.byte	0x9f
 3965 0188 00000000 		.4byte	0
 3966 018c 00000000 		.4byte	0
 3967              	.LLST13:
 3968 0190 00000000 		.4byte	.LVL33
 3969 0194 0C000000 		.4byte	.LVL35
 3970 0198 0100     		.2byte	0x1
 3971 019a 50       		.byte	0x50
 3972 019b 0C000000 		.4byte	.LVL35
 3973 019f 20000000 		.4byte	.LFE14
 3974 01a3 0400     		.2byte	0x4
 3975 01a5 F3       		.byte	0xf3
 3976 01a6 01       		.uleb128 0x1
 3977 01a7 50       		.byte	0x50
 3978 01a8 9F       		.byte	0x9f
 3979 01a9 00000000 		.4byte	0
 3980 01ad 00000000 		.4byte	0
 3981              	.LLST14:
 3982 01b1 00000000 		.4byte	.LVL33
 3983 01b5 0F000000 		.4byte	.LVL36-1
 3984 01b9 0100     		.2byte	0x1
 3985 01bb 51       		.byte	0x51
 3986 01bc 0F000000 		.4byte	.LVL36-1
 3987 01c0 1E000000 		.4byte	.LVL38
 3988 01c4 0100     		.2byte	0x1
 3989 01c6 55       		.byte	0x55
 3990 01c7 1E000000 		.4byte	.LVL38
 3991 01cb 20000000 		.4byte	.LFE14
 3992 01cf 0400     		.2byte	0x4
 3993 01d1 F3       		.byte	0xf3
 3994 01d2 01       		.uleb128 0x1
 3995 01d3 51       		.byte	0x51
 3996 01d4 9F       		.byte	0x9f
 3997 01d5 00000000 		.4byte	0
 3998 01d9 00000000 		.4byte	0
 3999              	.LLST15:
 4000 01dd 00000000 		.4byte	.LVL39
 4001 01e1 0A000000 		.4byte	.LVL41
 4002 01e5 0100     		.2byte	0x1
 4003 01e7 50       		.byte	0x50
 4004 01e8 0A000000 		.4byte	.LVL41
 4005 01ec 1C000000 		.4byte	.LFE15
 4006 01f0 0400     		.2byte	0x4
 4007 01f2 F3       		.byte	0xf3
 4008 01f3 01       		.uleb128 0x1
 4009 01f4 50       		.byte	0x50
 4010 01f5 9F       		.byte	0x9f
 4011 01f6 00000000 		.4byte	0
 4012 01fa 00000000 		.4byte	0
 4013              	.LLST16:
 4014 01fe 00000000 		.4byte	.LVL43
 4015 0202 0C000000 		.4byte	.LVL45
 4016 0206 0100     		.2byte	0x1
 4017 0208 50       		.byte	0x50
 4018 0209 0C000000 		.4byte	.LVL45
 4019 020d 22000000 		.4byte	.LFE16
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 136


 4020 0211 0400     		.2byte	0x4
 4021 0213 F3       		.byte	0xf3
 4022 0214 01       		.uleb128 0x1
 4023 0215 50       		.byte	0x50
 4024 0216 9F       		.byte	0x9f
 4025 0217 00000000 		.4byte	0
 4026 021b 00000000 		.4byte	0
 4027              	.LLST17:
 4028 021f 00000000 		.4byte	.LVL43
 4029 0223 0F000000 		.4byte	.LVL46-1
 4030 0227 0100     		.2byte	0x1
 4031 0229 51       		.byte	0x51
 4032 022a 0F000000 		.4byte	.LVL46-1
 4033 022e 20000000 		.4byte	.LVL48
 4034 0232 0100     		.2byte	0x1
 4035 0234 55       		.byte	0x55
 4036 0235 20000000 		.4byte	.LVL48
 4037 0239 22000000 		.4byte	.LFE16
 4038 023d 0400     		.2byte	0x4
 4039 023f F3       		.byte	0xf3
 4040 0240 01       		.uleb128 0x1
 4041 0241 51       		.byte	0x51
 4042 0242 9F       		.byte	0x9f
 4043 0243 00000000 		.4byte	0
 4044 0247 00000000 		.4byte	0
 4045              	.LLST18:
 4046 024b 00000000 		.4byte	.LVL49
 4047 024f 0A000000 		.4byte	.LVL51
 4048 0253 0100     		.2byte	0x1
 4049 0255 50       		.byte	0x50
 4050 0256 0A000000 		.4byte	.LVL51
 4051 025a 1E000000 		.4byte	.LFE17
 4052 025e 0400     		.2byte	0x4
 4053 0260 F3       		.byte	0xf3
 4054 0261 01       		.uleb128 0x1
 4055 0262 50       		.byte	0x50
 4056 0263 9F       		.byte	0x9f
 4057 0264 00000000 		.4byte	0
 4058 0268 00000000 		.4byte	0
 4059              	.LLST19:
 4060 026c 00000000 		.4byte	.LVL53
 4061 0270 0C000000 		.4byte	.LVL54
 4062 0274 0100     		.2byte	0x1
 4063 0276 50       		.byte	0x50
 4064 0277 0C000000 		.4byte	.LVL54
 4065 027b 4C000000 		.4byte	.LFE18
 4066 027f 0400     		.2byte	0x4
 4067 0281 F3       		.byte	0xf3
 4068 0282 01       		.uleb128 0x1
 4069 0283 50       		.byte	0x50
 4070 0284 9F       		.byte	0x9f
 4071 0285 00000000 		.4byte	0
 4072 0289 00000000 		.4byte	0
 4073              	.LLST20:
 4074 028d 00000000 		.4byte	.LVL53
 4075 0291 0F000000 		.4byte	.LVL55-1
 4076 0295 0100     		.2byte	0x1
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 137


 4077 0297 51       		.byte	0x51
 4078 0298 0F000000 		.4byte	.LVL55-1
 4079 029c 4C000000 		.4byte	.LFE18
 4080 02a0 0400     		.2byte	0x4
 4081 02a2 F3       		.byte	0xf3
 4082 02a3 01       		.uleb128 0x1
 4083 02a4 51       		.byte	0x51
 4084 02a5 9F       		.byte	0x9f
 4085 02a6 00000000 		.4byte	0
 4086 02aa 00000000 		.4byte	0
 4087              	.LLST21:
 4088 02ae 26000000 		.4byte	.LVL58
 4089 02b2 45000000 		.4byte	.LVL64-1
 4090 02b6 0100     		.2byte	0x1
 4091 02b8 50       		.byte	0x50
 4092 02b9 00000000 		.4byte	0
 4093 02bd 00000000 		.4byte	0
 4094              	.LLST22:
 4095 02c1 22000000 		.4byte	.LVL57
 4096 02c5 46000000 		.4byte	.LVL65
 4097 02c9 0100     		.2byte	0x1
 4098 02cb 55       		.byte	0x55
 4099 02cc 00000000 		.4byte	0
 4100 02d0 00000000 		.4byte	0
 4101              	.LLST23:
 4102 02d4 32000000 		.4byte	.LVL59
 4103 02d8 38000000 		.4byte	.LVL60
 4104 02dc 0100     		.2byte	0x1
 4105 02de 51       		.byte	0x51
 4106 02df 3A000000 		.4byte	.LVL61
 4107 02e3 3C000000 		.4byte	.LVL62
 4108 02e7 0100     		.2byte	0x1
 4109 02e9 51       		.byte	0x51
 4110 02ea 3C000000 		.4byte	.LVL62
 4111 02ee 40000000 		.4byte	.LVL63
 4112 02f2 0100     		.2byte	0x1
 4113 02f4 53       		.byte	0x53
 4114 02f5 40000000 		.4byte	.LVL63
 4115 02f9 45000000 		.4byte	.LVL64-1
 4116 02fd 0100     		.2byte	0x1
 4117 02ff 51       		.byte	0x51
 4118 0300 00000000 		.4byte	0
 4119 0304 00000000 		.4byte	0
 4120              	.LLST24:
 4121 0308 00000000 		.4byte	.LVL66
 4122 030c 0A000000 		.4byte	.LVL67
 4123 0310 0100     		.2byte	0x1
 4124 0312 50       		.byte	0x50
 4125 0313 0A000000 		.4byte	.LVL67
 4126 0317 2C000000 		.4byte	.LFE19
 4127 031b 0400     		.2byte	0x4
 4128 031d F3       		.byte	0xf3
 4129 031e 01       		.uleb128 0x1
 4130 031f 50       		.byte	0x50
 4131 0320 9F       		.byte	0x9f
 4132 0321 00000000 		.4byte	0
 4133 0325 00000000 		.4byte	0
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 138


 4134              	.LLST25:
 4135 0329 24000000 		.4byte	.LVL69
 4136 032d 26000000 		.4byte	.LVL70
 4137 0331 0100     		.2byte	0x1
 4138 0333 50       		.byte	0x50
 4139 0334 00000000 		.4byte	0
 4140 0338 00000000 		.4byte	0
 4141              	.LLST26:
 4142 033c 00000000 		.4byte	.LVL71
 4143 0340 06000000 		.4byte	.LVL72
 4144 0344 0100     		.2byte	0x1
 4145 0346 50       		.byte	0x50
 4146 0347 06000000 		.4byte	.LVL72
 4147 034b 26000000 		.4byte	.LVL76
 4148 034f 0100     		.2byte	0x1
 4149 0351 54       		.byte	0x54
 4150 0352 00000000 		.4byte	0
 4151 0356 00000000 		.4byte	0
 4152              	.LLST27:
 4153 035a 00000000 		.4byte	.LVL77
 4154 035e 08000000 		.4byte	.LVL78
 4155 0362 0100     		.2byte	0x1
 4156 0364 50       		.byte	0x50
 4157 0365 08000000 		.4byte	.LVL78
 4158 0369 14000000 		.4byte	.LFE28
 4159 036d 0400     		.2byte	0x4
 4160 036f F3       		.byte	0xf3
 4161 0370 01       		.uleb128 0x1
 4162 0371 50       		.byte	0x50
 4163 0372 9F       		.byte	0x9f
 4164 0373 00000000 		.4byte	0
 4165 0377 00000000 		.4byte	0
 4166              	.LLST28:
 4167 037b 00000000 		.4byte	.LVL80
 4168 037f 0F000000 		.4byte	.LVL81-1
 4169 0383 0100     		.2byte	0x1
 4170 0385 50       		.byte	0x50
 4171 0386 0F000000 		.4byte	.LVL81-1
 4172 038a D4000000 		.4byte	.LVL103
 4173 038e 0100     		.2byte	0x1
 4174 0390 54       		.byte	0x54
 4175 0391 D4000000 		.4byte	.LVL103
 4176 0395 02010000 		.4byte	.LVL106
 4177 0399 0700     		.2byte	0x7
 4178 039b 74       		.byte	0x74
 4179 039c B39C8080 		.sleb128 -268431821
 4179      7F
 4180 03a1 9F       		.byte	0x9f
 4181 03a2 02010000 		.4byte	.LVL106
 4182 03a6 08010000 		.4byte	.LVL107
 4183 03aa 0100     		.2byte	0x1
 4184 03ac 54       		.byte	0x54
 4185 03ad 08010000 		.4byte	.LVL107
 4186 03b1 10010000 		.4byte	.LVL109
 4187 03b5 0300     		.2byte	0x3
 4188 03b7 77       		.byte	0x77
 4189 03b8 03       		.sleb128 3
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 139


 4190 03b9 9F       		.byte	0x9f
 4191 03ba 10010000 		.4byte	.LVL109
 4192 03be 64010000 		.4byte	.LFE6
 4193 03c2 0400     		.2byte	0x4
 4194 03c4 F3       		.byte	0xf3
 4195 03c5 01       		.uleb128 0x1
 4196 03c6 50       		.byte	0x50
 4197 03c7 9F       		.byte	0x9f
 4198 03c8 00000000 		.4byte	0
 4199 03cc 00000000 		.4byte	0
 4200              	.LLST29:
 4201 03d0 2A000000 		.4byte	.LVL83
 4202 03d4 34000000 		.4byte	.LVL85
 4203 03d8 0100     		.2byte	0x1
 4204 03da 5A       		.byte	0x5a
 4205 03db 46000000 		.4byte	.LVL86
 4206 03df 50000000 		.4byte	.LVL88
 4207 03e3 0100     		.2byte	0x1
 4208 03e5 5A       		.byte	0x5a
 4209 03e6 62000000 		.4byte	.LVL89
 4210 03ea 6C000000 		.4byte	.LVL91
 4211 03ee 0100     		.2byte	0x1
 4212 03f0 5A       		.byte	0x5a
 4213 03f1 7E000000 		.4byte	.LVL92
 4214 03f5 88000000 		.4byte	.LVL94
 4215 03f9 0100     		.2byte	0x1
 4216 03fb 5A       		.byte	0x5a
 4217 03fc 90000000 		.4byte	.LVL95
 4218 0400 02010000 		.4byte	.LVL106
 4219 0404 0100     		.2byte	0x1
 4220 0406 5A       		.byte	0x5a
 4221 0407 00000000 		.4byte	0
 4222 040b 00000000 		.4byte	0
 4223              	.LLST30:
 4224 040f 32000000 		.4byte	.LVL84
 4225 0413 34000000 		.4byte	.LVL85
 4226 0417 0100     		.2byte	0x1
 4227 0419 59       		.byte	0x59
 4228 041a 4E000000 		.4byte	.LVL87
 4229 041e 50000000 		.4byte	.LVL88
 4230 0422 0100     		.2byte	0x1
 4231 0424 59       		.byte	0x59
 4232 0425 6A000000 		.4byte	.LVL90
 4233 0429 6C000000 		.4byte	.LVL91
 4234 042d 0100     		.2byte	0x1
 4235 042f 59       		.byte	0x59
 4236 0430 86000000 		.4byte	.LVL93
 4237 0434 88000000 		.4byte	.LVL94
 4238 0438 0100     		.2byte	0x1
 4239 043a 59       		.byte	0x59
 4240 043b 98000000 		.4byte	.LVL96
 4241 043f 02010000 		.4byte	.LVL106
 4242 0443 0100     		.2byte	0x1
 4243 0445 59       		.byte	0x59
 4244 0446 00000000 		.4byte	0
 4245 044a 00000000 		.4byte	0
 4246              	.LLST31:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 140


 4247 044e 9C000000 		.4byte	.LVL97
 4248 0452 02010000 		.4byte	.LVL106
 4249 0456 0100     		.2byte	0x1
 4250 0458 56       		.byte	0x56
 4251 0459 00000000 		.4byte	0
 4252 045d 00000000 		.4byte	0
 4253              	.LLST32:
 4254 0461 B0000000 		.4byte	.LVL99
 4255 0465 B4000000 		.4byte	.LVL100
 4256 0469 0200     		.2byte	0x2
 4257 046b 49       		.byte	0x49
 4258 046c 9F       		.byte	0x9f
 4259 046d BC000000 		.4byte	.LVL101
 4260 0471 02010000 		.4byte	.LVL106
 4261 0475 0100     		.2byte	0x1
 4262 0477 55       		.byte	0x55
 4263 0478 00000000 		.4byte	0
 4264 047c 00000000 		.4byte	0
 4265              	.LLST33:
 4266 0480 12000000 		.4byte	.LVL82
 4267 0484 AA000000 		.4byte	.LVL98
 4268 0488 0200     		.2byte	0x2
 4269 048a 91       		.byte	0x91
 4270 048b 5C       		.sleb128 -36
 4271 048c B4000000 		.4byte	.LVL100
 4272 0490 BC000000 		.4byte	.LVL101
 4273 0494 0200     		.2byte	0x2
 4274 0496 91       		.byte	0x91
 4275 0497 5C       		.sleb128 -36
 4276 0498 02010000 		.4byte	.LVL106
 4277 049c 08010000 		.4byte	.LVL107
 4278 04a0 0200     		.2byte	0x2
 4279 04a2 91       		.byte	0x91
 4280 04a3 5C       		.sleb128 -36
 4281 04a4 00000000 		.4byte	0
 4282 04a8 00000000 		.4byte	0
 4283              	.LLST34:
 4284 04ac 00000000 		.4byte	.LVL110
 4285 04b0 14000000 		.4byte	.LVL111
 4286 04b4 0100     		.2byte	0x1
 4287 04b6 50       		.byte	0x50
 4288 04b7 14000000 		.4byte	.LVL111
 4289 04bb 18000000 		.4byte	.LVL112
 4290 04bf 0100     		.2byte	0x1
 4291 04c1 53       		.byte	0x53
 4292 04c2 18000000 		.4byte	.LVL112
 4293 04c6 44000000 		.4byte	.LFE7
 4294 04ca 0400     		.2byte	0x4
 4295 04cc F3       		.byte	0xf3
 4296 04cd 01       		.uleb128 0x1
 4297 04ce 50       		.byte	0x50
 4298 04cf 9F       		.byte	0x9f
 4299 04d0 00000000 		.4byte	0
 4300 04d4 00000000 		.4byte	0
 4301              	.LLST35:
 4302 04d8 00000000 		.4byte	.LVL115
 4303 04dc 1A000000 		.4byte	.LVL116
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 141


 4304 04e0 0100     		.2byte	0x1
 4305 04e2 50       		.byte	0x50
 4306 04e3 1A000000 		.4byte	.LVL116
 4307 04e7 4C000000 		.4byte	.LFE29
 4308 04eb 0400     		.2byte	0x4
 4309 04ed F3       		.byte	0xf3
 4310 04ee 01       		.uleb128 0x1
 4311 04ef 50       		.byte	0x50
 4312 04f0 9F       		.byte	0x9f
 4313 04f1 00000000 		.4byte	0
 4314 04f5 00000000 		.4byte	0
 4315              	.LLST36:
 4316 04f9 00000000 		.4byte	.LVL120
 4317 04fd 02000000 		.4byte	.LVL121
 4318 0501 0100     		.2byte	0x1
 4319 0503 50       		.byte	0x50
 4320 0504 02000000 		.4byte	.LVL121
 4321 0508 10000000 		.4byte	.LFE36
 4322 050c 0400     		.2byte	0x4
 4323 050e F3       		.byte	0xf3
 4324 050f 01       		.uleb128 0x1
 4325 0510 50       		.byte	0x50
 4326 0511 9F       		.byte	0x9f
 4327 0512 00000000 		.4byte	0
 4328 0516 00000000 		.4byte	0
 4329              	.LLST37:
 4330 051a 0C000000 		.4byte	.LVL123
 4331 051e 1C000000 		.4byte	.LVL126
 4332 0522 0100     		.2byte	0x1
 4333 0524 54       		.byte	0x54
 4334 0525 1E000000 		.4byte	.LVL127
 4335 0529 22000000 		.4byte	.LVL128
 4336 052d 0100     		.2byte	0x1
 4337 052f 54       		.byte	0x54
 4338 0530 00000000 		.4byte	0
 4339 0534 00000000 		.4byte	0
 4340              	.LLST38:
 4341 0538 02000000 		.4byte	.LVL129
 4342 053c 06000000 		.4byte	.LVL130
 4343 0540 0200     		.2byte	0x2
 4344 0542 30       		.byte	0x30
 4345 0543 9F       		.byte	0x9f
 4346 0544 06000000 		.4byte	.LVL130
 4347 0548 1B000000 		.4byte	.LVL132-1
 4348 054c 0100     		.2byte	0x1
 4349 054e 53       		.byte	0x53
 4350 054f 00000000 		.4byte	0
 4351 0553 00000000 		.4byte	0
 4352              	.LLST39:
 4353 0557 00000000 		.4byte	.LVL138
 4354 055b 06000000 		.4byte	.LVL139
 4355 055f 0100     		.2byte	0x1
 4356 0561 50       		.byte	0x50
 4357 0562 06000000 		.4byte	.LVL139
 4358 0566 10000000 		.4byte	.LFE41
 4359 056a 0400     		.2byte	0x4
 4360 056c F3       		.byte	0xf3
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 142


 4361 056d 01       		.uleb128 0x1
 4362 056e 50       		.byte	0x50
 4363 056f 9F       		.byte	0x9f
 4364 0570 00000000 		.4byte	0
 4365 0574 00000000 		.4byte	0
 4366              	.LLST40:
 4367 0578 00000000 		.4byte	.LVL140
 4368 057c 02000000 		.4byte	.LVL141
 4369 0580 0100     		.2byte	0x1
 4370 0582 50       		.byte	0x50
 4371 0583 02000000 		.4byte	.LVL141
 4372 0587 0C000000 		.4byte	.LFE42
 4373 058b 0400     		.2byte	0x4
 4374 058d F3       		.byte	0xf3
 4375 058e 01       		.uleb128 0x1
 4376 058f 50       		.byte	0x50
 4377 0590 9F       		.byte	0x9f
 4378 0591 00000000 		.4byte	0
 4379 0595 00000000 		.4byte	0
 4380              		.section	.debug_aranges,"",%progbits
 4381 0000 7C010000 		.4byte	0x17c
 4382 0004 0200     		.2byte	0x2
 4383 0006 00000000 		.4byte	.Ldebug_info0
 4384 000a 04       		.byte	0x4
 4385 000b 00       		.byte	0
 4386 000c 0000     		.2byte	0
 4387 000e 0000     		.2byte	0
 4388 0010 00000000 		.4byte	.LFB0
 4389 0014 14000000 		.4byte	.LFE0-.LFB0
 4390 0018 00000000 		.4byte	.LFB1
 4391 001c 10000000 		.4byte	.LFE1-.LFB1
 4392 0020 00000000 		.4byte	.LFB2
 4393 0024 20000000 		.4byte	.LFE2-.LFB2
 4394 0028 00000000 		.4byte	.LFB3
 4395 002c 38000000 		.4byte	.LFE3-.LFB3
 4396 0030 00000000 		.4byte	.LFB4
 4397 0034 1C000000 		.4byte	.LFE4-.LFB4
 4398 0038 00000000 		.4byte	.LFB5
 4399 003c 30000000 		.4byte	.LFE5-.LFB5
 4400 0040 00000000 		.4byte	.LFB8
 4401 0044 20000000 		.4byte	.LFE8-.LFB8
 4402 0048 00000000 		.4byte	.LFB9
 4403 004c 10000000 		.4byte	.LFE9-.LFB9
 4404 0050 00000000 		.4byte	.LFB10
 4405 0054 0C000000 		.4byte	.LFE10-.LFB10
 4406 0058 00000000 		.4byte	.LFB11
 4407 005c 14000000 		.4byte	.LFE11-.LFB11
 4408 0060 00000000 		.4byte	.LFB12
 4409 0064 10000000 		.4byte	.LFE12-.LFB12
 4410 0068 00000000 		.4byte	.LFB13
 4411 006c 0C000000 		.4byte	.LFE13-.LFB13
 4412 0070 00000000 		.4byte	.LFB20
 4413 0074 14000000 		.4byte	.LFE20-.LFB20
 4414 0078 00000000 		.4byte	.LFB21
 4415 007c 18000000 		.4byte	.LFE21-.LFB21
 4416 0080 00000000 		.4byte	.LFB22
 4417 0084 14000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 143


 4418 0088 00000000 		.4byte	.LFB23
 4419 008c 14000000 		.4byte	.LFE23-.LFB23
 4420 0090 00000000 		.4byte	.LFB24
 4421 0094 14000000 		.4byte	.LFE24-.LFB24
 4422 0098 00000000 		.4byte	.LFB25
 4423 009c 04000000 		.4byte	.LFE25-.LFB25
 4424 00a0 00000000 		.4byte	.LFB14
 4425 00a4 20000000 		.4byte	.LFE14-.LFB14
 4426 00a8 00000000 		.4byte	.LFB15
 4427 00ac 1C000000 		.4byte	.LFE15-.LFB15
 4428 00b0 00000000 		.4byte	.LFB16
 4429 00b4 22000000 		.4byte	.LFE16-.LFB16
 4430 00b8 00000000 		.4byte	.LFB17
 4431 00bc 1E000000 		.4byte	.LFE17-.LFB17
 4432 00c0 00000000 		.4byte	.LFB18
 4433 00c4 4C000000 		.4byte	.LFE18-.LFB18
 4434 00c8 00000000 		.4byte	.LFB19
 4435 00cc 2C000000 		.4byte	.LFE19-.LFB19
 4436 00d0 00000000 		.4byte	.LFB26
 4437 00d4 18000000 		.4byte	.LFE26-.LFB26
 4438 00d8 00000000 		.4byte	.LFB27
 4439 00dc 30000000 		.4byte	.LFE27-.LFB27
 4440 00e0 00000000 		.4byte	.LFB28
 4441 00e4 14000000 		.4byte	.LFE28-.LFB28
 4442 00e8 00000000 		.4byte	.LFB6
 4443 00ec 64010000 		.4byte	.LFE6-.LFB6
 4444 00f0 00000000 		.4byte	.LFB7
 4445 00f4 44000000 		.4byte	.LFE7-.LFB7
 4446 00f8 00000000 		.4byte	.LFB29
 4447 00fc 4C000000 		.4byte	.LFE29-.LFB29
 4448 0100 00000000 		.4byte	.LFB33
 4449 0104 10000000 		.4byte	.LFE33-.LFB33
 4450 0108 00000000 		.4byte	.LFB34
 4451 010c 10000000 		.4byte	.LFE34-.LFB34
 4452 0110 00000000 		.4byte	.LFB32
 4453 0114 18000000 		.4byte	.LFE32-.LFB32
 4454 0118 00000000 		.4byte	.LFB35
 4455 011c 10000000 		.4byte	.LFE35-.LFB35
 4456 0120 00000000 		.4byte	.LFB36
 4457 0124 10000000 		.4byte	.LFE36-.LFB36
 4458 0128 00000000 		.4byte	.LFB37
 4459 012c 10000000 		.4byte	.LFE37-.LFB37
 4460 0130 00000000 		.4byte	.LFB38
 4461 0134 10000000 		.4byte	.LFE38-.LFB38
 4462 0138 00000000 		.4byte	.LFB39
 4463 013c 10000000 		.4byte	.LFE39-.LFB39
 4464 0140 00000000 		.4byte	.LFB43
 4465 0144 28000000 		.4byte	.LFE43-.LFB43
 4466 0148 00000000 		.4byte	.LFB40
 4467 014c 0C000000 		.4byte	.LFE40-.LFB40
 4468 0150 00000000 		.4byte	.LFB31
 4469 0154 40000000 		.4byte	.LFE31-.LFB31
 4470 0158 00000000 		.4byte	.LFB30
 4471 015c 20000000 		.4byte	.LFE30-.LFB30
 4472 0160 00000000 		.4byte	.LFB41
 4473 0164 10000000 		.4byte	.LFE41-.LFB41
 4474 0168 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 144


 4475 016c 0C000000 		.4byte	.LFE42-.LFB42
 4476 0170 00000000 		.4byte	.LFB44
 4477 0174 70000000 		.4byte	.LFE44-.LFB44
 4478 0178 00000000 		.4byte	0
 4479 017c 00000000 		.4byte	0
 4480              		.section	.debug_ranges,"",%progbits
 4481              	.Ldebug_ranges0:
 4482 0000 00000000 		.4byte	.LFB0
 4483 0004 14000000 		.4byte	.LFE0
 4484 0008 00000000 		.4byte	.LFB1
 4485 000c 10000000 		.4byte	.LFE1
 4486 0010 00000000 		.4byte	.LFB2
 4487 0014 20000000 		.4byte	.LFE2
 4488 0018 00000000 		.4byte	.LFB3
 4489 001c 38000000 		.4byte	.LFE3
 4490 0020 00000000 		.4byte	.LFB4
 4491 0024 1C000000 		.4byte	.LFE4
 4492 0028 00000000 		.4byte	.LFB5
 4493 002c 30000000 		.4byte	.LFE5
 4494 0030 00000000 		.4byte	.LFB8
 4495 0034 20000000 		.4byte	.LFE8
 4496 0038 00000000 		.4byte	.LFB9
 4497 003c 10000000 		.4byte	.LFE9
 4498 0040 00000000 		.4byte	.LFB10
 4499 0044 0C000000 		.4byte	.LFE10
 4500 0048 00000000 		.4byte	.LFB11
 4501 004c 14000000 		.4byte	.LFE11
 4502 0050 00000000 		.4byte	.LFB12
 4503 0054 10000000 		.4byte	.LFE12
 4504 0058 00000000 		.4byte	.LFB13
 4505 005c 0C000000 		.4byte	.LFE13
 4506 0060 00000000 		.4byte	.LFB20
 4507 0064 14000000 		.4byte	.LFE20
 4508 0068 00000000 		.4byte	.LFB21
 4509 006c 18000000 		.4byte	.LFE21
 4510 0070 00000000 		.4byte	.LFB22
 4511 0074 14000000 		.4byte	.LFE22
 4512 0078 00000000 		.4byte	.LFB23
 4513 007c 14000000 		.4byte	.LFE23
 4514 0080 00000000 		.4byte	.LFB24
 4515 0084 14000000 		.4byte	.LFE24
 4516 0088 00000000 		.4byte	.LFB25
 4517 008c 04000000 		.4byte	.LFE25
 4518 0090 00000000 		.4byte	.LFB14
 4519 0094 20000000 		.4byte	.LFE14
 4520 0098 00000000 		.4byte	.LFB15
 4521 009c 1C000000 		.4byte	.LFE15
 4522 00a0 00000000 		.4byte	.LFB16
 4523 00a4 22000000 		.4byte	.LFE16
 4524 00a8 00000000 		.4byte	.LFB17
 4525 00ac 1E000000 		.4byte	.LFE17
 4526 00b0 00000000 		.4byte	.LFB18
 4527 00b4 4C000000 		.4byte	.LFE18
 4528 00b8 00000000 		.4byte	.LFB19
 4529 00bc 2C000000 		.4byte	.LFE19
 4530 00c0 00000000 		.4byte	.LFB26
 4531 00c4 18000000 		.4byte	.LFE26
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 145


 4532 00c8 00000000 		.4byte	.LFB27
 4533 00cc 30000000 		.4byte	.LFE27
 4534 00d0 00000000 		.4byte	.LFB28
 4535 00d4 14000000 		.4byte	.LFE28
 4536 00d8 00000000 		.4byte	.LFB6
 4537 00dc 64010000 		.4byte	.LFE6
 4538 00e0 00000000 		.4byte	.LFB7
 4539 00e4 44000000 		.4byte	.LFE7
 4540 00e8 00000000 		.4byte	.LFB29
 4541 00ec 4C000000 		.4byte	.LFE29
 4542 00f0 00000000 		.4byte	.LFB33
 4543 00f4 10000000 		.4byte	.LFE33
 4544 00f8 00000000 		.4byte	.LFB34
 4545 00fc 10000000 		.4byte	.LFE34
 4546 0100 00000000 		.4byte	.LFB32
 4547 0104 18000000 		.4byte	.LFE32
 4548 0108 00000000 		.4byte	.LFB35
 4549 010c 10000000 		.4byte	.LFE35
 4550 0110 00000000 		.4byte	.LFB36
 4551 0114 10000000 		.4byte	.LFE36
 4552 0118 00000000 		.4byte	.LFB37
 4553 011c 10000000 		.4byte	.LFE37
 4554 0120 00000000 		.4byte	.LFB38
 4555 0124 10000000 		.4byte	.LFE38
 4556 0128 00000000 		.4byte	.LFB39
 4557 012c 10000000 		.4byte	.LFE39
 4558 0130 00000000 		.4byte	.LFB43
 4559 0134 28000000 		.4byte	.LFE43
 4560 0138 00000000 		.4byte	.LFB40
 4561 013c 0C000000 		.4byte	.LFE40
 4562 0140 00000000 		.4byte	.LFB31
 4563 0144 40000000 		.4byte	.LFE31
 4564 0148 00000000 		.4byte	.LFB30
 4565 014c 20000000 		.4byte	.LFE30
 4566 0150 00000000 		.4byte	.LFB41
 4567 0154 10000000 		.4byte	.LFE41
 4568 0158 00000000 		.4byte	.LFB42
 4569 015c 0C000000 		.4byte	.LFE42
 4570 0160 00000000 		.4byte	.LFB44
 4571 0164 70000000 		.4byte	.LFE44
 4572 0168 00000000 		.4byte	0
 4573 016c 00000000 		.4byte	0
 4574              		.section	.debug_line,"",%progbits
 4575              	.Ldebug_line0:
 4576 0000 5C040000 		.section	.debug_str,"MS",%progbits,1
 4576      02004D00 
 4576      00000201 
 4576      FB0E0D00 
 4576      01010101 
 4577              	.LASF52:
 4578 0000 72616D56 		.ascii	"ramVectorTable\000"
 4578      6563746F 
 4578      72546162 
 4578      6C6500
 4579              	.LASF68:
 4580 000f 62675472 		.ascii	"bgTrim4\000"
 4580      696D3400 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 146


 4581              	.LASF10:
 4582 0017 75696E74 		.ascii	"uint16\000"
 4582      313600
 4583              	.LASF39:
 4584 001e 696E7453 		.ascii	"intState\000"
 4584      74617465 
 4584      00
 4585              	.LASF25:
 4586 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4586      73436C6B 
 4586      57726974 
 4586      65486663 
 4586      6C6B4469 
 4587              	.LASF100:
 4588 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4588      73436C6B 
 4588      50756D70 
 4588      436F6E66 
 4588      696700
 4589              	.LASF51:
 4590 0053 6F6C6449 		.ascii	"oldIsr\000"
 4590      737200
 4591              	.LASF89:
 4592 005a 72657456 		.ascii	"retVal\000"
 4592      616C00
 4593              	.LASF38:
 4594 0061 43794469 		.ascii	"CyDisableInts\000"
 4594      7361626C 
 4594      65496E74 
 4594      7300
 4595              	.LASF71:
 4596 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 4596      656E7449 
 4596      6D6F5472 
 4596      696D3256 
 4596      616C7565 
 4597              	.LASF104:
 4598 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4598      43313120 
 4598      352E342E 
 4598      31203230 
 4598      31363036 
 4599 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4599      20726576 
 4599      6973696F 
 4599      6E203233 
 4599      37373135 
 4600 00ea 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4600      66756E63 
 4600      74696F6E 
 4600      2D736563 
 4600      74696F6E 
 4601              	.LASF106:
 4602 0112 443A5C45 		.ascii	"D:\\EE\\GitHub\\Psoc\\NeoPixel\\NeoPixel.cydsn\000"
 4602      455C4769 
 4602      74487562 
 4602      5C50736F 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 147


 4602      635C4E65 
 4603              	.LASF7:
 4604 013c 6C6F6E67 		.ascii	"long long unsigned int\000"
 4604      206C6F6E 
 4604      6720756E 
 4604      7369676E 
 4604      65642069 
 4605              	.LASF98:
 4606 0153 43795379 		.ascii	"CySysTickInitVar\000"
 4606      73546963 
 4606      6B496E69 
 4606      74566172 
 4606      00
 4607              	.LASF40:
 4608 0164 4379456E 		.ascii	"CyEnableInts\000"
 4608      61626C65 
 4608      496E7473 
 4608      00
 4609              	.LASF61:
 4610 0171 4379536F 		.ascii	"CySoftwareReset\000"
 4610      66747761 
 4610      72655265 
 4610      73657400 
 4611              	.LASF76:
 4612 0181 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4612      73546963 
 4612      6B456E61 
 4612      626C6549 
 4612      6E746572 
 4613              	.LASF44:
 4614 019a 4379496E 		.ascii	"CyIntGetState\000"
 4614      74476574 
 4614      53746174 
 4614      6500
 4615              	.LASF6:
 4616 01a8 6C6F6E67 		.ascii	"long long int\000"
 4616      206C6F6E 
 4616      6720696E 
 4616      7400
 4617              	.LASF0:
 4618 01b6 7369676E 		.ascii	"signed char\000"
 4618      65642063 
 4618      68617200 
 4619              	.LASF67:
 4620 01c2 66726571 		.ascii	"freq\000"
 4620      00
 4621              	.LASF74:
 4622 01c7 43794465 		.ascii	"CyDelayFreq\000"
 4622      6C617946 
 4622      72657100 
 4623              	.LASF23:
 4624 01d3 696E7465 		.ascii	"interruptState\000"
 4624      72727570 
 4624      74537461 
 4624      746500
 4625              	.LASF81:
 4626 01e2 43795379 		.ascii	"CySysTickGetReload\000"
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 148


 4626      73546963 
 4626      6B476574 
 4626      52656C6F 
 4626      616400
 4627              	.LASF4:
 4628 01f5 6C6F6E67 		.ascii	"long int\000"
 4628      20696E74 
 4628      00
 4629              	.LASF45:
 4630 01fe 4379496E 		.ascii	"CyIntDisable\000"
 4630      74446973 
 4630      61626C65 
 4630      00
 4631              	.LASF90:
 4632 020b 43795379 		.ascii	"CySysTickGetCallback\000"
 4632      73546963 
 4632      6B476574 
 4632      43616C6C 
 4632      6261636B 
 4633              	.LASF9:
 4634 0220 75696E74 		.ascii	"uint8\000"
 4634      3800
 4635              	.LASF95:
 4636 0226 63796465 		.ascii	"cydelayFreqKhz\000"
 4636      6C617946 
 4636      7265714B 
 4636      687A00
 4637              	.LASF28:
 4638 0235 656E6162 		.ascii	"enable\000"
 4638      6C6500
 4639              	.LASF13:
 4640 023c 646F7562 		.ascii	"double\000"
 4640      6C6500
 4641              	.LASF58:
 4642 0243 73686966 		.ascii	"shift\000"
 4642      7400
 4643              	.LASF33:
 4644 0249 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4644      734C7664 
 4644      436C6561 
 4644      72496E74 
 4644      65727275 
 4645              	.LASF11:
 4646 0260 75696E74 		.ascii	"uint32\000"
 4646      333200
 4647              	.LASF41:
 4648 0267 6D61736B 		.ascii	"mask\000"
 4648      00
 4649              	.LASF34:
 4650 026c 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4650      73436C6B 
 4650      47657453 
 4650      7973636C 
 4650      6B536F75 
 4651              	.LASF60:
 4652 0284 4379496E 		.ascii	"CyIntGetPriority\000"
 4652      74476574 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 149


 4652      5072696F 
 4652      72697479 
 4652      00
 4653              	.LASF97:
 4654 0295 63796465 		.ascii	"cydelay32kMs\000"
 4654      6C617933 
 4654      326B4D73 
 4654      00
 4655              	.LASF85:
 4656 02a2 43795379 		.ascii	"CySysTickInit\000"
 4656      73546963 
 4656      6B496E69 
 4656      7400
 4657              	.LASF59:
 4658 02b0 76616C75 		.ascii	"value\000"
 4658      6500
 4659              	.LASF91:
 4660 02b6 43794765 		.ascii	"CyGetUniqueId\000"
 4660      74556E69 
 4660      71756549 
 4660      6400
 4661              	.LASF83:
 4662 02c4 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4662      73546963 
 4662      6B476574 
 4662      436F756E 
 4662      74466C61 
 4663              	.LASF8:
 4664 02da 756E7369 		.ascii	"unsigned int\000"
 4664      676E6564 
 4664      20696E74 
 4664      00
 4665              	.LASF84:
 4666 02e7 43795379 		.ascii	"CySysTickClear\000"
 4666      73546963 
 4666      6B436C65 
 4666      617200
 4667              	.LASF5:
 4668 02f6 6C6F6E67 		.ascii	"long unsigned int\000"
 4668      20756E73 
 4668      69676E65 
 4668      6420696E 
 4668      7400
 4669              	.LASF80:
 4670 0308 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4670      734C7664 
 4670      47657449 
 4670      6E746572 
 4670      72757074 
 4671              	.LASF22:
 4672 0323 43795379 		.ascii	"CySysClkImoStop\000"
 4672      73436C6B 
 4672      496D6F53 
 4672      746F7000 
 4673              	.LASF101:
 4674 0333 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4674      74657243 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 150


 4674      72697469 
 4674      63616C53 
 4674      65637469 
 4675              	.LASF46:
 4676 034a 4379496E 		.ascii	"CyIntSetPending\000"
 4676      74536574 
 4676      50656E64 
 4676      696E6700 
 4677              	.LASF35:
 4678 035a 43795379 		.ascii	"CySysGetResetReason\000"
 4678      73476574 
 4678      52657365 
 4678      74526561 
 4678      736F6E00 
 4679              	.LASF3:
 4680 036e 73686F72 		.ascii	"short unsigned int\000"
 4680      7420756E 
 4680      7369676E 
 4680      65642069 
 4680      6E7400
 4681              	.LASF54:
 4682 0381 4379496E 		.ascii	"CyIntSetVector\000"
 4682      74536574 
 4682      56656374 
 4682      6F7200
 4683              	.LASF43:
 4684 0390 6E756D62 		.ascii	"number\000"
 4684      657200
 4685              	.LASF57:
 4686 0397 7072696F 		.ascii	"priority\000"
 4686      72697479 
 4686      00
 4687              	.LASF66:
 4688 03a0 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4688      73436C6B 
 4688      57726974 
 4688      65496D6F 
 4688      46726571 
 4689              	.LASF49:
 4690 03b5 4379496E 		.ascii	"CyIntSetSysVector\000"
 4690      74536574 
 4690      53797356 
 4690      6563746F 
 4690      7200
 4691              	.LASF26:
 4692 03c7 43795379 		.ascii	"CySysEnablePumpClock\000"
 4692      73456E61 
 4692      626C6550 
 4692      756D7043 
 4692      6C6F636B 
 4693              	.LASF16:
 4694 03dc 72656733 		.ascii	"reg32\000"
 4694      3200
 4695              	.LASF86:
 4696 03e2 43795379 		.ascii	"CySysTickStart\000"
 4696      73546963 
 4696      6B537461 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 151


 4696      727400
 4697              	.LASF37:
 4698 03f1 72657475 		.ascii	"returnStatus\000"
 4698      726E5374 
 4698      61747573 
 4698      00
 4699              	.LASF19:
 4700 03fe 73697A65 		.ascii	"sizetype\000"
 4700      74797065 
 4700      00
 4701              	.LASF47:
 4702 0407 4379496E 		.ascii	"CyIntClearPending\000"
 4702      74436C65 
 4702      61725065 
 4702      6E64696E 
 4702      6700
 4703              	.LASF18:
 4704 0419 6C6F6E67 		.ascii	"long double\000"
 4704      20646F75 
 4704      626C6500 
 4705              	.LASF50:
 4706 0425 61646472 		.ascii	"address\000"
 4706      65737300 
 4707              	.LASF69:
 4708 042d 62675472 		.ascii	"bgTrim5\000"
 4708      696D3500 
 4709              	.LASF29:
 4710 0435 73797363 		.ascii	"sysclkSource\000"
 4710      6C6B536F 
 4710      75726365 
 4710      00
 4711              	.LASF88:
 4712 0442 66756E63 		.ascii	"function\000"
 4712      74696F6E 
 4712      00
 4713              	.LASF99:
 4714 044b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4714      6F467265 
 4714      714D687A 
 4714      32526567 
 4714      00
 4715              	.LASF82:
 4716 045c 43795379 		.ascii	"CySysTickGetValue\000"
 4716      73546963 
 4716      6B476574 
 4716      56616C75 
 4716      6500
 4717              	.LASF94:
 4718 046e 63796465 		.ascii	"cydelayFreqHz\000"
 4718      6C617946 
 4718      72657148 
 4718      7A00
 4719              	.LASF56:
 4720 047c 4379496E 		.ascii	"CyIntSetPriority\000"
 4720      74536574 
 4720      5072696F 
 4720      72697479 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 152


 4720      00
 4721              	.LASF12:
 4722 048d 666C6F61 		.ascii	"float\000"
 4722      7400
 4723              	.LASF102:
 4724 0493 43794578 		.ascii	"CyExitCriticalSection\000"
 4724      69744372 
 4724      69746963 
 4724      616C5365 
 4724      6374696F 
 4725              	.LASF72:
 4726 04a9 43795379 		.ascii	"CySysLvdEnable\000"
 4726      734C7664 
 4726      456E6162 
 4726      6C6500
 4727              	.LASF20:
 4728 04b8 63795379 		.ascii	"cySysTickCallback\000"
 4728      73546963 
 4728      6B43616C 
 4728      6C626163 
 4728      6B00
 4729              	.LASF55:
 4730 04ca 4379496E 		.ascii	"CyIntGetVector\000"
 4730      74476574 
 4730      56656374 
 4730      6F7200
 4731              	.LASF63:
 4732 04d9 6D696C6C 		.ascii	"milliseconds\000"
 4732      69736563 
 4732      6F6E6473 
 4732      00
 4733              	.LASF103:
 4734 04e6 43794465 		.ascii	"CyDelayCycles\000"
 4734      6C617943 
 4734      79636C65 
 4734      7300
 4735              	.LASF15:
 4736 04f4 72656738 		.ascii	"reg8\000"
 4736      00
 4737              	.LASF73:
 4738 04f9 74687265 		.ascii	"threshold\000"
 4738      73686F6C 
 4738      6400
 4739              	.LASF48:
 4740 0503 43794861 		.ascii	"CyHalt\000"
 4740      6C7400
 4741              	.LASF1:
 4742 050a 756E7369 		.ascii	"unsigned char\000"
 4742      676E6564 
 4742      20636861 
 4742      7200
 4743              	.LASF2:
 4744 0518 73686F72 		.ascii	"short int\000"
 4744      7420696E 
 4744      7400
 4745              	.LASF42:
 4746 0522 4379496E 		.ascii	"CyIntEnable\000"
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 153


 4746      74456E61 
 4746      626C6500 
 4747              	.LASF53:
 4748 052e 4379496E 		.ascii	"CyIntGetSysVector\000"
 4748      74476574 
 4748      53797356 
 4748      6563746F 
 4748      7200
 4749              	.LASF27:
 4750 0540 636C6B53 		.ascii	"clkSelect\000"
 4750      656C6563 
 4750      7400
 4751              	.LASF64:
 4752 054a 43794465 		.ascii	"CyDelayUs\000"
 4752      6C617955 
 4752      7300
 4753              	.LASF36:
 4754 0554 72656173 		.ascii	"reason\000"
 4754      6F6E00
 4755              	.LASF14:
 4756 055b 63686172 		.ascii	"char\000"
 4756      00
 4757              	.LASF17:
 4758 0560 63796973 		.ascii	"cyisraddress\000"
 4758      72616464 
 4758      72657373 
 4758      00
 4759              	.LASF77:
 4760 056d 43795379 		.ascii	"CySysTickEnable\000"
 4760      73546963 
 4760      6B456E61 
 4760      626C6500 
 4761              	.LASF30:
 4762 057d 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4762      73436C6B 
 4762      57726974 
 4762      65537973 
 4762      636C6B44 
 4763              	.LASF87:
 4764 0594 43795379 		.ascii	"CySysTickSetCallback\000"
 4764      73546963 
 4764      6B536574 
 4764      43616C6C 
 4764      6261636B 
 4765              	.LASF93:
 4766 05a9 43795379 		.ascii	"CySysTickCallbacks\000"
 4766      73546963 
 4766      6B43616C 
 4766      6C626163 
 4766      6B7300
 4767              	.LASF92:
 4768 05bc 756E6971 		.ascii	"uniqueId\000"
 4768      75654964 
 4768      00
 4769              	.LASF62:
 4770 05c5 43794465 		.ascii	"CyDelay\000"
 4770      6C617900 
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 154


 4771              	.LASF78:
 4772 05cd 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4772      73546963 
 4772      6B446973 
 4772      61626C65 
 4772      496E7465 
 4773              	.LASF32:
 4774 05e7 43795379 		.ascii	"CySysLvdDisable\000"
 4774      734C7664 
 4774      44697361 
 4774      626C6500 
 4775              	.LASF96:
 4776 05f7 63796465 		.ascii	"cydelayFreqMhz\000"
 4776      6C617946 
 4776      7265714D 
 4776      687A00
 4777              	.LASF75:
 4778 0606 43795379 		.ascii	"CySysTickStop\000"
 4778      73546963 
 4778      6B53746F 
 4778      7000
 4779              	.LASF31:
 4780 0614 64697669 		.ascii	"divider\000"
 4780      64657200 
 4781              	.LASF21:
 4782 061c 43795379 		.ascii	"CySysClkImoStart\000"
 4782      73436C6B 
 4782      496D6F53 
 4782      74617274 
 4782      00
 4783              	.LASF70:
 4784 062d 6E657749 		.ascii	"newImoTrim2Value\000"
 4784      6D6F5472 
 4784      696D3256 
 4784      616C7565 
 4784      00
 4785              	.LASF105:
 4786 063e 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4786      72617465 
 4786      645F536F 
 4786      75726365 
 4786      5C50536F 
 4787              	.LASF65:
 4788 065d 6D696372 		.ascii	"microseconds\000"
 4788      6F736563 
 4788      6F6E6473 
 4788      00
 4789              	.LASF24:
 4790 066a 746D7052 		.ascii	"tmpReg\000"
 4790      656700
 4791              	.LASF79:
 4792 0671 43795379 		.ascii	"CySysTickSetReload\000"
 4792      73546963 
 4792      6B536574 
 4792      52656C6F 
 4792      616400
 4793              	.LASF107:
ARM GAS  C:\Users\jzapn\AppData\Local\Temp\cc9nTC1O.s 			page 155


 4794 0684 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4794      73546963 
 4794      6B536572 
 4794      76696365 
 4794      43616C6C 
 4795              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
